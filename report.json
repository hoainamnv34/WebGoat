{"errors": [{"code": 3, "level": "warn", "message": "Syntax error at line report.json:1:\n missing element", "path": "report.json", "type": "Syntax error"}, {"code": 3, "level": "warn", "message": "Syntax error at line Dockerfile:2:\n `= \"WebGoat: A deliberately insecure Web Application\"\nLABEL maintainer = \"WebGoat team\"\n\nRUN \\\n  useradd -ms /bin/bash webgoat && \\\n  chgrp -R 0 /home/webgoat && \\\n  chmod -R g=u /home/webgoat\n\nUSER webgoat\n\nCOPY --chown` was unexpected", "path": "Dockerfile", "spans": [{"end": {"col": 13, "line": 12, "offset": 219}, "file": "Dockerfile", "start": {"col": 12, "line": 2, "offset": 0}}, {"end": {"col": 7, "line": 17, "offset": 73}, "file": "Dockerfile", "start": {"col": 28, "line": 12, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 13, "line": 12, "offset": 219}, "path": "Dockerfile", "start": {"col": 12, "line": 2, "offset": 0}}, {"end": {"col": 7, "line": 17, "offset": 73}, "path": "Dockerfile", "start": {"col": 28, "line": 12, "offset": 0}}]]}, {"code": 2, "level": "warn", "message": "Timeout when running javascript.express.needle.ssrf.ssrf on src/main/resources/webgoat/static/js/libs/ace.js:\n ", "path": "src/main/resources/webgoat/static/js/libs/ace.js", "rule_id": "javascript.express.needle.ssrf.ssrf", "type": "Timeout"}, {"code": 2, "level": "warn", "message": "Timeout when running javascript.express.redos.express-redos.redos on src/main/resources/webgoat/static/js/libs/ace.js:\n ", "path": "src/main/resources/webgoat/static/js/libs/ace.js", "rule_id": "javascript.express.redos.express-redos.redos", "type": "Timeout"}, {"code": 2, "level": "warn", "message": "Timeout when running javascript.express.request.ssrf-deepsemgrep.ssrf-deepsemgrep on src/main/resources/webgoat/static/js/libs/ace.js:\n ", "path": "src/main/resources/webgoat/static/js/libs/ace.js", "rule_id": "javascript.express.request.ssrf-deepsemgrep.ssrf-deepsemgrep", "type": "Timeout"}, {"code": 3, "level": "warn", "message": "Syntax error at line src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html:2:\n `<% _.each(assignments, function(assignment) { %>` was unexpected", "path": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "spans": [{"end": {"col": 53, "line": 2, "offset": 48}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 5, "line": 2, "offset": 0}}, {"end": {"col": 39, "line": 3, "offset": 3}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 36, "line": 3, "offset": 0}}, {"end": {"col": 104, "line": 3, "offset": 34}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 70, "line": 3, "offset": 0}}, {"end": {"col": 144, "line": 3, "offset": 25}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 119, "line": 3, "offset": 0}}, {"end": {"col": 13, "line": 4, "offset": 8}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 5, "line": 4, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 53, "line": 2, "offset": 48}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 5, "line": 2, "offset": 0}}, {"end": {"col": 39, "line": 3, "offset": 3}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 36, "line": 3, "offset": 0}}, {"end": {"col": 104, "line": 3, "offset": 34}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 70, "line": 3, "offset": 0}}, {"end": {"col": 144, "line": 3, "offset": 25}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 119, "line": 3, "offset": 0}}, {"end": {"col": 13, "line": 4, "offset": 8}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "start": {"col": 5, "line": 4, "offset": 0}}]]}, {"code": 2, "level": "warn", "message": "Other syntax error at line src/main/resources/webgoat/static/js/libs/mode-java.js:1:\n Failure: lexing: empty token", "path": "src/main/resources/webgoat/static/js/libs/mode-java.js", "type": "Other syntax error"}, {"code": 3, "level": "warn", "message": "Syntax error at line src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html:4:\n `<% var baseUrl = overview.baseUrl; %>\n        <% _.each(overview.pages, function(page,index) { %>` was unexpected", "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "spans": [{"end": {"col": 60, "line": 5, "offset": 97}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 9, "line": 4, "offset": 0}}, {"end": {"col": 55, "line": 7, "offset": 42}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 13, "line": 7, "offset": 0}}, {"end": {"col": 107, "line": 8, "offset": 12}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 95, "line": 8, "offset": 0}}, {"end": {"col": 27, "line": 9, "offset": 14}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 13, "line": 9, "offset": 0}}, {"end": {"col": 85, "line": 10, "offset": 12}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 73, "line": 10, "offset": 0}}, {"end": {"col": 20, "line": 11, "offset": 7}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 13, "line": 11, "offset": 0}}, {"end": {"col": 18, "line": 13, "offset": 9}, "file": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 9, "line": 13, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 60, "line": 5, "offset": 97}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 9, "line": 4, "offset": 0}}, {"end": {"col": 55, "line": 7, "offset": 42}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 13, "line": 7, "offset": 0}}, {"end": {"col": 107, "line": 8, "offset": 12}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 95, "line": 8, "offset": 0}}, {"end": {"col": 27, "line": 9, "offset": 14}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 13, "line": 9, "offset": 0}}, {"end": {"col": 85, "line": 10, "offset": 12}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 73, "line": 10, "offset": 0}}, {"end": {"col": 20, "line": 11, "offset": 7}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 13, "line": 11, "offset": 0}}, {"end": {"col": 18, "line": 13, "offset": 9}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 9, "line": 13, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line mvnw:220:\n `case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac` was unexpected", "path": "mvnw", "spans": [{"end": {"col": 11, "line": 221, "offset": 64}, "file": "mvnw", "start": {"col": 7, "line": 220, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 11, "line": 221, "offset": 64}, "path": "mvnw", "start": {"col": 7, "line": 220, "offset": 0}}]]}], "interfile_languages_used": [], "paths": {"scanned": [".dockerignore", ".editorconfig", ".github/workflows/Clair-scan.yaml", ".github/workflows/anchore-scan.yaml", ".gitignore", ".mvn/wrapper/MavenWrapperDownloader.java", ".mvn/wrapper/maven-wrapper.properties", ".pre-commit-config.yaml", ".scannerwork/.sonar_lock", ".scannerwork/report-task.txt", "CODE_OF_CONDUCT.md", "CONTRIBUTING.md", "COPYRIGHT.txt", "CREATE_RELEASE.md", "Dockerfile", "Dockerfile_desktop", "FAQ.md", "LICENSE.txt", "PULL_REQUEST_TEMPLATE.md", "README.md", "README_I18N.md", "RELEASE_NOTES.md", "config/checkstyle/checkstyle.xml", "config/checkstyle/suppressions.xml", "config/dependency-check/project-suppression.xml", "config/desktop/WebGoat.txt", "config/desktop/start_webgoat.sh", "config/desktop/start_zap.sh", "docs/README.md", "docs/images/webgoat.png", "docs/index.html", "mvn-debug", "mvnw", "mvnw.cmd", "pom.xml", "report.json", "robot/README.md", "robot/goat.robot", "sonar-project.properties", "src/it/java/org/owasp/webgoat/AccessControlIntegrationTest.java", "src/it/java/org/owasp/webgoat/CSRFIntegrationTest.java", "src/it/java/org/owasp/webgoat/ChallengeIntegrationTest.java", "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java", "src/it/java/org/owasp/webgoat/DeserializationIntegrationTest.java", "src/it/java/org/owasp/webgoat/GeneralLessonIntegrationTest.java", "src/it/java/org/owasp/webgoat/IDORIntegrationTest.java", "src/it/java/org/owasp/webgoat/IntegrationTest.java", "src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java", "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java", "src/it/java/org/owasp/webgoat/PasswordResetLessonIntegrationTest.java", "src/it/java/org/owasp/webgoat/PathTraversalIntegrationTest.java", "src/it/java/org/owasp/webgoat/ProgressRaceConditionIntegrationTest.java", "src/it/java/org/owasp/webgoat/SSRFIntegrationTest.java", "src/it/java/org/owasp/webgoat/SessionManagementIntegrationTest.java", "src/it/java/org/owasp/webgoat/SqlInjectionAdvancedIntegrationTest.java", "src/it/java/org/owasp/webgoat/SqlInjectionLessonIntegrationTest.java", "src/it/java/org/owasp/webgoat/SqlInjectionMitigationIntegrationTest.java", "src/it/java/org/owasp/webgoat/WebWolfIntegrationTest.java", "src/it/java/org/owasp/webgoat/XSSIntegrationTest.java", "src/it/java/org/owasp/webgoat/XXEIntegrationTest.java", "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java", "src/main/java/org/owasp/webgoat/container/AjaxAuthenticationEntryPoint.java", "src/main/java/org/owasp/webgoat/container/AsciiDoctorTemplateResolver.java", "src/main/java/org/owasp/webgoat/container/DatabaseConfiguration.java", "src/main/java/org/owasp/webgoat/container/HammerHead.java", "src/main/java/org/owasp/webgoat/container/LessonDataSource.java", "src/main/java/org/owasp/webgoat/container/LessonTemplateResolver.java", "src/main/java/org/owasp/webgoat/container/MvcConfiguration.java", "src/main/java/org/owasp/webgoat/container/UserInterceptor.java", "src/main/java/org/owasp/webgoat/container/WebGoat.java", "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java", "src/main/java/org/owasp/webgoat/container/WebWolfRedirect.java", "src/main/java/org/owasp/webgoat/container/asciidoc/EnvironmentExposure.java", "src/main/java/org/owasp/webgoat/container/asciidoc/OperatingSystemMacro.java", "src/main/java/org/owasp/webgoat/container/asciidoc/UsernameMacro.java", "src/main/java/org/owasp/webgoat/container/asciidoc/WebGoatTmpDirMacro.java", "src/main/java/org/owasp/webgoat/container/asciidoc/WebGoatVersionMacro.java", "src/main/java/org/owasp/webgoat/container/asciidoc/WebWolfMacro.java", "src/main/java/org/owasp/webgoat/container/asciidoc/WebWolfRootMacro.java", "src/main/java/org/owasp/webgoat/container/assignments/AssignmentEndpoint.java", "src/main/java/org/owasp/webgoat/container/assignments/AssignmentHints.java", "src/main/java/org/owasp/webgoat/container/assignments/AssignmentPath.java", "src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java", "src/main/java/org/owasp/webgoat/container/assignments/LessonTrackerInterceptor.java", "src/main/java/org/owasp/webgoat/container/controller/StartLesson.java", "src/main/java/org/owasp/webgoat/container/controller/Welcome.java", "src/main/java/org/owasp/webgoat/container/i18n/Language.java", "src/main/java/org/owasp/webgoat/container/i18n/Messages.java", "src/main/java/org/owasp/webgoat/container/i18n/PluginMessages.java", "src/main/java/org/owasp/webgoat/container/lessons/Assignment.java", "src/main/java/org/owasp/webgoat/container/lessons/Category.java", "src/main/java/org/owasp/webgoat/container/lessons/CourseConfiguration.java", "src/main/java/org/owasp/webgoat/container/lessons/Hint.java", "src/main/java/org/owasp/webgoat/container/lessons/Initializeable.java", "src/main/java/org/owasp/webgoat/container/lessons/Lesson.java", "src/main/java/org/owasp/webgoat/container/lessons/LessonConnectionInvocationHandler.java", "src/main/java/org/owasp/webgoat/container/lessons/LessonInfoModel.java", "src/main/java/org/owasp/webgoat/container/lessons/LessonMenuItem.java", "src/main/java/org/owasp/webgoat/container/lessons/LessonMenuItemType.java", "src/main/java/org/owasp/webgoat/container/lessons/LessonScanner.java", "src/main/java/org/owasp/webgoat/container/service/EnvironmentService.java", "src/main/java/org/owasp/webgoat/container/service/HintService.java", "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java", "src/main/java/org/owasp/webgoat/container/service/LabelService.java", "src/main/java/org/owasp/webgoat/container/service/LessonInfoService.java", "src/main/java/org/owasp/webgoat/container/service/LessonMenuService.java", "src/main/java/org/owasp/webgoat/container/service/LessonProgressService.java", "src/main/java/org/owasp/webgoat/container/service/LessonTitleService.java", "src/main/java/org/owasp/webgoat/container/service/ReportCardService.java", "src/main/java/org/owasp/webgoat/container/service/RestartLessonService.java", "src/main/java/org/owasp/webgoat/container/service/SessionService.java", "src/main/java/org/owasp/webgoat/container/session/Course.java", "src/main/java/org/owasp/webgoat/container/session/LabelDebugger.java", "src/main/java/org/owasp/webgoat/container/session/UserSessionData.java", "src/main/java/org/owasp/webgoat/container/session/WebSession.java", "src/main/java/org/owasp/webgoat/container/users/LessonTracker.java", "src/main/java/org/owasp/webgoat/container/users/RegistrationController.java", "src/main/java/org/owasp/webgoat/container/users/Scoreboard.java", "src/main/java/org/owasp/webgoat/container/users/UserForm.java", "src/main/java/org/owasp/webgoat/container/users/UserRepository.java", "src/main/java/org/owasp/webgoat/container/users/UserService.java", "src/main/java/org/owasp/webgoat/container/users/UserSession.java", "src/main/java/org/owasp/webgoat/container/users/UserTracker.java", "src/main/java/org/owasp/webgoat/container/users/UserTrackerRepository.java", "src/main/java/org/owasp/webgoat/container/users/UserValidator.java", "src/main/java/org/owasp/webgoat/container/users/WebGoatUser.java", "src/main/java/org/owasp/webgoat/lessons/authbypass/AccountVerificationHelper.java", "src/main/java/org/owasp/webgoat/lessons/authbypass/AuthBypass.java", "src/main/java/org/owasp/webgoat/lessons/authbypass/VerifyAccount.java", "src/main/java/org/owasp/webgoat/lessons/bypassrestrictions/BypassRestrictions.java", "src/main/java/org/owasp/webgoat/lessons/bypassrestrictions/BypassRestrictionsFieldRestrictions.java", "src/main/java/org/owasp/webgoat/lessons/bypassrestrictions/BypassRestrictionsFrontendValidation.java", "src/main/java/org/owasp/webgoat/lessons/challenges/ChallengeIntro.java", "src/main/java/org/owasp/webgoat/lessons/challenges/Email.java", "src/main/java/org/owasp/webgoat/lessons/challenges/Flag.java", "src/main/java/org/owasp/webgoat/lessons/challenges/FlagController.java", "src/main/java/org/owasp/webgoat/lessons/challenges/Flags.java", "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Challenge1.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Challenge5.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Challenge7.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge8/Assignment8.java", "src/main/java/org/owasp/webgoat/lessons/challenges/challenge8/Challenge8.java", "src/main/java/org/owasp/webgoat/lessons/chromedevtools/ChromeDevTools.java", "src/main/java/org/owasp/webgoat/lessons/chromedevtools/NetworkDummy.java", "src/main/java/org/owasp/webgoat/lessons/chromedevtools/NetworkLesson.java", "src/main/java/org/owasp/webgoat/lessons/cia/CIA.java", "src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java", "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ClientSideFiltering.java", "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ClientSideFilteringAssignment.java", "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ClientSideFilteringFreeAssignment.java", "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java", "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ShopEndpoint.java", "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java", "src/main/java/org/owasp/webgoat/lessons/cryptography/Cryptography.java", "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java", "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java", "src/main/java/org/owasp/webgoat/lessons/cryptography/SecureDefaultsAssignment.java", "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java", "src/main/java/org/owasp/webgoat/lessons/cryptography/XOREncodingAssignment.java", "src/main/java/org/owasp/webgoat/lessons/csrf/CSRF.java", "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFConfirmFlag1.java", "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFFeedback.java", "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java", "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFLogin.java", "src/main/java/org/owasp/webgoat/lessons/csrf/ForgedReviews.java", "src/main/java/org/owasp/webgoat/lessons/csrf/Review.java", "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserialization.java", "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java", "src/main/java/org/owasp/webgoat/lessons/deserialization/SerializationHelper.java", "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSession.java", "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java", "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/Authentication.java", "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/AuthenticationProvider.java", "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java", "src/main/java/org/owasp/webgoat/lessons/htmltampering/HtmlTampering.java", "src/main/java/org/owasp/webgoat/lessons/htmltampering/HtmlTamperingTask.java", "src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasics.java", "src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasicsLesson.java", "src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasicsQuiz.java", "src/main/java/org/owasp/webgoat/lessons/httpproxies/HttpBasicsInterceptRequest.java", "src/main/java/org/owasp/webgoat/lessons/httpproxies/HttpProxies.java", "src/main/java/org/owasp/webgoat/lessons/idor/IDOR.java", "src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java", "src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfile.java", "src/main/java/org/owasp/webgoat/lessons/idor/IDORLogin.java", "src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOtherProfile.java", "src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfile.java", "src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfileAltUrl.java", "src/main/java/org/owasp/webgoat/lessons/idor/UserProfile.java", "src/main/java/org/owasp/webgoat/lessons/insecurelogin/InsecureLogin.java", "src/main/java/org/owasp/webgoat/lessons/insecurelogin/InsecureLoginTask.java", "src/main/java/org/owasp/webgoat/lessons/jwt/JWT.java", "src/main/java/org/owasp/webgoat/lessons/jwt/JWTDecodeEndpoint.java", "src/main/java/org/owasp/webgoat/lessons/jwt/JWTQuiz.java", "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java", "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java", "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java", "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpoint.java", "src/main/java/org/owasp/webgoat/lessons/jwt/votes/Views.java", "src/main/java/org/owasp/webgoat/lessons/jwt/votes/Vote.java", "src/main/java/org/owasp/webgoat/lessons/lessontemplate/LessonTemplate.java", "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java", "src/main/java/org/owasp/webgoat/lessons/logging/LogBleedingTask.java", "src/main/java/org/owasp/webgoat/lessons/logging/LogSpoofing.java", "src/main/java/org/owasp/webgoat/lessons/logging/LogSpoofingTask.java", "src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java", "src/main/java/org/owasp/webgoat/lessons/missingac/MissingAccessControlUserRepository.java", "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java", "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACHiddenMenus.java", "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java", "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHash.java", "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHashAdmin.java", "src/main/java/org/owasp/webgoat/lessons/missingac/User.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/PasswordReset.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/PasswordResetEmail.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/QuestionsAssignment.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignment.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/SimpleMailAssignment.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/TriedQuestions.java", "src/main/java/org/owasp/webgoat/lessons/passwordreset/resetlink/PasswordChangeForm.java", "src/main/java/org/owasp/webgoat/lessons/pathtraversal/PathTraversal.java", "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java", "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java", "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java", "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java", "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java", "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswords.java", "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookie.java", "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionAdvanced.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjection.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10a.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson13.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionMitigations.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java", "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java", "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRF.java", "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java", "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java", "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/Contact.java", "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/ContactImpl.java", "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponents.java", "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java", "src/main/java/org/owasp/webgoat/lessons/webgoatintroduction/WebGoatIntroduction.java", "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/Email.java", "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/LandingAssignment.java", "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/MailAssignment.java", "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/WebWolfIntroduction.java", "src/main/java/org/owasp/webgoat/lessons/xss/Comment.java", "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScripting.java", "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson1.java", "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java", "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson4.java", "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson6a.java", "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingMitigation.java", "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingQuiz.java", "src/main/java/org/owasp/webgoat/lessons/xss/DOMCrossSiteScripting.java", "src/main/java/org/owasp/webgoat/lessons/xss/DOMCrossSiteScriptingVerifier.java", "src/main/java/org/owasp/webgoat/lessons/xss/stored/CrossSiteScriptingStored.java", "src/main/java/org/owasp/webgoat/lessons/xss/stored/StoredCrossSiteScriptingVerifier.java", "src/main/java/org/owasp/webgoat/lessons/xss/stored/StoredXssComments.java", "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java", "src/main/java/org/owasp/webgoat/lessons/xxe/Comment.java", "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java", "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsEndpoint.java", "src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java", "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java", "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java", "src/main/java/org/owasp/webgoat/lessons/xxe/User.java", "src/main/java/org/owasp/webgoat/lessons/xxe/XXE.java", "src/main/java/org/owasp/webgoat/server/ParentConfig.java", "src/main/java/org/owasp/webgoat/server/StartWebGoat.java", "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "src/main/java/org/owasp/webgoat/webwolf/MvcConfiguration.java", "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java", "src/main/java/org/owasp/webgoat/webwolf/WebWolf.java", "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java", "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java", "src/main/java/org/owasp/webgoat/webwolf/mailbox/Email.java", "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java", "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxRepository.java", "src/main/java/org/owasp/webgoat/webwolf/requests/LandingPage.java", "src/main/java/org/owasp/webgoat/webwolf/requests/Requests.java", "src/main/java/org/owasp/webgoat/webwolf/requests/WebWolfTraceRepository.java", "src/main/java/org/owasp/webgoat/webwolf/user/UserRepository.java", "src/main/java/org/owasp/webgoat/webwolf/user/UserService.java", "src/main/java/org/owasp/webgoat/webwolf/user/WebGoatUser.java", "src/main/resources/application-webgoat.properties", "src/main/resources/application-webwolf.properties", "src/main/resources/banner.txt", "src/main/resources/db/container/V1__init.sql", "src/main/resources/db/container/V2__version.sql", "src/main/resources/db/container/V3__id.sql", "src/main/resources/goatkeystore.pkcs12", "src/main/resources/i18n/messages.properties", "src/main/resources/i18n/messages_de.properties", "src/main/resources/i18n/messages_fr.properties", "src/main/resources/i18n/messages_nl.properties", "src/main/resources/i18n/messages_ru.properties", "src/main/resources/lessons/authbypass/documentation/2fa-bypass.adoc", "src/main/resources/lessons/authbypass/documentation/bypass-intro.adoc", "src/main/resources/lessons/authbypass/documentation/lesson-template-video.adoc", "src/main/resources/lessons/authbypass/html/AuthBypass.html", "src/main/resources/lessons/authbypass/i18n/WebGoatLabels.properties", "src/main/resources/lessons/authbypass/images/firefox-proxy-config.png", "src/main/resources/lessons/authbypass/images/paypal-2fa-bypass.png", "src/main/resources/lessons/authbypass/js/bypass.js", "src/main/resources/lessons/bypassrestrictions/css/bypass-restrictions.css", "src/main/resources/lessons/bypassrestrictions/documentation/BypassRestrictions_FieldRestrictions.adoc", "src/main/resources/lessons/bypassrestrictions/documentation/BypassRestrictions_FrontendValidation.adoc", "src/main/resources/lessons/bypassrestrictions/documentation/BypassRestrictions_Intro.adoc", "src/main/resources/lessons/bypassrestrictions/html/BypassRestrictions.html", "src/main/resources/lessons/bypassrestrictions/i18n/WebGoatLabels.properties", "src/main/resources/lessons/challenges/challenge7/git.zip", "src/main/resources/lessons/challenges/css/challenge6.css", "src/main/resources/lessons/challenges/css/challenge8.css", "src/main/resources/lessons/challenges/db/migration/V2018_09_26_1__users.sql", "src/main/resources/lessons/challenges/documentation/Challenge_1.adoc", "src/main/resources/lessons/challenges/documentation/Challenge_5.adoc", "src/main/resources/lessons/challenges/documentation/Challenge_6.adoc", "src/main/resources/lessons/challenges/documentation/Challenge_7.adoc", "src/main/resources/lessons/challenges/documentation/Challenge_8.adoc", "src/main/resources/lessons/challenges/documentation/Challenge_introduction.adoc", "src/main/resources/lessons/challenges/html/Challenge.html", "src/main/resources/lessons/challenges/html/Challenge1.html", "src/main/resources/lessons/challenges/html/Challenge5.html", "src/main/resources/lessons/challenges/html/Challenge6.html", "src/main/resources/lessons/challenges/html/Challenge7.html", "src/main/resources/lessons/challenges/html/Challenge8.html", "src/main/resources/lessons/challenges/i18n/WebGoatLabels.properties", "src/main/resources/lessons/challenges/images/avatar1.png", "src/main/resources/lessons/challenges/images/boss.jpg", "src/main/resources/lessons/challenges/images/challenge1-small.png", "src/main/resources/lessons/challenges/images/challenge1.png", "src/main/resources/lessons/challenges/images/challenge2-small.png", "src/main/resources/lessons/challenges/images/challenge2.png", "src/main/resources/lessons/challenges/images/challenge3-small.png", "src/main/resources/lessons/challenges/images/challenge3.png", "src/main/resources/lessons/challenges/images/challenge4-small.png", "src/main/resources/lessons/challenges/images/challenge4.png", "src/main/resources/lessons/challenges/images/challenge5-small.png", "src/main/resources/lessons/challenges/images/challenge5.png", "src/main/resources/lessons/challenges/images/hi-five-cat.jpg", "src/main/resources/lessons/challenges/images/user1.png", "src/main/resources/lessons/challenges/images/user2.png", "src/main/resources/lessons/challenges/images/user3.png", "src/main/resources/lessons/challenges/images/webgoat2.png", "src/main/resources/lessons/challenges/js/challenge6.js", "src/main/resources/lessons/challenges/js/challenge8.js", "src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_Assignment.adoc", "src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_Assignment_Network.adoc", "src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_console.adoc", "src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_elements.adoc", "src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_intro.adoc", "src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_sources.adoc", "src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html", "src/main/resources/lessons/chromedevtools/i18n/WebGoatLabels.properties", "src/main/resources/lessons/chromedevtools/images/ChromeDev_Console_Clear.jpg", "src/main/resources/lessons/chromedevtools/images/ChromeDev_Console_Ex.jpg", "src/main/resources/lessons/chromedevtools/images/ChromeDev_Elements.jpg", "src/main/resources/lessons/chromedevtools/images/ChromeDev_Elements_CSS.jpg", "src/main/resources/lessons/chromedevtools/images/ChromeDev_Network.jpg", "src/main/resources/lessons/chromedevtools/images/ChromeDev_Sources.jpg", "src/main/resources/lessons/cia/documentation/CIA_availability.adoc", "src/main/resources/lessons/cia/documentation/CIA_confidentiality.adoc", "src/main/resources/lessons/cia/documentation/CIA_integrity.adoc", "src/main/resources/lessons/cia/documentation/CIA_intro.adoc", "src/main/resources/lessons/cia/documentation/CIA_quiz.adoc", "src/main/resources/lessons/cia/html/CIA.html", "src/main/resources/lessons/cia/i18n/WebGoatLabels.properties", "src/main/resources/lessons/cia/js/questions_cia.json", "src/main/resources/lessons/clientsidefiltering/css/clientSideFiltering-stage1.css", "src/main/resources/lessons/clientsidefiltering/css/clientSideFilteringFree.css", "src/main/resources/lessons/clientsidefiltering/documentation/ClientSideFiltering_assignment.adoc", "src/main/resources/lessons/clientsidefiltering/documentation/ClientSideFiltering_final.adoc", "src/main/resources/lessons/clientsidefiltering/documentation/ClientSideFiltering_plan.adoc", "src/main/resources/lessons/clientsidefiltering/html/ClientSideFiltering.html", "src/main/resources/lessons/clientsidefiltering/i18n/WebGoatLabels.properties", "src/main/resources/lessons/clientsidefiltering/images/lesson1_header.jpg", "src/main/resources/lessons/clientsidefiltering/images/lesson1_workspace.jpg", "src/main/resources/lessons/clientsidefiltering/images/samsung-black.jpg", "src/main/resources/lessons/clientsidefiltering/images/samsung-grey.jpg", "src/main/resources/lessons/clientsidefiltering/js/clientSideFiltering.js", "src/main/resources/lessons/clientsidefiltering/js/clientSideFilteringFree.js", "src/main/resources/lessons/clientsidefiltering/lessonSolutions/en/ClientSideFiltering.html", "src/main/resources/lessons/clientsidefiltering/lessonSolutions/en/ClientSideFiltering_files/clientside_firebug.jpg", "src/main/resources/lessons/cryptography/documentation/Crypto_plan.adoc", "src/main/resources/lessons/cryptography/documentation/defaults.adoc", "src/main/resources/lessons/cryptography/documentation/encoding_plan.adoc", "src/main/resources/lessons/cryptography/documentation/encoding_plan2.adoc", "src/main/resources/lessons/cryptography/documentation/encryption.adoc", "src/main/resources/lessons/cryptography/documentation/hashing_plan.adoc", "src/main/resources/lessons/cryptography/documentation/keystores.adoc", "src/main/resources/lessons/cryptography/documentation/postquantum.adoc", "src/main/resources/lessons/cryptography/documentation/signing.adoc", "src/main/resources/lessons/cryptography/html/Cryptography.html", "src/main/resources/lessons/cryptography/i18n/WebGoatLabels.properties", "src/main/resources/lessons/csrf/css/reviews.css", "src/main/resources/lessons/csrf/documentation/CSRF_Basic_Get-1.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_ContentType.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_Frameworks.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_GET.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_Get_Flag.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_Impact_Defense.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_JSON.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_Login.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_Reviews.adoc", "src/main/resources/lessons/csrf/documentation/CSRF_intro.adoc", "src/main/resources/lessons/csrf/html/CSRF.html", "src/main/resources/lessons/csrf/i18n/WebGoatLabels.properties", "src/main/resources/lessons/csrf/images/login-csrf.png", "src/main/resources/lessons/csrf/js/csrf-review.js", "src/main/resources/lessons/csrf/js/feedback.js", "src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_GadgetChain.adoc", "src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_Intro.adoc", "src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_SimpleExploit.adoc", "src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_Task.adoc", "src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_WhatIs.adoc", "src/main/resources/lessons/deserialization/html/InsecureDeserialization.html", "src/main/resources/lessons/deserialization/i18n/WebGoatLabels.properties", "src/main/resources/lessons/employees.xml", "src/main/resources/lessons/hijacksession/documentation/HijackSession_content0.adoc", "src/main/resources/lessons/hijacksession/documentation/HijackSession_plan.adoc", "src/main/resources/lessons/hijacksession/html/HijackSession.html", "src/main/resources/lessons/hijacksession/i18n/WebGoatLabels.properties", "src/main/resources/lessons/hijacksession/lessonSolutions/en/HijackSession_solution.adoc", "src/main/resources/lessons/hijacksession/lessonSolutions/html/HijackSession.html", "src/main/resources/lessons/hijacksession/templates/hijackform.html", "src/main/resources/lessons/htmltampering/documentation/HtmlTampering_Intro.adoc", "src/main/resources/lessons/htmltampering/documentation/HtmlTampering_Mitigation.adoc", "src/main/resources/lessons/htmltampering/documentation/HtmlTampering_Task.adoc", "src/main/resources/lessons/htmltampering/html/HtmlTampering.html", "src/main/resources/lessons/htmltampering/i18n/WebGoatLabels.properties", "src/main/resources/lessons/htmltampering/images/samsung.jpg", "src/main/resources/lessons/httpbasics/documentation/HttpBasics_content1.adoc", "src/main/resources/lessons/httpbasics/documentation/HttpBasics_content2.adoc", "src/main/resources/lessons/httpbasics/documentation/HttpBasics_plan.adoc", "src/main/resources/lessons/httpbasics/html/HttpBasics.html", "src/main/resources/lessons/httpbasics/i18n/WebGoatLabels.properties", "src/main/resources/lessons/httpbasics/i18n/WebGoatLabels_de.properties", "src/main/resources/lessons/httpbasics/i18n/WebGoatLabels_fr.properties", "src/main/resources/lessons/httpbasics/i18n/WebGoatLabels_nl.properties", "src/main/resources/lessons/httpbasics/i18n/WebGoatLabels_ru.properties", "src/main/resources/lessons/httpproxies/documentation/0overview.adoc", "src/main/resources/lessons/httpproxies/documentation/10burp.adoc", "src/main/resources/lessons/httpproxies/documentation/1proxysetupsteps.adoc", "src/main/resources/lessons/httpproxies/documentation/3browsersetup.adoc", "src/main/resources/lessons/httpproxies/documentation/5configurefilterandbreakpoints.adoc", "src/main/resources/lessons/httpproxies/documentation/6assignment.adoc", "src/main/resources/lessons/httpproxies/documentation/7resend.adoc", "src/main/resources/lessons/httpproxies/documentation/8httpsproxy.adoc", "src/main/resources/lessons/httpproxies/documentation/9manual.adoc", "src/main/resources/lessons/httpproxies/html/HttpProxies.html", "src/main/resources/lessons/httpproxies/i18n/WebGoatLabels.properties", "src/main/resources/lessons/httpproxies/images/breakpoint.png", "src/main/resources/lessons/httpproxies/images/breakpoint2.png", "src/main/resources/lessons/httpproxies/images/burpfilter.png", "src/main/resources/lessons/httpproxies/images/burpfilterclient.png", "src/main/resources/lessons/httpproxies/images/burpintercept.png", "src/main/resources/lessons/httpproxies/images/burpintercepted.png", "src/main/resources/lessons/httpproxies/images/burpproxy.png", "src/main/resources/lessons/httpproxies/images/burpwarn.png", "src/main/resources/lessons/httpproxies/images/chrome-manual-proxy-win.png", "src/main/resources/lessons/httpproxies/images/chrome-manual-proxy.png", "src/main/resources/lessons/httpproxies/images/firefox-proxy-config.png", "src/main/resources/lessons/httpproxies/images/firefoxsettingscerts.png", "src/main/resources/lessons/httpproxies/images/importcerts.png", "src/main/resources/lessons/httpproxies/images/loginscreen.png", "src/main/resources/lessons/httpproxies/images/newlocalhost.png", "src/main/resources/lessons/httpproxies/images/proxy-intercept-button.png", "src/main/resources/lessons/httpproxies/images/proxy-intercept-details.png", "src/main/resources/lessons/httpproxies/images/rootca.png", "src/main/resources/lessons/httpproxies/images/savecerts.png", "src/main/resources/lessons/httpproxies/images/zap-browser-button.png", "src/main/resources/lessons/httpproxies/images/zap-exclude.png", "src/main/resources/lessons/httpproxies/images/zap-history.png", "src/main/resources/lessons/httpproxies/images/zap-start.png", "src/main/resources/lessons/httpproxies/images/zap_edit_and_resend.png", "src/main/resources/lessons/httpproxies/images/zap_edit_and_response.png", "src/main/resources/lessons/httpproxies/images/zap_edit_and_send.png", "src/main/resources/lessons/httpproxies/images/zap_exclude.png", "src/main/resources/lessons/httpproxies/images/zap_exclude_url.png", "src/main/resources/lessons/idor/documentation/IDOR_editOtherProfile.adoc", "src/main/resources/lessons/idor/documentation/IDOR_editOwnProfile.adoc", "src/main/resources/lessons/idor/documentation/IDOR_inputAltPath.adoc", "src/main/resources/lessons/idor/documentation/IDOR_intro.adoc", "src/main/resources/lessons/idor/documentation/IDOR_login.adoc", "src/main/resources/lessons/idor/documentation/IDOR_mitigation.adoc", "src/main/resources/lessons/idor/documentation/IDOR_viewDiffs.adoc", "src/main/resources/lessons/idor/documentation/IDOR_viewOtherProfile.adoc", "src/main/resources/lessons/idor/documentation/IDOR_viewOwnAltPath.adoc", "src/main/resources/lessons/idor/documentation/IDOR_whatDiffs.adoc", "src/main/resources/lessons/idor/documentation/temp.txt", "src/main/resources/lessons/idor/html/IDOR.html", "src/main/resources/lessons/idor/i18n/WebGoatLabels.properties", "src/main/resources/lessons/idor/js/idor.js", "src/main/resources/lessons/insecurelogin/documentation/InsecureLogin_Intro.adoc", "src/main/resources/lessons/insecurelogin/documentation/InsecureLogin_Task.adoc", "src/main/resources/lessons/insecurelogin/html/InsecureLogin.html", "src/main/resources/lessons/insecurelogin/i18n/WebGoatLabels.properties", "src/main/resources/lessons/insecurelogin/js/credentials.js", "src/main/resources/lessons/jwt/css/jwt.css", "src/main/resources/lessons/jwt/db/migration/V2019_09_25_1__jwt.sql", "src/main/resources/lessons/jwt/documentation/JWT_attacks.adoc", "src/main/resources/lessons/jwt/documentation/JWT_claim_misuse.adoc", "src/main/resources/lessons/jwt/documentation/JWT_claim_misuse_jku.adoc", "src/main/resources/lessons/jwt/documentation/JWT_claim_misuse_jku_assignment.adoc", "src/main/resources/lessons/jwt/documentation/JWT_claim_misuse_kid.adoc", "src/main/resources/lessons/jwt/documentation/JWT_claim_misuse_kid_assignment.adoc", "src/main/resources/lessons/jwt/documentation/JWT_decode.adoc", "src/main/resources/lessons/jwt/documentation/JWT_libraries.adoc", "src/main/resources/lessons/jwt/documentation/JWT_libraries_assignment.adoc", "src/main/resources/lessons/jwt/documentation/JWT_libraries_assignment2.adoc", "src/main/resources/lessons/jwt/documentation/JWT_libraries_solution.adoc", "src/main/resources/lessons/jwt/documentation/JWT_login_to_token.adoc", "src/main/resources/lessons/jwt/documentation/JWT_mitigation.adoc", "src/main/resources/lessons/jwt/documentation/JWT_plan.adoc", "src/main/resources/lessons/jwt/documentation/JWT_refresh.adoc", "src/main/resources/lessons/jwt/documentation/JWT_refresh_assignment.adoc", "src/main/resources/lessons/jwt/documentation/JWT_signing.adoc", "src/main/resources/lessons/jwt/documentation/JWT_signing_solution.adoc", "src/main/resources/lessons/jwt/documentation/JWT_storing.adoc", "src/main/resources/lessons/jwt/documentation/JWT_structure.adoc", "src/main/resources/lessons/jwt/documentation/JWT_weak_keys", "src/main/resources/lessons/jwt/html/JWT.html", "src/main/resources/lessons/jwt/i18n/WebGoatLabels.properties", "src/main/resources/lessons/jwt/images/challenge1-small.png", "src/main/resources/lessons/jwt/images/challenge2-small.png", "src/main/resources/lessons/jwt/images/challenge3-small.png", "src/main/resources/lessons/jwt/images/challenge4-small.png", "src/main/resources/lessons/jwt/images/challenge5-small.png", "src/main/resources/lessons/jwt/images/jerry.png", "src/main/resources/lessons/jwt/images/jwt_diagram.png", "src/main/resources/lessons/jwt/images/jwt_token.png", "src/main/resources/lessons/jwt/images/logs.txt", "src/main/resources/lessons/jwt/images/product-icon.png", "src/main/resources/lessons/jwt/images/tom.png", "src/main/resources/lessons/jwt/js/jwt-buy.js", "src/main/resources/lessons/jwt/js/jwt-final.js", "src/main/resources/lessons/jwt/js/jwt-refresh.js", "src/main/resources/lessons/jwt/js/jwt-voting.js", "src/main/resources/lessons/jwt/js/jwt-weak-keys.js", "src/main/resources/lessons/jwt/js/questions_jwt.json", "src/main/resources/lessons/lessontemplate/db/migration/V2019_11_10_1__introduction.sql", "src/main/resources/lessons/lessontemplate/documentation/lesson-template-attack.adoc", "src/main/resources/lessons/lessontemplate/documentation/lesson-template-content.adoc", "src/main/resources/lessons/lessontemplate/documentation/lesson-template-database.adoc", "src/main/resources/lessons/lessontemplate/documentation/lesson-template-glue.adoc", "src/main/resources/lessons/lessontemplate/documentation/lesson-template-intro.adoc", "src/main/resources/lessons/lessontemplate/documentation/lesson-template-lesson-class.adoc", "src/main/resources/lessons/lessontemplate/documentation/lesson-template-video-more.adoc", "src/main/resources/lessons/lessontemplate/documentation/lesson-template-video.adoc", "src/main/resources/lessons/lessontemplate/html/LessonTemplate.html", "src/main/resources/lessons/lessontemplate/i18n/WebGoatLabels.properties", "src/main/resources/lessons/lessontemplate/images/firefox-proxy-config.png", "src/main/resources/lessons/lessontemplate/js/idor.js", "src/main/resources/lessons/logging/documentation/logReading_Task.adoc", "src/main/resources/lessons/logging/documentation/logSpoofing_Task.adoc", "src/main/resources/lessons/logging/documentation/logging_intro.adoc", "src/main/resources/lessons/logging/documentation/more_logging.adoc", "src/main/resources/lessons/logging/documentation/sensitive_logging_intro.adoc", "src/main/resources/lessons/logging/html/LogSpoofing.html", "src/main/resources/lessons/logging/i18n/WebGoatLabels.properties", "src/main/resources/lessons/missingac/css/ac.css", "src/main/resources/lessons/missingac/db/migration/V2021_11_03_1__ac.sql", "src/main/resources/lessons/missingac/documentation/missing-function-ac-01-intro.adoc", "src/main/resources/lessons/missingac/documentation/missing-function-ac-02-client-controls.adoc", "src/main/resources/lessons/missingac/documentation/missing-function-ac-03-users.adoc", "src/main/resources/lessons/missingac/documentation/missing-function-ac-04-users-fixed.adoc", "src/main/resources/lessons/missingac/html/MissingFunctionAC.html", "src/main/resources/lessons/missingac/i18n/WebGoatLabels.properties", "src/main/resources/lessons/passwordreset/css/password.css", "src/main/resources/lessons/passwordreset/documentation/PasswordReset_SecurityQuestions.adoc", "src/main/resources/lessons/passwordreset/documentation/PasswordReset_host_header.adoc", "src/main/resources/lessons/passwordreset/documentation/PasswordReset_known_questions.adoc", "src/main/resources/lessons/passwordreset/documentation/PasswordReset_mitigation.adoc", "src/main/resources/lessons/passwordreset/documentation/PasswordReset_plan.adoc", "src/main/resources/lessons/passwordreset/documentation/PasswordReset_simple.adoc", "src/main/resources/lessons/passwordreset/documentation/PasswordReset_wrong_message.adoc", "src/main/resources/lessons/passwordreset/html/PasswordReset.html", "src/main/resources/lessons/passwordreset/i18n/WebGoatLabels.properties", "src/main/resources/lessons/passwordreset/images/reset1.png", "src/main/resources/lessons/passwordreset/images/reset2.png", "src/main/resources/lessons/passwordreset/images/slack1.png", "src/main/resources/lessons/passwordreset/images/slack2.png", "src/main/resources/lessons/passwordreset/js/password-reset-simple.js", "src/main/resources/lessons/passwordreset/templates/password_link_not_found.html", "src/main/resources/lessons/passwordreset/templates/password_reset.html", "src/main/resources/lessons/passwordreset/templates/success.html", "src/main/resources/lessons/pathtraversal/css/path_traversal.css", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_intro.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_retrieval.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload_fix.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload_fixed.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload_mitigation.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload_remove_user_input.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_zip_slip.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_zip_slip_assignment.adoc", "src/main/resources/lessons/pathtraversal/documentation/PathTraversal_zip_slip_solution.adoc", "src/main/resources/lessons/pathtraversal/html/PathTraversal.html", "src/main/resources/lessons/pathtraversal/i18n/WebGoatLabels.properties", "src/main/resources/lessons/pathtraversal/images/account.png", "src/main/resources/lessons/pathtraversal/images/cats/1.jpg", "src/main/resources/lessons/pathtraversal/images/cats/10.jpg", "src/main/resources/lessons/pathtraversal/images/cats/2.jpg", "src/main/resources/lessons/pathtraversal/images/cats/3.jpg", "src/main/resources/lessons/pathtraversal/images/cats/4.jpg", "src/main/resources/lessons/pathtraversal/images/cats/5.jpg", "src/main/resources/lessons/pathtraversal/images/cats/6.jpg", "src/main/resources/lessons/pathtraversal/images/cats/7.jpg", "src/main/resources/lessons/pathtraversal/images/cats/8.jpg", "src/main/resources/lessons/pathtraversal/images/cats/9.jpg", "src/main/resources/lessons/pathtraversal/js/path_traversal.js", "src/main/resources/lessons/securepasswords/documentation/SecurePasswords_1.adoc", "src/main/resources/lessons/securepasswords/documentation/SecurePasswords_2.adoc", "src/main/resources/lessons/securepasswords/documentation/SecurePasswords_3.adoc", "src/main/resources/lessons/securepasswords/documentation/SecurePasswords_4.adoc", "src/main/resources/lessons/securepasswords/documentation/SecurePasswords_assignment_introduction.adoc", "src/main/resources/lessons/securepasswords/documentation/SecurePasswords_intro.adoc", "src/main/resources/lessons/securepasswords/html/SecurePasswords.html", "src/main/resources/lessons/securepasswords/i18n/WebGoatLabels.properties", "src/main/resources/lessons/securepasswords/i18n/WebGoatLabels_nl.properties", "src/main/resources/lessons/securepasswords/js/questions_cia.json", "src/main/resources/lessons/sol.MD", "src/main/resources/lessons/sol.txt", "src/main/resources/lessons/spoofcookie/documentation/SpoofCookie_content0.adoc", "src/main/resources/lessons/spoofcookie/documentation/SpoofCookie_plan.adoc", "src/main/resources/lessons/spoofcookie/html/SpoofCookie.html", "src/main/resources/lessons/spoofcookie/i18n/WebGoatLabels.properties", "src/main/resources/lessons/spoofcookie/js/handler.js", "src/main/resources/lessons/spoofcookie/lessonSolutions/en/SpoofCookie_solution.adoc", "src/main/resources/lessons/spoofcookie/lessonSolutions/html/SpoofCookie.html", "src/main/resources/lessons/spoofcookie/templates/spoofcookieform.html", "src/main/resources/lessons/sqlinjection/css/assignments.css", "src/main/resources/lessons/sqlinjection/css/challenge.css", "src/main/resources/lessons/sqlinjection/css/quiz.css", "src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_1__servers.sql", "src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_2__users.sql", "src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_3__salaries.sql", "src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_4__tan.sql", "src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_5__challenge_assignment.sql", "src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_6__user_system_data.sql", "src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_7__employees.sql", "src/main/resources/lessons/sqlinjection/db/migration/V2021_03_13_8__grant.sql", "src/main/resources/lessons/sqlinjection/documentation/SqlInjectionAdvanced_plan.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_challenge.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content10.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content11.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content12.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content12a.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content12b.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content13.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content14.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content6.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content6a.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content6c.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content7.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content8.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content9.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content1.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content10.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content11.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content12.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content2.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content3.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content4.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content5_after.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content5_before.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content6.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content7.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content8.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content9.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_plan.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_jdbc_completion.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_jdbc_newcode.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_order_by.adoc", "src/main/resources/lessons/sqlinjection/documentation/SqlInjection_quiz.adoc", "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html", "src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html", "src/main/resources/lessons/sqlinjection/i18n/WebGoatLabels.properties", "src/main/resources/lessons/sqlinjection/i18n/WebGoatLabels_de.properties", "src/main/resources/lessons/sqlinjection/i18n/WebGoatLabels_fr.properties", "src/main/resources/lessons/sqlinjection/i18n/WebGoatLabels_ru.properties", "src/main/resources/lessons/sqlinjection/js/assignment10b.js", "src/main/resources/lessons/sqlinjection/js/assignment13.js", "src/main/resources/lessons/sqlinjection/js/challenge.js", "src/main/resources/lessons/sqlinjection/js/questions_sql_injection.json", "src/main/resources/lessons/ssrf/documentation/SSRF_Intro.adoc", "src/main/resources/lessons/ssrf/documentation/SSRF_Prevent.adoc", "src/main/resources/lessons/ssrf/documentation/SSRF_Task1.adoc", "src/main/resources/lessons/ssrf/documentation/SSRF_Task2.adoc", "src/main/resources/lessons/ssrf/html/SSRF.html", "src/main/resources/lessons/ssrf/i18n/WebGoatLabels.properties", "src/main/resources/lessons/ssrf/images/cat.jpg", "src/main/resources/lessons/ssrf/images/jerry.png", "src/main/resources/lessons/ssrf/images/tom.png", "src/main/resources/lessons/ssrf/js/credentials.js", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content0.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content1.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content1a.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content2.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content2a.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content3.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content4.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content4a.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content4b.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content4c.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content5.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content5a.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content6.adoc", "src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_plan.adoc", "src/main/resources/lessons/vulnerablecomponents/html/VulnerableComponents.html", "src/main/resources/lessons/vulnerablecomponents/i18n/WebGoatLabels.properties", "src/main/resources/lessons/vulnerablecomponents/images/OWASP-Dep-Check.png", "src/main/resources/lessons/vulnerablecomponents/images/Old-Components.png", "src/main/resources/lessons/vulnerablecomponents/images/OpenSourceGrowing2023.png", "src/main/resources/lessons/vulnerablecomponents/images/Risk-of-Old-Components.png", "src/main/resources/lessons/vulnerablecomponents/images/WebGoat-Vulns.png", "src/main/resources/lessons/webgoatintroduction/documentation/Introduction.adoc", "src/main/resources/lessons/webgoatintroduction/documentation/Introduction_de.adoc", "src/main/resources/lessons/webgoatintroduction/documentation/Introduction_fr.adoc", "src/main/resources/lessons/webgoatintroduction/documentation/Introduction_nl.adoc", "src/main/resources/lessons/webgoatintroduction/html/WebGoatIntroduction.html", "src/main/resources/lessons/webgoatintroduction/i18n/WebGoatLabels.properties", "src/main/resources/lessons/webgoatintroduction/images/wg_logo.png", "src/main/resources/lessons/webwolfintroduction/documentation/IntroductionWebWolf.adoc", "src/main/resources/lessons/webwolfintroduction/documentation/Landing_page.adoc", "src/main/resources/lessons/webwolfintroduction/documentation/Receiving_mail.adoc", "src/main/resources/lessons/webwolfintroduction/documentation/Uploading_files.adoc", "src/main/resources/lessons/webwolfintroduction/html/WebWolfIntroduction.html", "src/main/resources/lessons/webwolfintroduction/i18n/WebGoatLabels.properties", "src/main/resources/lessons/webwolfintroduction/images/files.png", "src/main/resources/lessons/webwolfintroduction/images/mailbox.png", "src/main/resources/lessons/webwolfintroduction/images/requests.png", "src/main/resources/lessons/webwolfintroduction/images/wolf-enabled.png", "src/main/resources/lessons/webwolfintroduction/templates/webwolfPasswordReset.html", "src/main/resources/lessons/xss/css/stored-xss.css", "src/main/resources/lessons/xss/documentation/CrossSiteScriptingMitigation_plan.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScriptingStored_plan.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content1.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content2.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content3.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content4.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content5.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content5a.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content5b.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content6.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content6a.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content6b.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content7-off.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content7.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content7b.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content7c.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content8.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content8a.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content8b.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content8c.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_content9.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_plan.adoc", "src/main/resources/lessons/xss/documentation/CrossSiteScripting_quiz.adoc", "src/main/resources/lessons/xss/html/CrossSiteScripting.html", "src/main/resources/lessons/xss/html/CrossSiteScriptingMitigation.html", "src/main/resources/lessons/xss/html/CrossSiteScriptingStored.html", "src/main/resources/lessons/xss/i18n/WebGoatLabels.properties", "src/main/resources/lessons/xss/images/Reflected-XSS.png", "src/main/resources/lessons/xss/images/Stored-XSS.png", "src/main/resources/lessons/xss/images/avatar1.png", "src/main/resources/lessons/xss/js/assignment3.js", "src/main/resources/lessons/xss/js/assignment4.js", "src/main/resources/lessons/xss/js/questions_cross_site_scripting.json", "src/main/resources/lessons/xss/js/stored-xss.js", "src/main/resources/lessons/xxe/css/xxe.css", "src/main/resources/lessons/xxe/csv/flights.txt", "src/main/resources/lessons/xxe/documentation/XXE_blind.adoc", "src/main/resources/lessons/xxe/documentation/XXE_blind_assignment.adoc", "src/main/resources/lessons/xxe/documentation/XXE_changing_content_type.adoc", "src/main/resources/lessons/xxe/documentation/XXE_changing_content_type_solution.adoc", "src/main/resources/lessons/xxe/documentation/XXE_code.adoc", "src/main/resources/lessons/xxe/documentation/XXE_intro.adoc", "src/main/resources/lessons/xxe/documentation/XXE_mitigation.adoc", "src/main/resources/lessons/xxe/documentation/XXE_overflow.adoc", "src/main/resources/lessons/xxe/documentation/XXE_plan.adoc", "src/main/resources/lessons/xxe/documentation/XXE_simple.adoc", "src/main/resources/lessons/xxe/documentation/XXE_simple_introduction.adoc", "src/main/resources/lessons/xxe/documentation/XXE_simple_solution.adoc", "src/main/resources/lessons/xxe/documentation/XXE_static_code_analysis.adoc", "src/main/resources/lessons/xxe/documentation/temp.txt", "src/main/resources/lessons/xxe/html/XXE.html", "src/main/resources/lessons/xxe/i18n/WebGoatLabels.properties", "src/main/resources/lessons/xxe/images/avatar1.png", "src/main/resources/lessons/xxe/images/cat.jpg", "src/main/resources/lessons/xxe/images/etc_password.png", "src/main/resources/lessons/xxe/images/example.dtd", "src/main/resources/lessons/xxe/images/sonar-issue-xxe.png", "src/main/resources/lessons/xxe/images/sonar-issues.png", "src/main/resources/lessons/xxe/images/wolf-enabled.png", "src/main/resources/lessons/xxe/images/xxe-parser-java.png", "src/main/resources/lessons/xxe/images/xxe-parser.png", "src/main/resources/lessons/xxe/images/xxe-suggested-fix.png", "src/main/resources/lessons/xxe/js/xxe.js", "src/main/resources/lessons/xxe/secret.txt", "src/main/resources/webgoat/static/css/animate.css", "src/main/resources/webgoat/static/css/asciidoctor-default.css", "src/main/resources/webgoat/static/css/coderay.css", "src/main/resources/webgoat/static/css/font-awesome.min.css", "src/main/resources/webgoat/static/css/img/appseceu-17.png", "src/main/resources/webgoat/static/css/img/cnlang.svg", "src/main/resources/webgoat/static/css/img/delang.svg", "src/main/resources/webgoat/static/css/img/enlang.svg", "src/main/resources/webgoat/static/css/img/eslang.svg", "src/main/resources/webgoat/static/css/img/favicon.ico", "src/main/resources/webgoat/static/css/img/frlang.svg", "src/main/resources/webgoat/static/css/img/logo.png", "src/main/resources/webgoat/static/css/img/logoBG.jpg", "src/main/resources/webgoat/static/css/img/nllang.svg", "src/main/resources/webgoat/static/css/img/owasp_logo.jpg", "src/main/resources/webgoat/static/css/img/solution.svg", "src/main/resources/webgoat/static/css/img/webBg.png", "src/main/resources/webgoat/static/css/img/wolf.svg", "src/main/resources/webgoat/static/css/layers.css", "src/main/resources/webgoat/static/css/main.css", "src/main/resources/webgoat/static/css/menu.css", "src/main/resources/webgoat/static/css/quiz.css", "src/main/resources/webgoat/static/css/webgoat.css", "src/main/resources/webgoat/static/fonts/FontAwesome.otf", "src/main/resources/webgoat/static/fonts/fontawesome-webfont.eot", "src/main/resources/webgoat/static/fonts/fontawesome-webfont.svg", "src/main/resources/webgoat/static/fonts/fontawesome-webfont.ttf", "src/main/resources/webgoat/static/fonts/fontawesome-webfont.woff", "src/main/resources/webgoat/static/js/application.js", "src/main/resources/webgoat/static/js/goatApp/controller/LessonController.js", "src/main/resources/webgoat/static/js/goatApp/controller/MenuController.js", "src/main/resources/webgoat/static/js/goatApp/goatApp.js", "src/main/resources/webgoat/static/js/goatApp/model/AssignmentStatusModel.js", "src/main/resources/webgoat/static/js/goatApp/model/FlagModel.js", "src/main/resources/webgoat/static/js/goatApp/model/FlagsCollection.js", "src/main/resources/webgoat/static/js/goatApp/model/HTMLContentModel.js", "src/main/resources/webgoat/static/js/goatApp/model/HintCollection.js", "src/main/resources/webgoat/static/js/goatApp/model/HintModel.js", "src/main/resources/webgoat/static/js/goatApp/model/LabelDebugModel.js", "src/main/resources/webgoat/static/js/goatApp/model/LessonContentModel.js", "src/main/resources/webgoat/static/js/goatApp/model/LessonInfoModel.js", "src/main/resources/webgoat/static/js/goatApp/model/LessonOverviewCollection.js", "src/main/resources/webgoat/static/js/goatApp/model/MenuCollection.js", "src/main/resources/webgoat/static/js/goatApp/model/MenuData.js", "src/main/resources/webgoat/static/js/goatApp/model/MenuModel.js", "src/main/resources/webgoat/static/js/goatApp/model/ReportCardModel.js", "src/main/resources/webgoat/static/js/goatApp/scoreboardApp.js", "src/main/resources/webgoat/static/js/goatApp/support/CustomGoat.js", "src/main/resources/webgoat/static/js/goatApp/support/GoatUtils.js", "src/main/resources/webgoat/static/js/goatApp/support/goatAsyncErrorHandler.js", "src/main/resources/webgoat/static/js/goatApp/support/goatConstants.js", "src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html", "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "src/main/resources/webgoat/static/js/goatApp/templates/report_card.html", "src/main/resources/webgoat/static/js/goatApp/templates/scoreboard.html", "src/main/resources/webgoat/static/js/goatApp/view/ErrorNotificationView.js", "src/main/resources/webgoat/static/js/goatApp/view/GoatRouter.js", "src/main/resources/webgoat/static/js/goatApp/view/HelpControlsView.js", "src/main/resources/webgoat/static/js/goatApp/view/HintView.js", "src/main/resources/webgoat/static/js/goatApp/view/LessonContentView.js", "src/main/resources/webgoat/static/js/goatApp/view/MenuButtonView.js", "src/main/resources/webgoat/static/js/goatApp/view/MenuItemView.js", "src/main/resources/webgoat/static/js/goatApp/view/MenuView.js", "src/main/resources/webgoat/static/js/goatApp/view/PaginationControlView.js", "src/main/resources/webgoat/static/js/goatApp/view/ReportCardView.js", "src/main/resources/webgoat/static/js/goatApp/view/ScoreboardView.js", "src/main/resources/webgoat/static/js/goatApp/view/TitleView.js", "src/main/resources/webgoat/static/js/goatApp/view/UserAndInfoView.js", "src/main/resources/webgoat/static/js/jquery_form/jquery.form.js", "src/main/resources/webgoat/static/js/libs/ace.js", "src/main/resources/webgoat/static/js/libs/backbone-min.js", "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "src/main/resources/webgoat/static/js/libs/jquery.form.js", "src/main/resources/webgoat/static/js/libs/mode-java.js", "src/main/resources/webgoat/static/js/libs/text.js", "src/main/resources/webgoat/static/js/libs/theme-monokai.js", "src/main/resources/webgoat/static/js/libs/underscore-min.js", "src/main/resources/webgoat/static/js/main.js", "src/main/resources/webgoat/static/js/quiz.js", "src/main/resources/webgoat/static/js/scoreboard.js", "src/main/resources/webgoat/static/js/search.js", "src/main/resources/webgoat/static/js/toggle.js", "src/main/resources/webgoat/static/plugins/bootstrap/css/bootstrap.min.css", "src/main/resources/webgoat/static/plugins/bootstrap/fonts/glyphicons-halflings-regular.eot", "src/main/resources/webgoat/static/plugins/bootstrap/fonts/glyphicons-halflings-regular.svg", "src/main/resources/webgoat/static/plugins/bootstrap/fonts/glyphicons-halflings-regular.ttf", "src/main/resources/webgoat/static/plugins/bootstrap/fonts/glyphicons-halflings-regular.woff", "src/main/resources/webgoat/static/plugins/bootstrap-slider/css/slider.css", "src/main/resources/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js", "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/css/bootstrap-wysihtml5.css", "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/css/bootstrap3-wysiwyg5-color.css", "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/bootstrap3-wysihtml5.js", "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "src/main/resources/webgoat/templates/about.html", "src/main/resources/webgoat/templates/lesson_content.html", "src/main/resources/webgoat/templates/login.html", "src/main/resources/webgoat/templates/main_new.html", "src/main/resources/webgoat/templates/registration.html", "src/main/resources/webgoat/templates/scoreboard.html", "src/main/resources/webwolf/static/css/bootstrap-icons.css", "src/main/resources/webwolf/static/css/fonts/bootstrap-icons.woff", "src/main/resources/webwolf/static/css/fonts/bootstrap-icons.woff2", "src/main/resources/webwolf/static/css/img/webwolf.ico", "src/main/resources/webwolf/static/css/webwolf.css", "src/main/resources/webwolf/static/images/wolf.png", "src/main/resources/webwolf/static/images/wolf.svg", "src/main/resources/webwolf/static/js/fileUpload.js", "src/main/resources/webwolf/static/js/jwt.js", "src/main/resources/webwolf/static/js/mail.js", "src/main/resources/webwolf/templates/error.html", "src/main/resources/webwolf/templates/files.html", "src/main/resources/webwolf/templates/fragments/footer.html", "src/main/resources/webwolf/templates/fragments/header.html", "src/main/resources/webwolf/templates/home.html", "src/main/resources/webwolf/templates/jwt.html", "src/main/resources/webwolf/templates/mailbox.html", "src/main/resources/webwolf/templates/registration.html", "src/main/resources/webwolf/templates/requests.html", "src/main/resources/webwolf/templates/webwolf-login.html"]}, "results": [{"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 32, "line": 92, "offset": 3966}, "extra": {"engine_kind": "OSS", "fingerprint": "0beb76cb51a006a2c5c598be8667deec688a028583f423684d5aa58f7f21a09b0357b66cd87e4dd36eaaba43deff3fd84a6677a259e9cd7191d372bee8f3f296_0", "is_ignored": false, "lines": "            e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 111546, "url": "https://semgrep.dev/playground/r/44TR6L2/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "44TR6L2"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 14, "line": 92, "offset": 3948}, "start": {"col": 13, "line": 92, "offset": 3947}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": ".mvn/wrapper/MavenWrapperDownloader.java", "start": {"col": 13, "line": 92, "offset": 3947}}, {"check_id": "html.security.audit.missing-integrity.missing-integrity", "end": {"col": 73, "line": 7, "offset": 225}, "extra": {"engine_kind": "OSS", "fingerprint": "1372169449bc34699905f3d8654134a5c7026a8f1dbd2ac8094bafb74ee9dc67360c168b31d4082c6608344a17974d35ccece58306aed5e04aff32b560e84632_0", "is_ignored": false, "lines": "  <link rel=\"canonical\" href=\"https://owasp.org/www-project-webgoat/\" />", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-353: Missing Support for Integrity Check"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13728, "rule_id": "AbUQzj", "rv_id": 727930, "url": "https://semgrep.dev/playground/r/rxT2BP3/html.security.audit.missing-integrity.missing-integrity", "version_id": "rxT2BP3"}}, "shortlink": "https://sg.run/krXA", "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity", "subcategory": ["audit"], "technology": ["html"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$...A": {"abstract_content": " rel=\"canonical\" href=\"https://owasp.org/www-project-webgoat/\" /", "end": {"col": 72, "line": 7, "offset": 224}, "start": {"col": 8, "line": 7, "offset": 160}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "docs/index.html", "start": {"col": 3, "line": 7, "offset": 155}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 32, "offset": 905}, "extra": {"engine_kind": "OSS", "fingerprint": "bdda21a1748672eda88932c540a1480bb6f1e8a2fe2f0c7793ea5b7acd2346bd51c2a9fd96551a32b51b6fb73cc8fe4da1066109d50c3be103697ab277820654_0", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 111546, "url": "https://semgrep.dev/playground/r/44TR6L2/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "44TR6L2"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 32, "offset": 887}, "start": {"col": 7, "line": 32, "offset": 886}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java", "start": {"col": 7, "line": 32, "offset": 886}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 39, "offset": 1023}, "extra": {"engine_kind": "OSS", "fingerprint": "bdda21a1748672eda88932c540a1480bb6f1e8a2fe2f0c7793ea5b7acd2346bd51c2a9fd96551a32b51b6fb73cc8fe4da1066109d50c3be103697ab277820654_1", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 111546, "url": "https://semgrep.dev/playground/r/44TR6L2/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "44TR6L2"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 39, "offset": 1005}, "start": {"col": 7, "line": 39, "offset": 1004}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java", "start": {"col": 7, "line": 39, "offset": 1004}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 171, "offset": 5522}, "extra": {"engine_kind": "OSS", "fingerprint": "5075fb35c2db967a3d666670aa08f7e90804c43f64001514b4686be3bdf315a8485c5682dedba58fbc66e8dac82275b8dba22410325220aad3796965b606a15c_0", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 111546, "url": "https://semgrep.dev/playground/r/44TR6L2/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "44TR6L2"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 171, "offset": 5504}, "start": {"col": 7, "line": 171, "offset": 5503}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java", "start": {"col": 7, "line": 171, "offset": 5503}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 71, "offset": 2327}, "extra": {"engine_kind": "OSS", "fingerprint": "b1843bce4830e1b2891fbe7398458b47f30cf7ccb723166a5eb789d381bfa0c12aba6b11c674a944165834df83391e9ee6928272b21090cde1fd5b520d3a650f_0", "is_ignored": false, "lines": "  @RequestMapping(", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "lessonPage", "end": {"col": 33, "line": 74, "offset": 2419}, "start": {"col": 23, "line": 74, "offset": 2409}}, "$RETURNTYPE": {"abstract_content": "ModelAndView ModelAndView ModelAndView ModelAndView ModelAndView", "end": {"col": 22, "line": 74, "offset": 2408}, "start": {"col": 10, "line": 74, "offset": 2396}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/controller/StartLesson.java", "start": {"col": 4, "line": 71, "offset": 2313}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 64, "offset": 2309}, "extra": {"engine_kind": "OSS", "fingerprint": "c5744fe1e0dac7b375e1baed7713aff274218f4b85f65a669c58e02bcf2c3e84c6ac30a6eca68df39a70e77d3f3d9a3b0e4c6fbcbc4f3b0ae11c8330ace335b3_0", "is_ignored": false, "lines": "  @RequestMapping(path = URL_DEBUG_LABELS_MVC, produces = MediaType.APPLICATION_JSON_VALUE)", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "checkDebuggingStatus", "end": {"col": 80, "line": 65, "offset": 2463}, "start": {"col": 60, "line": 65, "offset": 2443}}, "$RETURNTYPE": {"abstract_content": "ResponseEntity<Map<String Object>>", "end": {"col": 59, "line": 65, "offset": 2442}, "start": {"col": 24, "line": 65, "offset": 2407}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java", "start": {"col": 4, "line": 64, "offset": 2295}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 77, "offset": 2947}, "extra": {"engine_kind": "OSS", "fingerprint": "477b747f79fb99346b40e358719660dd780b9f89b5147eac13e1fbf63bc157643ccbdd6bc7e327720b382ce551229a4cf1daeeaefb43f583a5e0d2d599429dc8_0", "is_ignored": false, "lines": "  @RequestMapping(", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "setDebuggingStatus", "end": {"col": 78, "line": 81, "offset": 3141}, "start": {"col": 60, "line": 81, "offset": 3123}}, "$RETURNTYPE": {"abstract_content": "ResponseEntity<Map<String Object>>", "end": {"col": 59, "line": 81, "offset": 3122}, "start": {"col": 24, "line": 81, "offset": 3087}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java", "start": {"col": 4, "line": 77, "offset": 2933}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 28, "offset": 719}, "extra": {"engine_kind": "OSS", "fingerprint": "750e003bbc795edb4f53c3d4fc2a6cd8012d9f7936479b14f9f6875ef084597401763a01d46e9c88547bb0c9653cd37bcd9b76a106045f608ea16299f09e7b6a_0", "is_ignored": false, "lines": "  @RequestMapping(path = \"/service/lessoninfo.mvc\", produces = \"application/json\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "getLessonInfo", "end": {"col": 53, "line": 29, "offset": 837}, "start": {"col": 40, "line": 29, "offset": 824}}, "$RETURNTYPE": {"abstract_content": "LessonInfoModel LessonInfoModel LessonInfoModel LessonInfoModel LessonInfoModel LessonInfoModel", "end": {"col": 39, "line": 29, "offset": 823}, "start": {"col": 24, "line": 29, "offset": 808}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/service/LessonInfoService.java", "start": {"col": 4, "line": 28, "offset": 705}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 76, "offset": 2847}, "extra": {"engine_kind": "OSS", "fingerprint": "c549506846a57eef3187c4f3c363ee64a07f437eecbeca137e2dee32138a18e89ab005b7c099bb9ceb0bc4ed6d9ccf8ac0b8efa09d670622f27f81502559b06d_0", "is_ignored": false, "lines": "  @RequestMapping(path = URL_LESSONMENU_MVC, produces = \"application/json\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "showLeftNav", "end": {"col": 56, "line": 77, "offset": 2961}, "start": {"col": 45, "line": 77, "offset": 2950}}, "$RETURNTYPE": {"abstract_content": "List<LessonMenuItem>", "end": {"col": 44, "line": 77, "offset": 2949}, "start": {"col": 24, "line": 77, "offset": 2929}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/service/LessonMenuService.java", "start": {"col": 4, "line": 76, "offset": 2833}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 32, "offset": 1015}, "extra": {"engine_kind": "OSS", "fingerprint": "04bfc0d41cf689765798000d6176bf6836e96056fe92d95b9c4d87c86415c983a099fc6061d6a1433a4c723fc5e4678bd0205ce585f8ff39b6ab57e3c39265cb_0", "is_ignored": false, "lines": "  @RequestMapping(value = \"/service/lessonoverview.mvc\", produces = \"application/json\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "lessonOverview", "end": {"col": 45, "line": 34, "offset": 1146}, "start": {"col": 31, "line": 34, "offset": 1132}}, "$RETURNTYPE": {"abstract_content": "List<LessonOverview>", "end": {"col": 30, "line": 34, "offset": 1131}, "start": {"col": 10, "line": 34, "offset": 1111}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/service/LessonProgressService.java", "start": {"col": 4, "line": 32, "offset": 1001}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 29, "offset": 715}, "extra": {"engine_kind": "OSS", "fingerprint": "9637acbb9f1678413a1539dd5ca3d4262f3179d8344cb74327e9188adcaf9d32b9a3ae4be9c2fa9414a45328ddc41ad7a46d6d02b901b541ab17ef88e3c2f639_0", "is_ignored": false, "lines": "  @RequestMapping(path = \"/service/lessontitle.mvc\", produces = \"application/html\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "showPlan", "end": {"col": 39, "line": 30, "offset": 820}, "start": {"col": 31, "line": 30, "offset": 812}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 30, "line": 30, "offset": 811}, "start": {"col": 24, "line": 30, "offset": 805}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/service/LessonTitleService.java", "start": {"col": 4, "line": 29, "offset": 701}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 52, "offset": 2202}, "extra": {"engine_kind": "OSS", "fingerprint": "8fb081434d1ff21d16cccb066b8daee722ffc02af63e37dac790fe6a825e375939cb7a1b994138926e3ac3b2c12cb8edd4159ab2353b264c8968ebbc3f209ede_0", "is_ignored": false, "lines": "  @RequestMapping(path = \"/service/restartlesson.mvc\", produces = \"text/text\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "restartLesson", "end": {"col": 28, "line": 54, "offset": 2332}, "start": {"col": 15, "line": 54, "offset": 2319}}, "$RETURNTYPE": {"abstract_content": "void", "end": {"col": 14, "line": 54, "offset": 2318}, "start": {"col": 10, "line": 54, "offset": 2314}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/service/RestartLessonService.java", "start": {"col": 4, "line": 52, "offset": 2188}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 24, "offset": 770}, "extra": {"engine_kind": "OSS", "fingerprint": "2aa4046b646e57c9b6274e73855b0ae884e19eb64b00e23fd39ce39da965b2f582f50d5956c750f8584210b990f8c94722718d9998bae8ea6f85164df5d3ac2d_0", "is_ignored": false, "lines": "  @RequestMapping(path = \"/service/enable-security.mvc\", produces = \"application/json\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "applySecurity", "end": {"col": 30, "line": 26, "offset": 886}, "start": {"col": 17, "line": 26, "offset": 873}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 16, "line": 26, "offset": 872}, "start": {"col": 10, "line": 26, "offset": 866}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/container/service/SessionService.java", "start": {"col": 4, "line": 24, "offset": 756}}, {"check_id": "java.lang.security.audit.crypto.weak-random.weak-random", "end": {"col": 64, "line": 17, "offset": 652}, "extra": {"engine_kind": "OSS", "fingerprint": "387e97774bb3e2d643603f92d704e3404efb2ed08ebb593deb604a302c7eab4196844fd66bdc4fbd94135c75b8f098bf0e5a2e5fe13830be56d14685338d1a34_0", "is_ignored": false, "lines": "  public static final int PINCODE = new Random().nextInt(10000);", "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-330: Use of Insufficiently Random Values"], "functional-categories": ["crypto::search::randomness::java.security"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 17327, "rule_id": "lBUW5D", "rv_id": 109711, "url": "https://semgrep.dev/playground/r/NdT3dLr/java.lang.security.audit.crypto.weak-random.weak-random", "version_id": "NdT3dLr"}}, "shortlink": "https://sg.run/NwBp", "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$FUNC": {"abstract_content": "nextInt", "end": {"col": 57, "line": 17, "offset": 645}, "start": {"col": 50, "line": 17, "offset": 638}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java", "start": {"col": 37, "line": 17, "offset": 625}}, {"check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 24, "line": 64, "offset": 2751}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "username_login", "location": {"end": {"col": 42, "line": 50, "offset": 2067}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "start": {"col": 28, "line": 50, "offset": 2053}}}], "taint_sink": ["CliLoc", [{"end": {"col": 24, "line": 64, "offset": 2751}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "start": {"col": 15, "line": 60, "offset": 2561}}, "\"select password from challenge_users where userid = '\"\n                  + username_login\n                  + \"' and password = '\"\n                  + password_login\n                  + \"'\""]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 50, "offset": 2067}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "start": {"col": 28, "line": 50, "offset": 2053}}, "username_login"]]}, "engine_kind": "OSS", "fingerprint": "714b810cc2b7432afad0dee4339341d1165cb89e4e0267b484670fa776c8a6e94d1a74d55ee5a019c1d5a722303c497737b57332724a9f2256e5d3b872e18023_0", "is_ignored": false, "lines": "              \"select password from challenge_users where userid = '\"\n                  + username_login\n                  + \"' and password = '\"\n                  + password_login\n                  + \"'\");", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14767, "rule_id": "10UdRR", "rv_id": 109782, "url": "https://semgrep.dev/playground/r/0bTLlny/java.spring.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTLlny"}}, "shortlink": "https://sg.run/9rzz", "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["spring"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "select", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "login", "end": {"col": 28, "line": 49, "offset": 2024}, "start": {"col": 23, "line": 49, "offset": 2019}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 20, "line": 50, "offset": 2045}, "start": {"col": 8, "line": 50, "offset": 2033}}, "$SOURCE": {"abstract_content": "username_login", "end": {"col": 42, "line": 50, "offset": 2067}, "start": {"col": 28, "line": 50, "offset": 2053}}, "$SQLSTR": {"abstract_content": "select password from challenge_users where userid = '", "end": {"col": 69, "line": 60, "offset": 2615}, "start": {"col": 16, "line": 60, "offset": 2562}}, "$TYPE": {"abstract_content": "String", "end": {"col": 27, "line": 50, "offset": 2052}, "start": {"col": 21, "line": 50, "offset": 2046}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "start": {"col": 15, "line": 60, "offset": 2561}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 53, "line": 65, "offset": 2806}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "statement", "location": {"end": {"col": 34, "line": 58, "offset": 2505}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "start": {"col": 25, "line": 58, "offset": 2496}}}], "taint_sink": ["CliLoc", [{"end": {"col": 53, "line": 65, "offset": 2806}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "start": {"col": 29, "line": 65, "offset": 2782}}, "statement.executeQuery()"]], "taint_source": ["CliLoc", [{"end": {"col": 35, "line": 63, "offset": 2727}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "start": {"col": 21, "line": 63, "offset": 2713}}, "password_login"]]}, "engine_kind": "OSS", "fingerprint": "1af3dabe5626891badd974623bc54e2edcaa8433d462cb4f00c18b4a810913e2cb344eb240b6f2e23f69607c74b7d7442a3b2b7c989d7b7af3bf8eeb9801374b_0", "is_ignored": false, "lines": "      ResultSet resultSet = statement.executeQuery();", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$FUNC": {"abstract_content": "login", "end": {"col": 28, "line": 49, "offset": 2024}, "start": {"col": 23, "line": 49, "offset": 2019}}, "$P": {"abstract_content": "statement", "end": {"col": 38, "line": 65, "offset": 2791}, "propagated_value": {"svalue_abstract_content": "connection.prepareStatement(\"select password from challenge_users where userid = '\"+username_login+\"' and password = '\"+password_login+\"'\")", "svalue_end": {"col": 25, "line": 64, "offset": 2752}, "svalue_start": {"col": 11, "line": 59, "offset": 2518}}, "start": {"col": 29, "line": 65, "offset": 2782}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 65, "offset": 2804}, "start": {"col": 39, "line": 65, "offset": 2792}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java", "start": {"col": 29, "line": 65, "offset": 2782}}, {"check_id": "java.lang.security.audit.crypto.weak-random.weak-random", "end": {"col": 91, "line": 52, "offset": 2375}, "extra": {"engine_kind": "OSS", "fingerprint": "67f0350b9fd4df69f8e4a846c67f5307bb7d61ad421459037044f47d83e562ff3a50a37a829a0dcd0218d92120075625a24f89b56bc167aeeaf4a1d5f43db855_0", "is_ignored": false, "lines": "          HashingAssignment.SECRETS[new Random().nextInt(HashingAssignment.SECRETS.length)];", "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-330: Use of Insufficiently Random Values"], "functional-categories": ["crypto::search::randomness::java.security"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 17327, "rule_id": "lBUW5D", "rv_id": 109711, "url": "https://semgrep.dev/playground/r/NdT3dLr/java.lang.security.audit.crypto.weak-random.weak-random", "version_id": "NdT3dLr"}}, "shortlink": "https://sg.run/NwBp", "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$FUNC": {"abstract_content": "nextInt", "end": {"col": 57, "line": 52, "offset": 2341}, "start": {"col": 50, "line": 52, "offset": 2334}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java", "start": {"col": 37, "line": 52, "offset": 2321}}, {"check_id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request", "end": {"col": 63, "line": 54, "offset": 2492}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "username", "location": {"end": {"col": 20, "line": 49, "offset": 2191}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java", "start": {"col": 12, "line": 49, "offset": 2183}}}, {"content": "basicAuth", "location": {"end": {"col": 16, "line": 53, "offset": 2393}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java", "start": {"col": 7, "line": 53, "offset": 2384}}}], "taint_sink": ["CliLoc", [{"end": {"col": 63, "line": 54, "offset": 2492}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java", "start": {"col": 54, "line": 54, "offset": 2483}}, "basicAuth"]], "taint_source": ["CliLoc", [{"end": {"col": 49, "line": 49, "offset": 2220}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java", "start": {"col": 23, "line": 49, "offset": 2194}}, "request.getUserPrincipal()"]]}, "engine_kind": "OSS", "fingerprint": "fafebaf987735a23bde21034b345dbcf5cec89d3ce9dfc9df3140f24e37bc16905d05bb25b8abf9d6be6a63af3708e9e9d17115b879350104eef7e9ef2d1659f_0", "is_ignored": false, "lines": "      request.getSession().setAttribute(\"basicAuth\", basicAuth);", "message": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-501: Trust Boundary Violation"], "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A04:2021 - Insecure Design"], "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 18242, "rule_id": "2ZU7Eo", "rv_id": 109738, "url": "https://semgrep.dev/playground/r/0bTLlNy/java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request", "version_id": "0bTLlNy"}}, "shortlink": "https://sg.run/QbDZ", "source": "https://semgrep.dev/r/java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["Other"]}, "metavars": {"$1": {"abstract_content": "setAttribute", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$FUNC": {"abstract_content": "getUserPrincipal", "end": {"col": 47, "line": 49, "offset": 2218}, "start": {"col": 31, "line": 49, "offset": 2202}}, "$NAME": {"abstract_content": "\"basicAuth\"", "end": {"col": 52, "line": 54, "offset": 2481}, "start": {"col": 41, "line": 54, "offset": 2470}}, "$REQ": {"abstract_content": "request", "end": {"col": 30, "line": 49, "offset": 2201}, "start": {"col": 23, "line": 49, "offset": 2194}}, "$VALUE": {"abstract_content": "basicAuth", "end": {"col": 63, "line": 54, "offset": 2492}, "propagated_value": {"svalue_abstract_content": "getBasicAuth(username password)", "svalue_end": {"col": 51, "line": 53, "offset": 2428}, "svalue_start": {"col": 19, "line": 53, "offset": 2396}}, "start": {"col": 54, "line": 54, "offset": 2483}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java", "start": {"col": 54, "line": 54, "offset": 2483}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 46, "offset": 2108}, "extra": {"engine_kind": "OSS", "fingerprint": "68a6ced9c12f02cebbf2319da48df16d20530ebcbc55ad18a2110246ac1aa60f0fb25e2f11d84e3e63ad36787c860d3d8ad0c2be9956b1ee9decbe91bcb8f253_0", "is_ignored": false, "lines": "  @RequestMapping(path = \"/crypto/hashing/md5\", produces = MediaType.TEXT_HTML_VALUE)", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "getMd5", "end": {"col": 23, "line": 48, "offset": 2215}, "start": {"col": 17, "line": 48, "offset": 2209}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 16, "line": 48, "offset": 2208}, "start": {"col": 10, "line": 48, "offset": 2202}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java", "start": {"col": 4, "line": 46, "offset": 2094}}, {"check_id": "java.lang.security.audit.crypto.weak-random.weak-random", "end": {"col": 67, "line": 53, "offset": 2449}, "extra": {"engine_kind": "OSS", "fingerprint": "0ec97461fc9108c79ba6b8267aea47f17195df2e97e42cb23bc45551e69a06be0b61654096e6a912f253ce863a679cc33e5b93c75d4235e4dbbb4721b6ff31e4_0", "is_ignored": false, "lines": "      String secret = SECRETS[new Random().nextInt(SECRETS.length)];", "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-330: Use of Insufficiently Random Values"], "functional-categories": ["crypto::search::randomness::java.security"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 17327, "rule_id": "lBUW5D", "rv_id": 109711, "url": "https://semgrep.dev/playground/r/NdT3dLr/java.lang.security.audit.crypto.weak-random.weak-random", "version_id": "NdT3dLr"}}, "shortlink": "https://sg.run/NwBp", "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$FUNC": {"abstract_content": "nextInt", "end": {"col": 51, "line": 53, "offset": 2433}, "start": {"col": 44, "line": 53, "offset": 2426}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java", "start": {"col": 31, "line": 53, "offset": 2413}}, {"check_id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5", "end": {"col": 57, "line": 55, "offset": 2509}, "extra": {"engine_kind": "OSS", "fingerprint": "1e5864b968562c63b2aa0bde2a682527a5e09cf158b08e594c90896ed1fe9175143851e9c3a85def2b47658ecd853b2fbf7a1541ba871abc13141919276493c0_0", "fix": "\"SHA-512\"", "is_ignored": false, "lines": "      MessageDigest md = MessageDigest.getInstance(\"MD5\");", "message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-328: Use of Weak Hash"], "functional-categories": ["crypto::search::hash-algorithm::java.security"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 17325, "rule_id": "KxU5lW", "rv_id": 109707, "url": "https://semgrep.dev/playground/r/9lTdW2l/java.lang.security.audit.crypto.use-of-md5.use-of-md5", "version_id": "9lTdW2l"}}, "shortlink": "https://sg.run/ryJn", "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.use-of-md5.use-of-md5", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#WEAK_MESSAGE_DIGEST_MD5", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["Insecure Hashing Algorithm"]}, "metavars": {"$1": {"abstract_content": "\"MD5\"", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 1, "line": 1, "offset": 0}}, "$ALGO": {"abstract_content": "\"MD5\"", "end": {"col": 57, "line": 55, "offset": 2509}, "start": {"col": 52, "line": 55, "offset": 2504}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java", "start": {"col": 52, "line": 55, "offset": 2504}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 65, "offset": 2826}, "extra": {"engine_kind": "OSS", "fingerprint": "276906e7e5e84182c932c9b9d9b2077f46dd71f155ddc957a6d791ad4d805c30d6a2cf6401daf3fec016e362b539e529e6930ee3cf66d48a0f379290715d1250_0", "is_ignored": false, "lines": "  @RequestMapping(path = \"/crypto/hashing/sha256\", produces = MediaType.TEXT_HTML_VALUE)", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "getSha256", "end": {"col": 26, "line": 67, "offset": 2939}, "start": {"col": 17, "line": 67, "offset": 2930}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 16, "line": 67, "offset": 2929}, "start": {"col": 10, "line": 67, "offset": 2923}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java", "start": {"col": 4, "line": 65, "offset": 2812}}, {"check_id": "java.lang.security.audit.crypto.weak-random.weak-random", "end": {"col": 67, "line": 71, "offset": 3169}, "extra": {"engine_kind": "OSS", "fingerprint": "0ec97461fc9108c79ba6b8267aea47f17195df2e97e42cb23bc45551e69a06be0b61654096e6a912f253ce863a679cc33e5b93c75d4235e4dbbb4721b6ff31e4_1", "is_ignored": false, "lines": "      String secret = SECRETS[new Random().nextInt(SECRETS.length)];", "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-330: Use of Insufficiently Random Values"], "functional-categories": ["crypto::search::randomness::java.security"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 17327, "rule_id": "lBUW5D", "rv_id": 109711, "url": "https://semgrep.dev/playground/r/NdT3dLr/java.lang.security.audit.crypto.weak-random.weak-random", "version_id": "NdT3dLr"}}, "shortlink": "https://sg.run/NwBp", "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$FUNC": {"abstract_content": "nextInt", "end": {"col": 51, "line": 71, "offset": 3153}, "start": {"col": 44, "line": 71, "offset": 3146}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java", "start": {"col": 31, "line": 71, "offset": 3133}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 52, "offset": 2186}, "extra": {"engine_kind": "OSS", "fingerprint": "0174d432537d4095f3211e764b64e5ffa984880b7acdae30f59220bfcc8453d4366df8797fc0625a12de8a486f116d93681afe566b7477225ff4abde88867e1f_0", "is_ignored": false, "lines": "  @RequestMapping(path = \"/crypto/signing/getprivate\", produces = MediaType.TEXT_HTML_VALUE)", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "getPrivateKey", "end": {"col": 30, "line": 54, "offset": 2307}, "start": {"col": 17, "line": 54, "offset": 2294}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 16, "line": 54, "offset": 2293}, "start": {"col": 10, "line": 54, "offset": 2287}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java", "start": {"col": 4, "line": 52, "offset": 2172}}, {"check_id": "java.lang.security.audit.object-deserialization.object-deserialization", "end": {"col": 94, "line": 58, "offset": 2388}, "extra": {"engine_kind": "OSS", "fingerprint": "1c7acecaf67abda0e68b2ee87dbeedfed29cbac8980e1fe3a5b3f3f0a0c36beca006a6396a8c01aeea179e0075d151dd70ff06286df8c93c4862a387683936c0_0", "is_ignored": false, "lines": "    try (ObjectInputStream ois =\n        new ObjectInputStream(new ByteArrayInputStream(Base64.getDecoder().decode(b64token)))) {", "message": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://www.owasp.org/index.php/Deserialization_of_untrusted_data", "https://www.oracle.com/java/technologies/javase/seccodeguide.html#8"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9181, "rule_id": "GdU7py", "rv_id": 109723, "url": "https://semgrep.dev/playground/r/LjTqQOj/java.lang.security.audit.object-deserialization.object-deserialization", "version_id": "LjTqQOj"}}, "shortlink": "https://sg.run/Ek0A", "source": "https://semgrep.dev/r/java.lang.security.audit.object-deserialization.object-deserialization", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#OBJECT_DESERIALIZATION", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java", "start": {"col": 10, "line": 57, "offset": 2271}}, {"check_id": "java.spring.security.objectinputstream-deserialization-spring.objectinputstream-deserialization-spring", "end": {"col": 93, "line": 58, "offset": 2387}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "token", "location": {"end": {"col": 59, "line": 49, "offset": 2110}, "path": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java", "start": {"col": 54, "line": 49, "offset": 2105}}}, {"content": "b64token", "location": {"end": {"col": 13, "line": 55, "offset": 2215}, "path": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java", "start": {"col": 5, "line": 55, "offset": 2207}}}], "taint_sink": ["CliLoc", [{"end": {"col": 93, "line": 58, "offset": 2387}, "path": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java", "start": {"col": 31, "line": 58, "offset": 2325}}, "new ByteArrayInputStream(Base64.getDecoder().decode(b64token))"]], "taint_source": ["CliLoc", [{"end": {"col": 59, "line": 49, "offset": 2110}, "path": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java", "start": {"col": 54, "line": 49, "offset": 2105}}, "token"]]}, "engine_kind": "OSS", "fingerprint": "c27306c37108d0fbb05a11f272aaa67b3bb02edb68183f7fc730a3bf83a5354b180c457d0c55743a7960e5cb7025f66e6fa9744893ab1a08883234d9e327b9e7_0", "is_ignored": false, "lines": "        new ObjectInputStream(new ByteArrayInputStream(Base64.getDecoder().decode(b64token)))) {", "message": "The application may convert user-controlled data into an object, which can lead to an insecure deserialization vulnerability. An attacker can create a malicious serialized object, pass it to the application, and take advantage of the deserialization process to perform Denial-of-service (DoS), Remote code execution (RCE), or bypass access control measures. To prevent this vulnerability, leverage data formats such as JSON or XML as safer alternatives. If you need to deserialize user input in a specific format, consider digitally signing the data before serialization to prevent tampering. For more information, see: [Deserialization prevention](https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html) We do not recommend deserializing untrusted data with the `ObjectInputStream`. If you must, you can try overriding the `ObjectInputStream#resolveClass()` method or using a safe replacement for the generic `readObject()` method.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["deserialization::sink::load-object::apache.commons", "deserialization::sink::load-object::java.io", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 46836, "rule_id": "x8UbG3", "rv_id": 735040, "url": "https://semgrep.dev/playground/r/jQTQ4W9/java.spring.security.objectinputstream-deserialization-spring.objectinputstream-deserialization-spring", "version_id": "jQTQ4W9"}}, "shortlink": "https://sg.run/n1rY", "source": "https://semgrep.dev/r/java.spring.security.objectinputstream-deserialization-spring.objectinputstream-deserialization-spring", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {"$1": {"abstract_content": "PostMapping", "end": {"col": 12, "line": 1, "offset": 11}, "start": {"col": 1, "line": 1, "offset": 0}}, "$IN": {"abstract_content": "new ByteArrayInputStream(Base64.getDecoder().decode(b64token))", "end": {"col": 93, "line": 58, "offset": 2387}, "start": {"col": 31, "line": 58, "offset": 2325}}, "$MAPPING": {"abstract_content": "PostMapping", "end": {"col": 15, "line": 47, "offset": 2002}, "start": {"col": 4, "line": 47, "offset": 1991}}, "$METHOD": {"abstract_content": "completed", "end": {"col": 32, "line": 49, "offset": 2083}, "start": {"col": 23, "line": 49, "offset": 2074}}, "$METHODNAME": {"abstract_content": "completed", "end": {"col": 32, "line": 49, "offset": 2083}, "start": {"col": 23, "line": 49, "offset": 2074}}, "$RET": {"abstract_content": "AttackResult", "end": {"col": 22, "line": 49, "offset": 2073}, "start": {"col": 10, "line": 49, "offset": 2061}}, "$SOURCE": {"abstract_content": "token", "end": {"col": 59, "line": 49, "offset": 2110}, "start": {"col": 54, "line": 49, "offset": 2105}}, "$TYPE": {"abstract_content": "String", "end": {"col": 53, "line": 49, "offset": 2104}, "start": {"col": 47, "line": 49, "offset": 2098}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java", "start": {"col": 31, "line": 58, "offset": 2325}}, {"check_id": "java.lang.security.audit.object-deserialization.object-deserialization", "end": {"col": 83, "line": 18, "offset": 644}, "extra": {"engine_kind": "OSS", "fingerprint": "78b8de99b48d488811a66060e3dd4a70cab711a40d086305206c7837d9fd5cef67c3d21279e550d8237ac9dd89f9842fea9ab748a9b5ed86c8bffd9f77308d5b_0", "is_ignored": false, "lines": "    ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(data));", "message": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://www.owasp.org/index.php/Deserialization_of_untrusted_data", "https://www.oracle.com/java/technologies/javase/seccodeguide.html#8"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9181, "rule_id": "GdU7py", "rv_id": 109723, "url": "https://semgrep.dev/playground/r/LjTqQOj/java.lang.security.audit.object-deserialization.object-deserialization", "version_id": "LjTqQOj"}}, "shortlink": "https://sg.run/Ek0A", "source": "https://semgrep.dev/r/java.lang.security.audit.object-deserialization.object-deserialization", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#OBJECT_DESERIALIZATION", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/deserialization/SerializationHelper.java", "start": {"col": 5, "line": 18, "offset": 566}}, {"check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 32, "line": 89, "offset": 3381}, "extra": {"engine_kind": "OSS", "fingerprint": "681f2fc1a8d17d43dbf6dcdbbe26eaa31af4b8e39a3d5487ede368e543e53a89bb24331e2d6f4c773ed317c1c3b8976c4837512596c69c458d53abd315a7e1b2_0", "is_ignored": false, "lines": "    response.addCookie(cookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9170, "rule_id": "EwU2z6", "rv_id": 109686, "url": "https://semgrep.dev/playground/r/JdTNpEW/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "JdTNpEW"}}, "shortlink": "https://sg.run/b7Be", "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 30, "line": 89, "offset": 3379}, "start": {"col": 24, "line": 89, "offset": 3373}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 13, "line": 89, "offset": 3362}, "start": {"col": 5, "line": 89, "offset": 3354}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java", "start": {"col": 5, "line": 89, "offset": 3354}}, {"check_id": "java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 32, "line": 89, "offset": 3381}, "extra": {"engine_kind": "OSS", "fingerprint": "1eb414b6b65c6cda895f8655eee47b2e741b03379f46eee76616215526694f9c04761034984984e2ca23ff800b8d8668d8d6ed995d895c87aff78d90e8807bff_0", "is_ignored": false, "lines": "    response.addCookie(cookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/HttpOnly"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27163, "rule_id": "DbUR6k", "rv_id": 111578, "url": "https://semgrep.dev/playground/r/e1T03on/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "e1T03on"}}, "shortlink": "https://sg.run/2WZD", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 30, "line": 89, "offset": 3379}, "start": {"col": 24, "line": 89, "offset": 3373}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 13, "line": 89, "offset": 3362}, "start": {"col": 5, "line": 89, "offset": 3354}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java", "start": {"col": 5, "line": 89, "offset": 3354}}, {"check_id": "java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "end": {"col": 32, "line": 89, "offset": 3381}, "extra": {"engine_kind": "OSS", "fingerprint": "a36d22036b950dcfffea6cf6d5784d2c2f07ba4228570e1e259aa3aeee97b64c7540209a60fa7b995e4d109e394b846121f8388b9325b9a9564fa5692e26ff23_0", "is_ignored": false, "lines": "    response.addCookie(cookie);", "message": "The application does not appear to verify inbound requests which can lead to a Cross-site request forgery (CSRF) vulnerability. If the application uses cookie-based authentication, an attacker can trick users into sending authenticated HTTP requests without their knowledge from any arbitrary domain they visit. To prevent this vulnerability start by identifying if the framework or library leveraged has built-in features or offers plugins for CSRF protection. CSRF tokens should be unique and securely random. The `Synchronizer Token` or `Double Submit Cookie` patterns with defense-in-depth mechanisms such as the `sameSite` cookie flag can help prevent CSRF. For more information, see: [Cross-site request forgery prevention](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)", "metadata": {"asvs": {"control_id": "3.4.3 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://stackoverflow.com/questions/42717210/samesite-cookie-in-java-application"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27164, "rule_id": "WAUqW7", "rv_id": 111579, "url": "https://semgrep.dev/playground/r/vdTY8wq/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "version_id": "vdTY8wq"}}, "shortlink": "https://sg.run/XR5b", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$RESP": {"abstract_content": "response", "end": {"col": 13, "line": 89, "offset": 3362}, "start": {"col": 5, "line": 89, "offset": 3354}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java", "start": {"col": 5, "line": 89, "offset": 3354}}, {"check_id": "java.lang.security.audit.crypto.weak-random.weak-random", "end": {"col": 51, "line": 48, "offset": 1814}, "extra": {"engine_kind": "OSS", "fingerprint": "5369be664eb71c277c567ae5d4383d5c249b0c9953a316d9307b941e3bf46a40f46389b888dfbeba91594bf81abcf6f8ec992a8adbf548ac51b406ff55e2db3f_0", "is_ignored": false, "lines": "  private static long id = new Random().nextLong() & Long.MAX_VALUE;", "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-330: Use of Insufficiently Random Values"], "functional-categories": ["crypto::search::randomness::java.security"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 17327, "rule_id": "lBUW5D", "rv_id": 109711, "url": "https://semgrep.dev/playground/r/NdT3dLr/java.lang.security.audit.crypto.weak-random.weak-random", "version_id": "NdT3dLr"}}, "shortlink": "https://sg.run/NwBp", "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$FUNC": {"abstract_content": "nextLong", "end": {"col": 49, "line": 48, "offset": 1812}, "start": {"col": 41, "line": 48, "offset": 1804}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java", "start": {"col": 28, "line": 48, "offset": 1791}}, {"check_id": "java.lang.security.audit.crypto.weak-random.weak-random", "end": {"col": 75, "line": 53, "offset": 2322}, "extra": {"engine_kind": "OSS", "fingerprint": "504a658b18a98473c9fc2889de325e076530f5f583c4bf19eb8dacdb3eb274dbed30ec8a863c7674d0b366f406cfc16dfa696710455c1f60aab8b75934d5b5b3_0", "is_ignored": false, "lines": "      TextCodec.BASE64.encode(SECRETS[new Random().nextInt(SECRETS.length)]);", "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-330: Use of Insufficiently Random Values"], "functional-categories": ["crypto::search::randomness::java.security"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 17327, "rule_id": "lBUW5D", "rv_id": 109711, "url": "https://semgrep.dev/playground/r/NdT3dLr/java.lang.security.audit.crypto.weak-random.weak-random", "version_id": "NdT3dLr"}}, "shortlink": "https://sg.run/NwBp", "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$FUNC": {"abstract_content": "nextInt", "end": {"col": 59, "line": 53, "offset": 2306}, "start": {"col": 52, "line": 53, "offset": 2299}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java", "start": {"col": 39, "line": 53, "offset": 2286}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 58, "offset": 2532}, "extra": {"engine_kind": "OSS", "fingerprint": "604d3e51e285c5afcef232e979b48291e8aea073dcc8d41fd41d95ed90def02006cdd73471a35c47095e2de2a8885d6ff5d0a8ea86e7a14092060b7b19b01410_0", "is_ignored": false, "lines": "  @RequestMapping(path = \"/JWT/secret/gettoken\", produces = MediaType.TEXT_HTML_VALUE)", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "getSecretToken", "end": {"col": 31, "line": 60, "offset": 2648}, "start": {"col": 17, "line": 60, "offset": 2634}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 16, "line": 60, "offset": 2633}, "start": {"col": 10, "line": 60, "offset": 2627}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java", "start": {"col": 4, "line": 58, "offset": 2518}}, {"check_id": "java.servlets.security.cookie-issecure-false.cookie-issecure-false", "end": {"col": 57, "line": 130, "offset": 4976}, "extra": {"engine_kind": "OSS", "fingerprint": "436d4ffec6b5516c7ffb15e2ba07bb348b7557ef16165f86cfa34448c54954bb24dae5849d59d12ba71f9b365875353f55126d24358a9514da010838189130dc_0", "fix": "cookie = new Cookie(\"access_token\", token);\n      cookie.setSecure(true);", "is_ignored": false, "lines": "      Cookie cookie = new Cookie(\"access_token\", token);", "message": "Default session middleware settings: `setSecure` not set to true. This ensures that the cookie is sent only over HTTPS to prevent cross-site scripting attacks.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://docs.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setSecure(boolean)", "https://owasp.org/www-community/controls/SecureCookieAttribute"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9218, "rule_id": "kxUkn9", "rv_id": 230005, "url": "https://semgrep.dev/playground/r/xyTvPr0/java.servlets.security.cookie-issecure-false.cookie-issecure-false", "version_id": "xyTvPr0"}}, "shortlink": "https://sg.run/pxn0", "source": "https://semgrep.dev/r/java.servlets.security.cookie-issecure-false.cookie-issecure-false", "subcategory": ["audit"], "technology": ["java", "cookie"], "vulnerability": "Insecure Transport", "vulnerability_class": ["Mishandled Sensitive Information"]}, "metavars": {"$...ARGS": {"abstract_content": "\"access_token\"token", "end": {"col": 55, "line": 130, "offset": 4974}, "start": {"col": 34, "line": 130, "offset": 4953}}, "$COOKIE": {"abstract_content": "cookie", "end": {"col": 20, "line": 130, "offset": 4939}, "start": {"col": 14, "line": 130, "offset": 4933}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 130, "offset": 4926}}, {"check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 34, "line": 131, "offset": 5010}, "extra": {"engine_kind": "OSS", "fingerprint": "35e5a90e39f7864d3a422b8a578d1937a54db5ac115d0943455392fdfb18692f96380a2b43a3cacaef6664a7bb5ef877d795609ee2a68cbce1b7fae9fce75d97_0", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9170, "rule_id": "EwU2z6", "rv_id": 109686, "url": "https://semgrep.dev/playground/r/JdTNpEW/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "JdTNpEW"}}, "shortlink": "https://sg.run/b7Be", "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 32, "line": 131, "offset": 5008}, "propagated_value": {"svalue_abstract_content": "new Cookie(\"access_token\"token)", "svalue_end": {"col": 56, "line": 130, "offset": 4975}, "svalue_start": {"col": 23, "line": 130, "offset": 4942}}, "start": {"col": 26, "line": 131, "offset": 5002}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 131, "offset": 4991}, "start": {"col": 7, "line": 131, "offset": 4983}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 131, "offset": 4983}}, {"check_id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "end": {"col": 34, "line": 131, "offset": 5010}, "extra": {"engine_kind": "OSS", "fingerprint": "583f6651769add1618c8390c5b28decf704298a5bc4a9c6c64d3bfa95a78567e5981d5df6ddf29ccab10e07dc4b7b0e4c5cc42860573bf7490a9ad031087d14e_0", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'", "metadata": {"asvs": {"control_id": "3.4.1 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9172, "rule_id": "L1Uyvp", "rv_id": 109688, "url": "https://semgrep.dev/playground/r/GxTv63G/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "version_id": "GxTv63G"}}, "shortlink": "https://sg.run/kXoK", "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 32, "line": 131, "offset": 5008}, "propagated_value": {"svalue_abstract_content": "new Cookie(\"access_token\"token)", "svalue_end": {"col": 56, "line": 130, "offset": 4975}, "svalue_start": {"col": 23, "line": 130, "offset": 4942}}, "start": {"col": 26, "line": 131, "offset": 5002}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 131, "offset": 4991}, "start": {"col": 7, "line": 131, "offset": 4983}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 131, "offset": 4983}}, {"check_id": "java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 34, "line": 131, "offset": 5010}, "extra": {"engine_kind": "OSS", "fingerprint": "05c5c9a4055c93837cdfd2c813ae3669a2f9007da4ce9c9406bf510c7aa70e8712a09538b2e98f9b491ca7aec3b2518c4b6a75b4a2ed06f9d8e13bb565ff0a63_0", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/HttpOnly"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27163, "rule_id": "DbUR6k", "rv_id": 111578, "url": "https://semgrep.dev/playground/r/e1T03on/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "e1T03on"}}, "shortlink": "https://sg.run/2WZD", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 32, "line": 131, "offset": 5008}, "propagated_value": {"svalue_abstract_content": "new Cookie(\"access_token\"token)", "svalue_end": {"col": 56, "line": 130, "offset": 4975}, "svalue_start": {"col": 23, "line": 130, "offset": 4942}}, "start": {"col": 26, "line": 131, "offset": 5002}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 131, "offset": 4991}, "start": {"col": 7, "line": 131, "offset": 4983}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 131, "offset": 4983}}, {"check_id": "java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "end": {"col": 34, "line": 131, "offset": 5010}, "extra": {"engine_kind": "OSS", "fingerprint": "8cb62d04822ce4c0573b946dfdc9d26d5e01dd0b9234c60ffbd9bc10dfa022c859e5546e3b2e53554e2d25dbe28c5843808b5463c0bf4dbc9def00691051e017_0", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "The application does not appear to verify inbound requests which can lead to a Cross-site request forgery (CSRF) vulnerability. If the application uses cookie-based authentication, an attacker can trick users into sending authenticated HTTP requests without their knowledge from any arbitrary domain they visit. To prevent this vulnerability start by identifying if the framework or library leveraged has built-in features or offers plugins for CSRF protection. CSRF tokens should be unique and securely random. The `Synchronizer Token` or `Double Submit Cookie` patterns with defense-in-depth mechanisms such as the `sameSite` cookie flag can help prevent CSRF. For more information, see: [Cross-site request forgery prevention](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)", "metadata": {"asvs": {"control_id": "3.4.3 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://stackoverflow.com/questions/42717210/samesite-cookie-in-java-application"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27164, "rule_id": "WAUqW7", "rv_id": 111579, "url": "https://semgrep.dev/playground/r/vdTY8wq/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "version_id": "vdTY8wq"}}, "shortlink": "https://sg.run/XR5b", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$RESP": {"abstract_content": "response", "end": {"col": 15, "line": 131, "offset": 4991}, "start": {"col": 7, "line": 131, "offset": 4983}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 131, "offset": 4983}}, {"check_id": "java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "end": {"col": 34, "line": 131, "offset": 5010}, "extra": {"engine_kind": "OSS", "fingerprint": "72549613244abd8a5f10e1eb86afab8f10dfeb7d53d26d72d4bf9f70a365abc4b903ea9532d95a8daf2f4da1e8d2449d854c3f3baa8f3eb78be70724b90532d5_0", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'", "metadata": {"asvs": {"control_id": "3.4.1 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/controls/SecureCookieAttribute"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27165, "rule_id": "0oUKLg", "rv_id": 111580, "url": "https://semgrep.dev/playground/r/d6Trv0B/java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "version_id": "d6Trv0B"}}, "shortlink": "https://sg.run/jW2J", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 32, "line": 131, "offset": 5008}, "propagated_value": {"svalue_abstract_content": "new Cookie(\"access_token\"token)", "svalue_end": {"col": 56, "line": 130, "offset": 4975}, "svalue_start": {"col": 23, "line": 130, "offset": 4942}}, "start": {"col": 26, "line": 131, "offset": 5002}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 131, "offset": 4991}, "start": {"col": 7, "line": 131, "offset": 4983}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 131, "offset": 4983}}, {"check_id": "java.servlets.security.cookie-issecure-false.cookie-issecure-false", "end": {"col": 54, "line": 135, "offset": 5191}, "extra": {"engine_kind": "OSS", "fingerprint": "6fdd319e492839cf8c5a0c52bba66779153dedd11478aa5485ad84a76ff46e2fa82ce42ebf72375277c5537e87077ce067c47002d878f2eb25ba55da26d186e1_0", "fix": "cookie = new Cookie(\"access_token\", \"\");\n      cookie.setSecure(true);", "is_ignored": false, "lines": "      Cookie cookie = new Cookie(\"access_token\", \"\");", "message": "Default session middleware settings: `setSecure` not set to true. This ensures that the cookie is sent only over HTTPS to prevent cross-site scripting attacks.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://docs.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setSecure(boolean)", "https://owasp.org/www-community/controls/SecureCookieAttribute"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9218, "rule_id": "kxUkn9", "rv_id": 230005, "url": "https://semgrep.dev/playground/r/xyTvPr0/java.servlets.security.cookie-issecure-false.cookie-issecure-false", "version_id": "xyTvPr0"}}, "shortlink": "https://sg.run/pxn0", "source": "https://semgrep.dev/r/java.servlets.security.cookie-issecure-false.cookie-issecure-false", "subcategory": ["audit"], "technology": ["java", "cookie"], "vulnerability": "Insecure Transport", "vulnerability_class": ["Mishandled Sensitive Information"]}, "metavars": {"$...ARGS": {"abstract_content": "\"access_token\"\"\"", "end": {"col": 52, "line": 135, "offset": 5189}, "start": {"col": 34, "line": 135, "offset": 5171}}, "$COOKIE": {"abstract_content": "cookie", "end": {"col": 20, "line": 135, "offset": 5157}, "start": {"col": 14, "line": 135, "offset": 5151}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 135, "offset": 5144}}, {"check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 34, "line": 136, "offset": 5225}, "extra": {"engine_kind": "OSS", "fingerprint": "35e5a90e39f7864d3a422b8a578d1937a54db5ac115d0943455392fdfb18692f96380a2b43a3cacaef6664a7bb5ef877d795609ee2a68cbce1b7fae9fce75d97_1", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9170, "rule_id": "EwU2z6", "rv_id": 109686, "url": "https://semgrep.dev/playground/r/JdTNpEW/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "JdTNpEW"}}, "shortlink": "https://sg.run/b7Be", "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 32, "line": 136, "offset": 5223}, "propagated_value": {"svalue_abstract_content": "new Cookie(\"access_token\"\"\")", "svalue_end": {"col": 53, "line": 135, "offset": 5190}, "svalue_start": {"col": 23, "line": 135, "offset": 5160}}, "start": {"col": 26, "line": 136, "offset": 5217}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 136, "offset": 5206}, "start": {"col": 7, "line": 136, "offset": 5198}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 136, "offset": 5198}}, {"check_id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "end": {"col": 34, "line": 136, "offset": 5225}, "extra": {"engine_kind": "OSS", "fingerprint": "583f6651769add1618c8390c5b28decf704298a5bc4a9c6c64d3bfa95a78567e5981d5df6ddf29ccab10e07dc4b7b0e4c5cc42860573bf7490a9ad031087d14e_1", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'", "metadata": {"asvs": {"control_id": "3.4.1 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9172, "rule_id": "L1Uyvp", "rv_id": 109688, "url": "https://semgrep.dev/playground/r/GxTv63G/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "version_id": "GxTv63G"}}, "shortlink": "https://sg.run/kXoK", "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 32, "line": 136, "offset": 5223}, "propagated_value": {"svalue_abstract_content": "new Cookie(\"access_token\"\"\")", "svalue_end": {"col": 53, "line": 135, "offset": 5190}, "svalue_start": {"col": 23, "line": 135, "offset": 5160}}, "start": {"col": 26, "line": 136, "offset": 5217}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 136, "offset": 5206}, "start": {"col": 7, "line": 136, "offset": 5198}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 136, "offset": 5198}}, {"check_id": "java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 34, "line": 136, "offset": 5225}, "extra": {"engine_kind": "OSS", "fingerprint": "05c5c9a4055c93837cdfd2c813ae3669a2f9007da4ce9c9406bf510c7aa70e8712a09538b2e98f9b491ca7aec3b2518c4b6a75b4a2ed06f9d8e13bb565ff0a63_1", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/HttpOnly"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27163, "rule_id": "DbUR6k", "rv_id": 111578, "url": "https://semgrep.dev/playground/r/e1T03on/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "e1T03on"}}, "shortlink": "https://sg.run/2WZD", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 32, "line": 136, "offset": 5223}, "propagated_value": {"svalue_abstract_content": "new Cookie(\"access_token\"\"\")", "svalue_end": {"col": 53, "line": 135, "offset": 5190}, "svalue_start": {"col": 23, "line": 135, "offset": 5160}}, "start": {"col": 26, "line": 136, "offset": 5217}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 136, "offset": 5206}, "start": {"col": 7, "line": 136, "offset": 5198}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 136, "offset": 5198}}, {"check_id": "java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "end": {"col": 34, "line": 136, "offset": 5225}, "extra": {"engine_kind": "OSS", "fingerprint": "8cb62d04822ce4c0573b946dfdc9d26d5e01dd0b9234c60ffbd9bc10dfa022c859e5546e3b2e53554e2d25dbe28c5843808b5463c0bf4dbc9def00691051e017_1", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "The application does not appear to verify inbound requests which can lead to a Cross-site request forgery (CSRF) vulnerability. If the application uses cookie-based authentication, an attacker can trick users into sending authenticated HTTP requests without their knowledge from any arbitrary domain they visit. To prevent this vulnerability start by identifying if the framework or library leveraged has built-in features or offers plugins for CSRF protection. CSRF tokens should be unique and securely random. The `Synchronizer Token` or `Double Submit Cookie` patterns with defense-in-depth mechanisms such as the `sameSite` cookie flag can help prevent CSRF. For more information, see: [Cross-site request forgery prevention](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)", "metadata": {"asvs": {"control_id": "3.4.3 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://stackoverflow.com/questions/42717210/samesite-cookie-in-java-application"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27164, "rule_id": "WAUqW7", "rv_id": 111579, "url": "https://semgrep.dev/playground/r/vdTY8wq/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "version_id": "vdTY8wq"}}, "shortlink": "https://sg.run/XR5b", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$RESP": {"abstract_content": "response", "end": {"col": 15, "line": 136, "offset": 5206}, "start": {"col": 7, "line": 136, "offset": 5198}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 136, "offset": 5198}}, {"check_id": "java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "end": {"col": 34, "line": 136, "offset": 5225}, "extra": {"engine_kind": "OSS", "fingerprint": "72549613244abd8a5f10e1eb86afab8f10dfeb7d53d26d72d4bf9f70a365abc4b903ea9532d95a8daf2f4da1e8d2449d854c3f3baa8f3eb78be70724b90532d5_1", "is_ignored": false, "lines": "      response.addCookie(cookie);", "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'", "metadata": {"asvs": {"control_id": "3.4.1 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/controls/SecureCookieAttribute"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27165, "rule_id": "0oUKLg", "rv_id": 111580, "url": "https://semgrep.dev/playground/r/d6Trv0B/java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "version_id": "d6Trv0B"}}, "shortlink": "https://sg.run/jW2J", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 32, "line": 136, "offset": 5223}, "propagated_value": {"svalue_abstract_content": "new Cookie(\"access_token\"\"\")", "svalue_end": {"col": 53, "line": 135, "offset": 5190}, "svalue_start": {"col": 23, "line": 135, "offset": 5160}}, "start": {"col": 26, "line": 136, "offset": 5217}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 136, "offset": 5206}, "start": {"col": 7, "line": 136, "offset": 5198}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java", "start": {"col": 7, "line": 136, "offset": 5198}}, {"check_id": "java.spring.security.injection.tainted-url-host.tainted-url-host", "end": {"col": 81, "line": 51, "offset": 1898}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "token", "location": {"end": {"col": 83, "line": 44, "offset": 1590}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java", "start": {"col": 78, "line": 44, "offset": 1585}}}, {"content": "decodedJWT", "location": {"end": {"col": 23, "line": 49, "offset": 1744}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java", "start": {"col": 13, "line": 49, "offset": 1734}}}, {"content": "jku", "location": {"end": {"col": 16, "line": 50, "offset": 1781}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java", "start": {"col": 13, "line": 50, "offset": 1778}}}], "taint_sink": ["CliLoc", [{"end": {"col": 81, "line": 51, "offset": 1898}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java", "start": {"col": 58, "line": 51, "offset": 1875}}, "new URL(jku.asString())"]], "taint_source": ["CliLoc", [{"end": {"col": 83, "line": 44, "offset": 1590}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java", "start": {"col": 78, "line": 44, "offset": 1585}}, "token"]]}, "engine_kind": "OSS", "fingerprint": "3f2c8481d1841f009b05ce8a9887f5a226c29a52a32092f450c19b66fea72ba1b6d5d3e440f7593313e8d043a8e39501af899251ebb6f6104e47106736781946_0", "is_ignored": false, "lines": "        JwkProvider jwkProvider = new JwkProviderBuilder(new URL(jku.asString())).build();", "message": "User data flows into the host portion of this manually-constructed URL. This could allow an attacker to send data to their own server, potentially exposing sensitive data such as cookies or authorization information sent with this request. They could also probe internal servers or other resources that the server runnig this code can access. (This is called server-side request forgery, or SSRF.) Do not allow arbitrary hosts. Instead, create an allowlist for approved hosts hardcode the correct host, or ensure that the user data can only affect the path or parameters.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 22077, "rule_id": "oqUZo8", "rv_id": 109784, "url": "https://semgrep.dev/playground/r/qkT2xDj/java.spring.security.injection.tainted-url-host.tainted-url-host", "version_id": "qkT2xDj"}}, "shortlink": "https://sg.run/vkYn", "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-url-host.tainted-url-host", "subcategory": ["vuln"], "technology": ["java", "spring"], "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]}, "metavars": {"$1": {"abstract_content": "RequestParam", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "resetVotes", "end": {"col": 47, "line": 44, "offset": 1554}, "start": {"col": 37, "line": 44, "offset": 1544}}, "$ONEARG": {"abstract_content": "jku.asString()", "end": {"col": 80, "line": 51, "offset": 1897}, "start": {"col": 66, "line": 51, "offset": 1883}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 61, "line": 44, "offset": 1568}, "start": {"col": 49, "line": 44, "offset": 1556}}, "$SOURCE": {"abstract_content": "token", "end": {"col": 83, "line": 44, "offset": 1590}, "start": {"col": 78, "line": 44, "offset": 1585}}, "$TYPE": {"abstract_content": "String", "end": {"col": 77, "line": 44, "offset": 1584}, "start": {"col": 71, "line": 44, "offset": 1578}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java", "start": {"col": 58, "line": 51, "offset": 1875}}, {"check_id": "java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "end": {"col": 69, "line": 100, "offset": 4542}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "question", "location": {"end": {"col": 62, "line": 95, "offset": 4316}, "path": "src/main/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignment.java", "start": {"col": 54, "line": 95, "offset": 4308}}}, {"content": "answer", "location": {"end": {"col": 15, "line": 96, "offset": 4334}, "path": "src/main/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignment.java", "start": {"col": 9, "line": 96, "offset": 4328}}}], "taint_sink": ["CliLoc", [{"end": {"col": 69, "line": 100, "offset": 4542}, "path": "src/main/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignment.java", "start": {"col": 16, "line": 100, "offset": 4489}}, "success(this).output(\"<b>\" + answer + \"</b>\").build()"]], "taint_source": ["CliLoc", [{"end": {"col": 62, "line": 95, "offset": 4316}, "path": "src/main/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignment.java", "start": {"col": 54, "line": 95, "offset": 4308}}, "question"]]}, "engine_kind": "OSS", "fingerprint": "6284594e1f39fce548d81b24441cda06669561546b67af1a27d41dd711e9133d3b2f8e5e6f4112788dcd54e42ba377d66477319c2d63c860b19c4d5cf5eaeadb_0", "is_ignored": false, "lines": "        return success(this).output(\"<b>\" + answer + \"</b>\").build();", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::sink::direct-response::Spring", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection", "A07:2017 - Cross-Site Scripting (XSS)"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 67673, "rule_id": "GdUEwv", "rv_id": 735057, "url": "https://semgrep.dev/playground/r/7ZTWldy/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "version_id": "7ZTWldy"}}, "shortlink": "https://sg.run/wRqd", "source": "https://semgrep.dev/r/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$METHOD": {"abstract_content": "completed", "end": {"col": 32, "line": 95, "offset": 4286}, "start": {"col": 23, "line": 95, "offset": 4277}}, "$METHODNAME": {"abstract_content": "completed", "end": {"col": 32, "line": 95, "offset": 4286}, "start": {"col": 23, "line": 95, "offset": 4277}}, "$RET": {"abstract_content": "AttackResult AttackResult AttackResult AttackResult AttackResult AttackResult", "end": {"col": 22, "line": 95, "offset": 4276}, "start": {"col": 10, "line": 95, "offset": 4264}}, "$SOURCE": {"abstract_content": "question", "end": {"col": 62, "line": 95, "offset": 4316}, "start": {"col": 54, "line": 95, "offset": 4308}}, "$STR": {"abstract_content": "<b>", "end": {"col": 41, "line": 100, "offset": 4514}, "start": {"col": 38, "line": 100, "offset": 4511}}, "$TYPE": {"abstract_content": "String", "end": {"col": 53, "line": 95, "offset": 4307}, "start": {"col": 47, "line": 95, "offset": 4301}}, "$X": {"abstract_content": "success(this).output(\"<b>\"+answer+\"</b>\").build()", "end": {"col": 69, "line": 100, "offset": 4542}, "start": {"col": 16, "line": 100, "offset": 4489}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignment.java", "start": {"col": 16, "line": 100, "offset": 4489}}, {"check_id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal", "end": {"col": 98, "line": 92, "offset": 3709}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "id", "location": {"end": {"col": 13, "line": 90, "offset": 3558}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 90, "offset": 3556}}}], "taint_sink": ["CliLoc", [{"end": {"col": 98, "line": 92, "offset": 3709}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 91, "offset": 3599}}, "catPicture =\n          new File(catPicturesDirectory, (id == null ? RandomUtils.nextInt(1, 11) : id) + \".jpg\")"]], "taint_source": ["CliLoc", [{"end": {"col": 23, "line": 90, "offset": 3568}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 16, "line": 90, "offset": 3561}}, "request"]]}, "engine_kind": "OSS", "fingerprint": "2d0bb4f333f023e77d17c723f170bbd4a011a12ca8688407563f769dfebe5780019ba4940571ca0f95fcbf303910cf46859e70c8c894d70222fec4253a4113db_0", "is_ignored": false, "lines": "      var catPicture =\n          new File(catPicturesDirectory, (id == null ? RandomUtils.nextInt(1, 11) : id) + \".jpg\");", "message": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.owasp.org/index.php/Path_Traversal"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9160, "rule_id": "NbUk7X", "rv_id": 109758, "url": "https://semgrep.dev/playground/r/xyTKZP1/java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal", "version_id": "xyTKZP1"}}, "shortlink": "https://sg.run/oxXN", "source": "https://semgrep.dev/r/java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$FILE": {"abstract_content": "catPicture", "end": {"col": 21, "line": 91, "offset": 3609}, "start": {"col": 11, "line": 91, "offset": 3599}}, "$REQ": {"abstract_content": "request", "end": {"col": 23, "line": 90, "offset": 3568}, "start": {"col": 16, "line": 90, "offset": 3561}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 91, "offset": 3599}}, {"check_id": "java.servlets.security.httpservlet-path-traversal.httpservlet-path-traversal", "end": {"col": 98, "line": 92, "offset": 3709}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "id", "location": {"end": {"col": 13, "line": 90, "offset": 3558}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 90, "offset": 3556}}}], "taint_sink": ["CliLoc", [{"end": {"col": 98, "line": 92, "offset": 3709}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 91, "offset": 3599}}, "catPicture =\n          new File(catPicturesDirectory, (id == null ? RandomUtils.nextInt(1, 11) : id) + \".jpg\")"]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 90, "offset": 3587}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 16, "line": 90, "offset": 3561}}, "request.getParameter(\"id\")"]]}, "engine_kind": "OSS", "fingerprint": "68beaa5512d26c9ab155c0dcae68b71bdf063535b928165fc02bee7659c6e79978cf26656eb23715c5a0562d04cacc345b685082525f28ad27b0417762a67439_0", "is_ignored": false, "lines": "      var catPicture =\n          new File(catPicturesDirectory, (id == null ? RandomUtils.nextInt(1, 11) : id) + \".jpg\");", "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files. In Java, you may also consider using a utility method such as `org.apache.commons.io.FilenameUtils.getName(...)` to only retrieve the file name from the path. ", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::Servlet", "web::source::http-params::Servlet", "web::source::http-body::Servlet", "web::source::header::Servlet", "web::source::url-path-params::Servlet", "web::source::form-data::Servlet", "file::sink::file-access::java.io", "file::sink::file-access::java.nio", "file::sink::file-access::commons-io", "file::sink::file-access::javax.xml"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.owasp.org/index.php/Path_Traversal"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27173, "rule_id": "ReU0DY", "rv_id": 111591, "url": "https://semgrep.dev/playground/r/PkTJd9o/java.servlets.security.httpservlet-path-traversal.httpservlet-path-traversal", "version_id": "PkTJd9o"}}, "shortlink": "https://sg.run/wLdP", "source": "https://semgrep.dev/r/java.servlets.security.httpservlet-path-traversal.httpservlet-path-traversal", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN", "subcategory": ["vuln"], "technology": ["java", "servlets"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$FILE": {"abstract_content": "catPicture", "end": {"col": 21, "line": 91, "offset": 3609}, "start": {"col": 11, "line": 91, "offset": 3599}}, "$REQ": {"abstract_content": "request", "end": {"col": 23, "line": 90, "offset": 3568}, "start": {"col": 16, "line": 90, "offset": 3561}}, "$REQFUNC": {"abstract_content": "getParameter", "end": {"col": 36, "line": 90, "offset": 3581}, "start": {"col": 24, "line": 90, "offset": 3569}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 91, "offset": 3599}}, {"check_id": "java.servlets.security.httpservlet-path-traversal-deepsemgrep.httpservlet-path-traversal-deepsemgrep", "end": {"col": 98, "line": 92, "offset": 3709}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "id", "location": {"end": {"col": 13, "line": 90, "offset": 3558}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 90, "offset": 3556}}}], "taint_sink": ["CliLoc", [{"end": {"col": 98, "line": 92, "offset": 3709}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 92, "offset": 3622}}, "new File(catPicturesDirectory, (id == null ? RandomUtils.nextInt(1, 11) : id) + \".jpg\")"]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 90, "offset": 3587}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 16, "line": 90, "offset": 3561}}, "request.getParameter(\"id\")"]]}, "engine_kind": "OSS", "fingerprint": "079cead180215e53063588dc2d22ec26ab081b631d5f5befcaa73211aaea19b7b7da4d0118e5bc329acc7f4f91ca0a49ca5b7ffee81492065b49646dbba4bdbc_0", "is_ignored": false, "lines": "          new File(catPicturesDirectory, (id == null ? RandomUtils.nextInt(1, 11) : id) + \".jpg\");", "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files. In Java, you may also consider using a utility method such as `org.apache.commons.io.FilenameUtils.getName(...)` to only retrieve the file name from the path.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::Servlet", "web::source::http-params::Servlet", "web::source::http-body::Servlet", "web::source::header::Servlet", "file::sink::file-access::java.io", "file::sink::file-access::commons-io", "file::sink::file-access::javax.xml"], "impact": "MEDIUM", "interfile": true, "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.owasp.org/index.php/Path_Traversal"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 40131, "rule_id": "ZqUyo7", "rv_id": 111590, "url": "https://semgrep.dev/playground/r/44TR6B2/java.servlets.security.httpservlet-path-traversal-deepsemgrep.httpservlet-path-traversal-deepsemgrep", "version_id": "44TR6B2"}}, "shortlink": "https://sg.run/O5Xk", "source": "https://semgrep.dev/r/java.servlets.security.httpservlet-path-traversal-deepsemgrep.httpservlet-path-traversal-deepsemgrep", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN", "subcategory": ["vuln"], "technology": ["java", "servlets"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$1": {"abstract_content": "getParameter", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$REQ": {"abstract_content": "request", "end": {"col": 23, "line": 90, "offset": 3568}, "start": {"col": 16, "line": 90, "offset": 3561}}, "$REQFUNC": {"abstract_content": "getParameter", "end": {"col": 36, "line": 90, "offset": 3581}, "start": {"col": 24, "line": 90, "offset": 3569}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java", "start": {"col": 11, "line": 92, "offset": 3622}}, {"check_id": "java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "end": {"col": 96, "line": 90, "offset": 4127}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "password", "location": {"end": {"col": 62, "line": 42, "offset": 1857}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 54, "line": 42, "offset": 1849}}}, {"content": "strength", "location": {"end": {"col": 22, "line": 47, "offset": 2099}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 14, "line": 47, "offset": 2091}}}, {"content": "output", "location": {"end": {"col": 11, "line": 55, "offset": 2421}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 5, "line": 55, "offset": 2415}}}], "taint_sink": ["CliLoc", [{"end": {"col": 96, "line": 90, "offset": 4127}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 14, "line": 90, "offset": 4045}}, "success(this).feedback(\"securepassword-success\").output(output.toString()).build()"]], "taint_source": ["CliLoc", [{"end": {"col": 62, "line": 42, "offset": 1857}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 54, "line": 42, "offset": 1849}}, "password"]]}, "engine_kind": "OSS", "fingerprint": "fedbb4345f6248045946f216aaa49388d4f4bed340beff8f403baab3cab2faf09adbd13ee330d5c8ef59b8343a130a79405cfdf9d8ad608fe87d0459fe914fb2_0", "is_ignored": false, "lines": "      return success(this).feedback(\"securepassword-success\").output(output.toString()).build();", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::sink::direct-response::Spring", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection", "A07:2017 - Cross-Site Scripting (XSS)"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 67673, "rule_id": "GdUEwv", "rv_id": 735057, "url": "https://semgrep.dev/playground/r/7ZTWldy/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "version_id": "7ZTWldy"}}, "shortlink": "https://sg.run/wRqd", "source": "https://semgrep.dev/r/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$METHOD": {"abstract_content": "completed", "end": {"col": 32, "line": 42, "offset": 1827}, "start": {"col": 23, "line": 42, "offset": 1818}}, "$METHODNAME": {"abstract_content": "completed", "end": {"col": 32, "line": 42, "offset": 1827}, "start": {"col": 23, "line": 42, "offset": 1818}}, "$RET": {"abstract_content": "AttackResult AttackResult AttackResult AttackResult AttackResult AttackResult", "end": {"col": 22, "line": 42, "offset": 1817}, "start": {"col": 10, "line": 42, "offset": 1805}}, "$SOURCE": {"abstract_content": "password", "end": {"col": 62, "line": 42, "offset": 1857}, "start": {"col": 54, "line": 42, "offset": 1849}}, "$STR": {"abstract_content": "<div style=\\\"float: left;padding-right: 10px;\\\"><b>Score: </b>", "end": {"col": 72, "line": 56, "offset": 2501}, "start": {"col": 10, "line": 56, "offset": 2439}}, "$TYPE": {"abstract_content": "String", "end": {"col": 53, "line": 42, "offset": 1848}, "start": {"col": 47, "line": 42, "offset": 1842}}, "$X": {"abstract_content": "success(this).feedback(\"securepassword-success\").output(output.toString()).build()", "end": {"col": 96, "line": 90, "offset": 4127}, "start": {"col": 14, "line": 90, "offset": 4045}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 14, "line": 90, "offset": 4045}}, {"check_id": "java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "end": {"col": 97, "line": 91, "offset": 4225}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "password", "location": {"end": {"col": 62, "line": 42, "offset": 1857}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 54, "line": 42, "offset": 1849}}}, {"content": "strength", "location": {"end": {"col": 22, "line": 47, "offset": 2099}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 14, "line": 47, "offset": 2091}}}, {"content": "output", "location": {"end": {"col": 11, "line": 55, "offset": 2421}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 5, "line": 55, "offset": 2415}}}], "taint_sink": ["CliLoc", [{"end": {"col": 97, "line": 91, "offset": 4225}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 17, "line": 91, "offset": 4145}}, "failed(this).feedback(\"securepassword-failed\").output(output.toString()).build()"]], "taint_source": ["CliLoc", [{"end": {"col": 62, "line": 42, "offset": 1857}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 54, "line": 42, "offset": 1849}}, "password"]]}, "engine_kind": "OSS", "fingerprint": "9cd4477df660bfd8660e9ed215616d216fd7b018bbe3bac39989c86754c79c3b72a0e4df74f521a7ff9ae382a5c184510a343c8d48d6e79281b5cfea24c658ba_0", "is_ignored": false, "lines": "    else return failed(this).feedback(\"securepassword-failed\").output(output.toString()).build();", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::sink::direct-response::Spring", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection", "A07:2017 - Cross-Site Scripting (XSS)"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 67673, "rule_id": "GdUEwv", "rv_id": 735057, "url": "https://semgrep.dev/playground/r/7ZTWldy/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "version_id": "7ZTWldy"}}, "shortlink": "https://sg.run/wRqd", "source": "https://semgrep.dev/r/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$METHOD": {"abstract_content": "completed", "end": {"col": 32, "line": 42, "offset": 1827}, "start": {"col": 23, "line": 42, "offset": 1818}}, "$METHODNAME": {"abstract_content": "completed", "end": {"col": 32, "line": 42, "offset": 1827}, "start": {"col": 23, "line": 42, "offset": 1818}}, "$RET": {"abstract_content": "AttackResult AttackResult AttackResult AttackResult AttackResult AttackResult", "end": {"col": 22, "line": 42, "offset": 1817}, "start": {"col": 10, "line": 42, "offset": 1805}}, "$SOURCE": {"abstract_content": "password", "end": {"col": 62, "line": 42, "offset": 1857}, "start": {"col": 54, "line": 42, "offset": 1849}}, "$STR": {"abstract_content": "<div style=\\\"float: left;padding-right: 10px;\\\"><b>Score: </b>", "end": {"col": 72, "line": 56, "offset": 2501}, "start": {"col": 10, "line": 56, "offset": 2439}}, "$TYPE": {"abstract_content": "String", "end": {"col": 53, "line": 42, "offset": 1848}, "start": {"col": 47, "line": 42, "offset": 1842}}, "$X": {"abstract_content": "failed(this).feedback(\"securepassword-failed\").output(output.toString()).build()", "end": {"col": 97, "line": 91, "offset": 4225}, "start": {"col": 17, "line": 91, "offset": 4145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java", "start": {"col": 17, "line": 91, "offset": 4145}}, {"check_id": "java.servlets.security.cookie-issecure-false.cookie-issecure-false", "end": {"col": 49, "line": 79, "offset": 3273}, "extra": {"engine_kind": "OSS", "fingerprint": "6b787a3a997a1b6b1dd01b41fc923f4dcab79528399a5a4408dfce43d2bafe43895b9ce745682295d34ef1f8701c671c0e645e0dc3108af955c87968c9e04d1d_0", "fix": "cookie = new Cookie(COOKIE_NAME, \"\");\n    cookie.setSecure(true);", "is_ignored": false, "lines": "    Cookie cookie = new Cookie(COOKIE_NAME, \"\");", "message": "Default session middleware settings: `setSecure` not set to true. This ensures that the cookie is sent only over HTTPS to prevent cross-site scripting attacks.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://docs.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setSecure(boolean)", "https://owasp.org/www-community/controls/SecureCookieAttribute"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9218, "rule_id": "kxUkn9", "rv_id": 230005, "url": "https://semgrep.dev/playground/r/xyTvPr0/java.servlets.security.cookie-issecure-false.cookie-issecure-false", "version_id": "xyTvPr0"}}, "shortlink": "https://sg.run/pxn0", "source": "https://semgrep.dev/r/java.servlets.security.cookie-issecure-false.cookie-issecure-false", "subcategory": ["audit"], "technology": ["java", "cookie"], "vulnerability": "Insecure Transport", "vulnerability_class": ["Mishandled Sensitive Information"]}, "metavars": {"$...ARGS": {"abstract_content": "COOKIE_NAME\"\"", "end": {"col": 47, "line": 79, "offset": 3271}, "start": {"col": 32, "line": 79, "offset": 3256}}, "$COOKIE": {"abstract_content": "cookie", "end": {"col": 18, "line": 79, "offset": 3242}, "start": {"col": 12, "line": 79, "offset": 3236}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 5, "line": 79, "offset": 3229}}, {"check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 32, "line": 81, "offset": 3330}, "extra": {"engine_kind": "OSS", "fingerprint": "bdd0f82dc6ed3dd5d0b62de1387d7c1070d0f1b948a5143db34ebc54bf33e5c27586e23eaee95844311b77d49465ac7640dc9ad9e57a6e032c5e75a4f11a5c1b_0", "is_ignored": false, "lines": "    response.addCookie(cookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9170, "rule_id": "EwU2z6", "rv_id": 109686, "url": "https://semgrep.dev/playground/r/JdTNpEW/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "JdTNpEW"}}, "shortlink": "https://sg.run/b7Be", "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 30, "line": 81, "offset": 3328}, "start": {"col": 24, "line": 81, "offset": 3322}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 13, "line": 81, "offset": 3311}, "start": {"col": 5, "line": 81, "offset": 3303}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 5, "line": 81, "offset": 3303}}, {"check_id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "end": {"col": 32, "line": 81, "offset": 3330}, "extra": {"engine_kind": "OSS", "fingerprint": "3fb9b013bae97758fa2583c8df007899421211d89939a019f8efd2ad64c62eaf35a29348b92c059f60bc706e0572932669906fa65b03029d17914a24c591c92f_0", "is_ignored": false, "lines": "    response.addCookie(cookie);", "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'", "metadata": {"asvs": {"control_id": "3.4.1 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9172, "rule_id": "L1Uyvp", "rv_id": 109688, "url": "https://semgrep.dev/playground/r/GxTv63G/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "version_id": "GxTv63G"}}, "shortlink": "https://sg.run/kXoK", "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 30, "line": 81, "offset": 3328}, "start": {"col": 24, "line": 81, "offset": 3322}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 13, "line": 81, "offset": 3311}, "start": {"col": 5, "line": 81, "offset": 3303}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 5, "line": 81, "offset": 3303}}, {"check_id": "java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 32, "line": 81, "offset": 3330}, "extra": {"engine_kind": "OSS", "fingerprint": "cc55bced2af8f11f52bc20a240b70b7e87b54d36b74a65a4f4e254401867a3d0b14511336ea8c9969cade1205c4a28a9365cc8627b1cd8391cafa22b43845ab4_0", "is_ignored": false, "lines": "    response.addCookie(cookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/HttpOnly"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27163, "rule_id": "DbUR6k", "rv_id": 111578, "url": "https://semgrep.dev/playground/r/e1T03on/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "e1T03on"}}, "shortlink": "https://sg.run/2WZD", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 30, "line": 81, "offset": 3328}, "start": {"col": 24, "line": 81, "offset": 3322}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 13, "line": 81, "offset": 3311}, "start": {"col": 5, "line": 81, "offset": 3303}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 5, "line": 81, "offset": 3303}}, {"check_id": "java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "end": {"col": 32, "line": 81, "offset": 3330}, "extra": {"engine_kind": "OSS", "fingerprint": "aae91d21abc77af52b8d1499829a76e41cce7e85c7fdda6f2c8670a071e9e0589acce2482f6f9bb46e9ebe9f7511e0353f61831de6fd70638e2838b895bef070_0", "is_ignored": false, "lines": "    response.addCookie(cookie);", "message": "The application does not appear to verify inbound requests which can lead to a Cross-site request forgery (CSRF) vulnerability. If the application uses cookie-based authentication, an attacker can trick users into sending authenticated HTTP requests without their knowledge from any arbitrary domain they visit. To prevent this vulnerability start by identifying if the framework or library leveraged has built-in features or offers plugins for CSRF protection. CSRF tokens should be unique and securely random. The `Synchronizer Token` or `Double Submit Cookie` patterns with defense-in-depth mechanisms such as the `sameSite` cookie flag can help prevent CSRF. For more information, see: [Cross-site request forgery prevention](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)", "metadata": {"asvs": {"control_id": "3.4.3 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://stackoverflow.com/questions/42717210/samesite-cookie-in-java-application"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27164, "rule_id": "WAUqW7", "rv_id": 111579, "url": "https://semgrep.dev/playground/r/vdTY8wq/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "version_id": "vdTY8wq"}}, "shortlink": "https://sg.run/XR5b", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$RESP": {"abstract_content": "response", "end": {"col": 13, "line": 81, "offset": 3311}, "start": {"col": 5, "line": 81, "offset": 3303}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 5, "line": 81, "offset": 3303}}, {"check_id": "java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "end": {"col": 32, "line": 81, "offset": 3330}, "extra": {"engine_kind": "OSS", "fingerprint": "db136ac089c067f3ab5c2e4145fbb35252e301f964880014822c61e3b8249d39517fb3e531535d6eba15a97996ecf9a5b6bc60bd7f2bfb14e8eb5d9bd51f6706_0", "is_ignored": false, "lines": "    response.addCookie(cookie);", "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'", "metadata": {"asvs": {"control_id": "3.4.1 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/controls/SecureCookieAttribute"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27165, "rule_id": "0oUKLg", "rv_id": 111580, "url": "https://semgrep.dev/playground/r/d6Trv0B/java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "version_id": "d6Trv0B"}}, "shortlink": "https://sg.run/jW2J", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "cookie", "end": {"col": 30, "line": 81, "offset": 3328}, "start": {"col": 24, "line": 81, "offset": 3322}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 13, "line": 81, "offset": 3311}, "start": {"col": 5, "line": 81, "offset": 3303}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 5, "line": 81, "offset": 3303}}, {"check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 37, "line": 98, "offset": 4083}, "extra": {"engine_kind": "OSS", "fingerprint": "95cdc2e80ccaa8b38942609de1290409cb2b583b72ea3a2236b50ab680245676a39016a6e396f96a558c8c6020cdf8dc3c2f682747308d70898e5e366ee4c269_0", "is_ignored": false, "lines": "      response.addCookie(newCookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9170, "rule_id": "EwU2z6", "rv_id": 109686, "url": "https://semgrep.dev/playground/r/JdTNpEW/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "JdTNpEW"}}, "shortlink": "https://sg.run/b7Be", "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "newCookie", "end": {"col": 35, "line": 98, "offset": 4081}, "start": {"col": 26, "line": 98, "offset": 4072}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 98, "offset": 4061}, "start": {"col": 7, "line": 98, "offset": 4053}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 7, "line": 98, "offset": 4053}}, {"check_id": "java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "end": {"col": 37, "line": 98, "offset": 4083}, "extra": {"engine_kind": "OSS", "fingerprint": "89d92b93e321f4f7149e61f5dd6deab8ebd569213b774d9ba53736964df61fc0d5dcd1ebd9baa6152282582e0c0be674fb8ac0a94636e5077756c89f30fc2009_0", "is_ignored": false, "lines": "      response.addCookie(newCookie);", "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'", "metadata": {"asvs": {"control_id": "3.4.2 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"], "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/HttpOnly"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27163, "rule_id": "DbUR6k", "rv_id": 111578, "url": "https://semgrep.dev/playground/r/e1T03on/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "version_id": "e1T03on"}}, "shortlink": "https://sg.run/2WZD", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-httponly.cookie-missing-httponly", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cookie Security"]}, "metavars": {"$COOKIE": {"abstract_content": "newCookie", "end": {"col": 35, "line": 98, "offset": 4081}, "start": {"col": 26, "line": 98, "offset": 4072}}, "$RESPONSE": {"abstract_content": "response", "end": {"col": 15, "line": 98, "offset": 4061}, "start": {"col": 7, "line": 98, "offset": 4053}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 7, "line": 98, "offset": 4053}}, {"check_id": "java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "end": {"col": 37, "line": 98, "offset": 4083}, "extra": {"engine_kind": "OSS", "fingerprint": "aae91d21abc77af52b8d1499829a76e41cce7e85c7fdda6f2c8670a071e9e0589acce2482f6f9bb46e9ebe9f7511e0353f61831de6fd70638e2838b895bef070_1", "is_ignored": false, "lines": "      response.addCookie(newCookie);", "message": "The application does not appear to verify inbound requests which can lead to a Cross-site request forgery (CSRF) vulnerability. If the application uses cookie-based authentication, an attacker can trick users into sending authenticated HTTP requests without their knowledge from any arbitrary domain they visit. To prevent this vulnerability start by identifying if the framework or library leveraged has built-in features or offers plugins for CSRF protection. CSRF tokens should be unique and securely random. The `Synchronizer Token` or `Double Submit Cookie` patterns with defense-in-depth mechanisms such as the `sameSite` cookie flag can help prevent CSRF. For more information, see: [Cross-site request forgery prevention](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)", "metadata": {"asvs": {"control_id": "3.4.3 Missing Cookie Attribute", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "HIGH", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::search::cookie-config::Servlet"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://stackoverflow.com/questions/42717210/samesite-cookie-in-java-application"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27164, "rule_id": "WAUqW7", "rv_id": 111579, "url": "https://semgrep.dev/playground/r/vdTY8wq/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "version_id": "vdTY8wq"}}, "shortlink": "https://sg.run/XR5b", "source": "https://semgrep.dev/r/java.servlets.security.audit.cookie-missing-samesite.cookie-missing-samesite", "subcategory": ["audit"], "technology": ["java", "servlets"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$RESP": {"abstract_content": "response", "end": {"col": 15, "line": 98, "offset": 4061}, "start": {"col": 7, "line": 98, "offset": 4053}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java", "start": {"col": 7, "line": 98, "offset": 4053}}, {"check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 91, "line": 67, "offset": 2725}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "username_reg", "location": {"end": {"col": 40, "line": 57, "offset": 2311}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 28, "line": 57, "offset": 2299}}}], "taint_sink": ["CliLoc", [{"end": {"col": 91, "line": 67, "offset": 2725}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 13, "line": 67, "offset": 2647}}, "\"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\""]], "taint_source": ["CliLoc", [{"end": {"col": 40, "line": 57, "offset": 2311}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 28, "line": 57, "offset": 2299}}, "username_reg"]]}, "engine_kind": "OSS", "fingerprint": "d53714e6532ddd80ed37068e191af584b685a3d84c34ff4cab7bb5dac58952a099ff06ca9318701f14c2139c2b6a3790e9f7862af907a35b5310101f7c701c35_0", "is_ignored": false, "lines": "            \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14767, "rule_id": "10UdRR", "rv_id": 109782, "url": "https://semgrep.dev/playground/r/0bTLlny/java.spring.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTLlny"}}, "shortlink": "https://sg.run/9rzz", "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["spring"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "select", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "registerNewUser", "end": {"col": 38, "line": 56, "offset": 2270}, "start": {"col": 23, "line": 56, "offset": 2255}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 20, "line": 57, "offset": 2291}, "start": {"col": 8, "line": 57, "offset": 2279}}, "$SOURCE": {"abstract_content": "username_reg", "end": {"col": 40, "line": 57, "offset": 2311}, "start": {"col": 28, "line": 57, "offset": 2299}}, "$SQLSTR": {"abstract_content": "select userid from sql_challenge_users where userid = '", "end": {"col": 69, "line": 67, "offset": 2703}, "start": {"col": 14, "line": 67, "offset": 2648}}, "$TYPE": {"abstract_content": "String", "end": {"col": 27, "line": 57, "offset": 2298}, "start": {"col": 21, "line": 57, "offset": 2292}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 13, "line": 67, "offset": 2647}}, {"check_id": "java.lang.security.audit.formatted-sql-string-deepsemgrep.formatted-sql-string-deepsemgrep", "end": {"col": 69, "line": 69, "offset": 2855}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "username_reg", "location": {"end": {"col": 40, "line": 57, "offset": 2311}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 28, "line": 57, "offset": 2299}}}, {"content": "checkUserQuery", "location": {"end": {"col": 30, "line": 66, "offset": 2632}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 16, "line": 66, "offset": 2618}}}], "taint_sink": ["CliLoc", [{"end": {"col": 69, "line": 69, "offset": 2855}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 31, "line": 69, "offset": 2817}}, "statement.executeQuery(checkUserQuery)"]], "taint_source": ["CliLoc", [{"end": {"col": 40, "line": 57, "offset": 2311}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 28, "line": 57, "offset": 2299}}, "username_reg"]]}, "engine_kind": "OSS", "fingerprint": "58632fe240103f519c9a8384f7a120ca02f627ea0c66f411e2ec680591f1f1f086624b504f25069bc10a03ff0b90c8a37de206c2d0135549b7fe29f57f5d0d66_0", "is_ignored": false, "lines": "        ResultSet resultSet = statement.executeQuery(checkUserQuery);", "message": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions. To build SQL queries safely in Java, it is possible to adopt prepared statements by using the `java.sql.PreparedStatement` class with bind variables.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "functional-categories": ["web::source::cookie::Servlet", "web::source::http-params::Servlet", "web::source::http-body::Servlet", "web::source::header::Servlet", "web::source::url-path-params::Servlet", "web::source::cookie::Spring", "web::source::http-params::Spring", "web::source::http-body::Spring", "web::source::header::Spring", "web::source::url-path-params::Spring", "db::sink::sql-or-nosql-query::JPA", "db::sink::sql-or-nosql-query::java.sql"], "impact": "HIGH", "interfile": true, "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 40129, "rule_id": "v8U3yY", "rv_id": 111547, "url": "https://semgrep.dev/playground/r/PkTJdlo/java.lang.security.audit.formatted-sql-string-deepsemgrep.formatted-sql-string-deepsemgrep", "version_id": "PkTJdlo"}}, "shortlink": "https://sg.run/w5kd", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string-deepsemgrep.formatted-sql-string-deepsemgrep", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "RequestParam", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "registerNewUser", "end": {"col": 38, "line": 56, "offset": 2270}, "start": {"col": 23, "line": 56, "offset": 2255}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 20, "line": 57, "offset": 2291}, "start": {"col": 8, "line": 57, "offset": 2279}}, "$S": {"abstract_content": "statement", "end": {"col": 40, "line": 69, "offset": 2826}, "propagated_value": {"svalue_abstract_content": "connection.createStatement()", "svalue_end": {"col": 59, "line": 68, "offset": 2785}, "svalue_start": {"col": 31, "line": 68, "offset": 2757}}, "start": {"col": 31, "line": 69, "offset": 2817}}, "$SOURCE": {"abstract_content": "username_reg", "end": {"col": 40, "line": 57, "offset": 2311}, "start": {"col": 28, "line": 57, "offset": 2299}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 53, "line": 69, "offset": 2839}, "start": {"col": 41, "line": 69, "offset": 2827}}, "$TYPE": {"abstract_content": "String", "end": {"col": 27, "line": 57, "offset": 2298}, "start": {"col": 21, "line": 57, "offset": 2292}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 31, "line": 69, "offset": 2817}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 69, "line": 69, "offset": 2855}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "checkUserQuery", "location": {"end": {"col": 30, "line": 66, "offset": 2632}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 16, "line": 66, "offset": 2618}}}], "taint_sink": ["CliLoc", [{"end": {"col": 69, "line": 69, "offset": 2855}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 31, "line": 69, "offset": 2817}}, "statement.executeQuery(checkUserQuery)"]], "taint_source": ["CliLoc", [{"end": {"col": 85, "line": 67, "offset": 2719}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 73, "line": 67, "offset": 2707}}, "username_reg"]]}, "engine_kind": "OSS", "fingerprint": "c49f0ce5addecaaa3b77202d096504aaca55f52ddfda40f6a324f8a2f013ece26d091a0b9aef94f5dda1da778201ce635d81f95c0810d01e1f81488e164477a0_0", "is_ignored": false, "lines": "        ResultSet resultSet = statement.executeQuery(checkUserQuery);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$FUNC": {"abstract_content": "registerNewUser", "end": {"col": 38, "line": 56, "offset": 2270}, "start": {"col": 23, "line": 56, "offset": 2255}}, "$S": {"abstract_content": "statement", "end": {"col": 40, "line": 69, "offset": 2826}, "propagated_value": {"svalue_abstract_content": "connection.createStatement()", "svalue_end": {"col": 59, "line": 68, "offset": 2785}, "svalue_start": {"col": 31, "line": 68, "offset": 2757}}, "start": {"col": 31, "line": 69, "offset": 2817}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 53, "line": 69, "offset": 2839}, "start": {"col": 41, "line": 69, "offset": 2827}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 31, "line": 69, "offset": 2817}}, {"check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "end": {"col": 69, "line": 69, "offset": 2855}, "extra": {"engine_kind": "OSS", "fingerprint": "ba4a7a733fc19f0a3bfadec03133108afe341929aa404c2082c75265ff12b74627408a25acf43aab9db9c9407bff875c77f035a7d4bab34796687828297a6151_0", "is_ignored": false, "lines": "        ResultSet resultSet = statement.executeQuery(checkUserQuery);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9206, "rule_id": "oqUe8K", "rv_id": 109729, "url": "https://semgrep.dev/playground/r/PkTJ1vy/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "version_id": "PkTJ1vy"}}, "shortlink": "https://sg.run/AvkL", "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "subcategory": ["audit"], "technology": ["jdbc"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "executeQuery", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "executeQuery", "end": {"col": 53, "line": 69, "offset": 2839}, "start": {"col": 41, "line": 69, "offset": 2827}}, "$S": {"abstract_content": "statement", "end": {"col": 40, "line": 69, "offset": 2826}, "propagated_value": {"svalue_abstract_content": "connection.createStatement()", "svalue_end": {"col": 59, "line": 68, "offset": 2785}, "svalue_start": {"col": 31, "line": 68, "offset": 2757}}, "start": {"col": 31, "line": 69, "offset": 2817}}, "$SQL": {"abstract_content": "checkUserQuery", "end": {"col": 68, "line": 69, "offset": 2854}, "propagated_value": {"svalue_abstract_content": "\"select userid from sql_challenge_users where userid = '\"+username_reg+\"'\"", "svalue_end": {"col": 91, "line": 67, "offset": 2725}, "svalue_start": {"col": 13, "line": 67, "offset": 2647}}, "start": {"col": 54, "line": 69, "offset": 2840}}, "$X": {"abstract_content": "\"select userid from sql_challenge_users where userid = '\"+username_reg", "end": {"col": 85, "line": 67, "offset": 2719}, "start": {"col": 13, "line": 67, "offset": 2647}}, "$Y": {"abstract_content": "\"'\"", "end": {"col": 91, "line": 67, "offset": 2725}, "start": {"col": 88, "line": 67, "offset": 2722}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java", "start": {"col": 31, "line": 69, "offset": 2817}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 58, "line": 74, "offset": 3192}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "query", "location": {"end": {"col": 12, "line": 66, "offset": 2777}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java", "start": {"col": 7, "line": 66, "offset": 2772}}}], "taint_sink": ["CliLoc", [{"end": {"col": 58, "line": 74, "offset": 3192}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java", "start": {"col": 29, "line": 74, "offset": 3163}}, "statement.executeQuery(query)"]], "taint_source": ["CliLoc", [{"end": {"col": 74, "line": 66, "offset": 2839}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java", "start": {"col": 63, "line": 66, "offset": 2828}}, "accountName"]]}, "engine_kind": "OSS", "fingerprint": "e745ef8e1a5c9a0ed8d7e6865fdd2bb57dd83c2ec6c1690f8bc643a9824c32a1d64512cbb06c5668d5cac9aea43c518256c3a76ce0d8941bfa61f902f08d3069_0", "is_ignored": false, "lines": "        ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$FUNC": {"abstract_content": "injectableQuery", "end": {"col": 38, "line": 62, "offset": 2625}, "start": {"col": 23, "line": 62, "offset": 2610}}, "$S": {"abstract_content": "statement", "end": {"col": 38, "line": 74, "offset": 3172}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE ResultSet.CONCUR_READ_ONLY)", "svalue_end": {"col": 77, "line": 73, "offset": 3131}, "svalue_start": {"col": 11, "line": 72, "offset": 3027}}, "start": {"col": 29, "line": 74, "offset": 3163}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 74, "offset": 3185}, "start": {"col": 39, "line": 74, "offset": 3173}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java", "start": {"col": 29, "line": 74, "offset": 3163}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 31, "line": 71, "offset": 2810}, "extra": {"engine_kind": "OSS", "fingerprint": "f1682bfec5f5105e16258b8fe146f52e168958d32b07602f33c85f9dc689037bb599b2f6cf281acfb3422ebbd9b5aad446d7423cac0ba87104e90ca4408b8d24_0", "is_ignored": false, "lines": "        sqle.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 111546, "url": "https://semgrep.dev/playground/r/44TR6L2/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "44TR6L2"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "sqle", "end": {"col": 13, "line": 71, "offset": 2792}, "start": {"col": 9, "line": 71, "offset": 2788}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java", "start": {"col": 9, "line": 71, "offset": 2788}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 75, "offset": 2895}, "extra": {"engine_kind": "OSS", "fingerprint": "486091b0156fd6f1a0ae91057557dd276107c414ebac83daa31c81b024de4e76432ef1a8b697d62d9d95431995d1081b588f824bae08b09d585dbb6036f34ea2_0", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 111546, "url": "https://semgrep.dev/playground/r/44TR6L2/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "44TR6L2"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 75, "offset": 2877}, "start": {"col": 7, "line": 75, "offset": 2876}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java", "start": {"col": 7, "line": 75, "offset": 2876}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 58, "line": 71, "offset": 2879}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "query", "location": {"end": {"col": 17, "line": 64, "offset": 2528}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java", "start": {"col": 12, "line": 64, "offset": 2523}}}], "taint_sink": ["CliLoc", [{"end": {"col": 58, "line": 71, "offset": 2879}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java", "start": {"col": 29, "line": 71, "offset": 2850}}, "statement.executeQuery(query)"]], "taint_source": ["CliLoc", [{"end": {"col": 76, "line": 64, "offset": 2587}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java", "start": {"col": 70, "line": 64, "offset": 2581}}, "action"]]}, "engine_kind": "OSS", "fingerprint": "fda6380eddd6fb51ee624b97c8cf3828de2b3f20fb48a4d9a6f8aebb52f6628ed0d9bf9e2b969cb903b4689ec5c2521796cf0d77002eb266a42df0a1e4666be2_0", "is_ignored": false, "lines": "        ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$FUNC": {"abstract_content": "injectableQueryAvailability", "end": {"col": 53, "line": 62, "offset": 2446}, "start": {"col": 26, "line": 62, "offset": 2419}}, "$S": {"abstract_content": "statement", "end": {"col": 38, "line": 71, "offset": 2859}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE ResultSet.CONCUR_READ_ONLY)", "svalue_end": {"col": 79, "line": 70, "offset": 2820}, "svalue_start": {"col": 13, "line": 69, "offset": 2714}}, "start": {"col": 29, "line": 71, "offset": 2850}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 71, "offset": 2872}, "start": {"col": 39, "line": 71, "offset": 2860}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java", "start": {"col": 29, "line": 71, "offset": 2850}}, {"check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "end": {"col": 58, "line": 71, "offset": 2879}, "extra": {"engine_kind": "OSS", "fingerprint": "3b65b68b4b81bca5f3e840feffad106bd8583f29c7ce6d66d6d70a6d43daa8bb317ca19b5b870856243b57261bf926b14c7f8fd8a5a2843b91c9affd4b63f27a_0", "is_ignored": false, "lines": "        ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9206, "rule_id": "oqUe8K", "rv_id": 109729, "url": "https://semgrep.dev/playground/r/PkTJ1vy/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "version_id": "PkTJ1vy"}}, "shortlink": "https://sg.run/AvkL", "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "subcategory": ["audit"], "technology": ["jdbc"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "executeQuery", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 71, "offset": 2872}, "start": {"col": 39, "line": 71, "offset": 2860}}, "$S": {"abstract_content": "statement", "end": {"col": 38, "line": 71, "offset": 2859}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE ResultSet.CONCUR_READ_ONLY)", "svalue_end": {"col": 79, "line": 70, "offset": 2820}, "svalue_start": {"col": 13, "line": 69, "offset": 2714}}, "start": {"col": 29, "line": 71, "offset": 2850}}, "$SQL": {"abstract_content": "query", "end": {"col": 57, "line": 71, "offset": 2878}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM access_log WHERE action LIKE '%\"+action+\"%'\"", "svalue_end": {"col": 83, "line": 64, "offset": 2594}, "svalue_start": {"col": 20, "line": 64, "offset": 2531}}, "start": {"col": 52, "line": 71, "offset": 2873}}, "$X": {"abstract_content": "\"SELECT * FROM access_log WHERE action LIKE '%\"+action", "end": {"col": 76, "line": 64, "offset": 2587}, "start": {"col": 20, "line": 64, "offset": 2531}}, "$Y": {"abstract_content": "\"%'\"", "end": {"col": 83, "line": 64, "offset": 2594}, "start": {"col": 79, "line": 64, "offset": 2590}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java", "start": {"col": 29, "line": 71, "offset": 2850}}, {"check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "end": {"col": 56, "line": 65, "offset": 2630}, "extra": {"engine_kind": "OSS", "fingerprint": "496c4d05d818652b8a9287e45fed0a6fdaba157767aa07694c2f7348676efe3df0945d5d7c40dadbc08de815070ecdd9fb20b1e053b2cc3ad215f7c22dfd0e52_0", "is_ignored": false, "lines": "      ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9206, "rule_id": "oqUe8K", "rv_id": 109729, "url": "https://semgrep.dev/playground/r/PkTJ1vy/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "version_id": "PkTJ1vy"}}, "shortlink": "https://sg.run/AvkL", "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "subcategory": ["audit"], "technology": ["jdbc"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "executeQuery", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$FUNC": {"abstract_content": "injectableQuery", "end": {"col": 41, "line": 62, "offset": 2403}, "start": {"col": 26, "line": 62, "offset": 2388}}, "$METHOD": {"abstract_content": "executeQuery", "end": {"col": 49, "line": 65, "offset": 2623}, "start": {"col": 37, "line": 65, "offset": 2611}}, "$S": {"abstract_content": "statement", "end": {"col": 36, "line": 65, "offset": 2610}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(TYPE_SCROLL_INSENSITIVE CONCUR_READ_ONLY)", "svalue_end": {"col": 98, "line": 64, "offset": 2573}, "svalue_start": {"col": 29, "line": 64, "offset": 2504}}, "start": {"col": 27, "line": 65, "offset": 2601}}, "$SQL": {"abstract_content": "query", "end": {"col": 55, "line": 65, "offset": 2629}, "start": {"col": 50, "line": 65, "offset": 2624}}, "$VAL": {"abstract_content": "AttackResult AttackResult AttackResult AttackResult AttackResult AttackResult", "end": {"col": 25, "line": 62, "offset": 2387}, "start": {"col": 13, "line": 62, "offset": 2375}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java", "start": {"col": 27, "line": 65, "offset": 2601}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 58, "line": 67, "offset": 3241}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "query", "location": {"end": {"col": 12, "line": 62, "offset": 2929}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java", "start": {"col": 7, "line": 62, "offset": 2924}}}], "taint_sink": ["CliLoc", [{"end": {"col": 58, "line": 67, "offset": 3241}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java", "start": {"col": 29, "line": 67, "offset": 3212}}, "statement.executeQuery(query)"]], "taint_source": ["CliLoc", [{"end": {"col": 94, "line": 63, "offset": 3025}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java", "start": {"col": 83, "line": 63, "offset": 3014}}, "accountName"]]}, "engine_kind": "OSS", "fingerprint": "87b41df0c7fbafc05e82ec6315d02e5d475756b92804e886e0b8eae58e896c73924e3a3eedac2be57e1a3c13b60f6c699bf27ae1f5a9d793a0451578645d8da4_0", "is_ignored": false, "lines": "        ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$FUNC": {"abstract_content": "injectableQuery", "end": {"col": 41, "line": 59, "offset": 2809}, "start": {"col": 26, "line": 59, "offset": 2794}}, "$S": {"abstract_content": "statement", "end": {"col": 38, "line": 67, "offset": 3221}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE ResultSet.CONCUR_UPDATABLE)", "svalue_end": {"col": 77, "line": 66, "offset": 3180}, "svalue_start": {"col": 11, "line": 65, "offset": 3076}}, "start": {"col": 29, "line": 67, "offset": 3212}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 67, "offset": 3234}, "start": {"col": 39, "line": 67, "offset": 3222}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java", "start": {"col": 29, "line": 67, "offset": 3212}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 49, "line": 86, "offset": 3414}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "queryString", "location": {"end": {"col": 23, "line": 62, "offset": 2485}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java", "start": {"col": 12, "line": 62, "offset": 2474}}}, {"content": "query", "location": {"end": {"col": 30, "line": 64, "offset": 2656}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java", "start": {"col": 25, "line": 64, "offset": 2651}}}], "taint_sink": ["CliLoc", [{"end": {"col": 49, "line": 86, "offset": 3414}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java", "start": {"col": 29, "line": 86, "offset": 3394}}, "query.executeQuery()"]], "taint_source": ["CliLoc", [{"end": {"col": 100, "line": 62, "offset": 2562}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java", "start": {"col": 89, "line": 62, "offset": 2551}}, "accountName"]]}, "engine_kind": "OSS", "fingerprint": "b9c1ee5d74fb147fa99162ed1add174fedd140b64933d2d1a442542d977059c1def4f81b6524be95fe8952ce4e893d869a16144ec04423630e7c9206868727c7_0", "is_ignored": false, "lines": "        ResultSet results = query.executeQuery();", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$FUNC": {"abstract_content": "injectableQuery", "end": {"col": 41, "line": 61, "offset": 2420}, "start": {"col": 26, "line": 61, "offset": 2405}}, "$INPUT": {"abstract_content": "accountName", "end": {"col": 100, "line": 62, "offset": 2562}, "start": {"col": 89, "line": 62, "offset": 2551}}, "$P": {"abstract_content": "query", "end": {"col": 34, "line": 86, "offset": 3399}, "start": {"col": 29, "line": 86, "offset": 3394}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 47, "line": 86, "offset": 3412}, "start": {"col": 35, "line": 86, "offset": 3400}}, "$X": {"abstract_content": "\"SELECT * From user_data WHERE Login_Count = ? and userid= \"", "end": {"col": 86, "line": 62, "offset": 2548}, "start": {"col": 26, "line": 62, "offset": 2488}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java", "start": {"col": 29, "line": 86, "offset": 3394}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 58, "line": 78, "offset": 3072}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "query", "location": {"end": {"col": 17, "line": 65, "offset": 2604}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 12, "line": 65, "offset": 2599}}}], "taint_sink": ["CliLoc", [{"end": {"col": 58, "line": 78, "offset": 3072}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 29, "line": 78, "offset": 3043}}, "statement.executeQuery(query)"]], "taint_source": ["CliLoc", [{"end": {"col": 23, "line": 69, "offset": 2737}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 15, "line": 69, "offset": 2729}}, "auth_tan"]]}, "engine_kind": "OSS", "fingerprint": "5a3438f44548f04ed44c4be9e73c8015424b8d90224b758c9f65d2a7a89c163890b382e81151625a29310ec3bb7fe65ab07a5ce9532b9890b9fddeb247231eab_0", "is_ignored": false, "lines": "        ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$FUNC": {"abstract_content": "injectableQueryConfidentiality", "end": {"col": 56, "line": 63, "offset": 2507}, "start": {"col": 26, "line": 63, "offset": 2477}}, "$S": {"abstract_content": "statement", "end": {"col": 38, "line": 78, "offset": 3052}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE ResultSet.CONCUR_UPDATABLE)", "svalue_end": {"col": 79, "line": 76, "offset": 2981}, "svalue_start": {"col": 13, "line": 75, "offset": 2875}}, "start": {"col": 29, "line": 78, "offset": 3043}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 78, "offset": 3065}, "start": {"col": 39, "line": 78, "offset": 3053}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 29, "line": 78, "offset": 3043}}, {"check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "end": {"col": 58, "line": 78, "offset": 3072}, "extra": {"engine_kind": "OSS", "fingerprint": "8004eeffef239afb277bb1acabbf9804913e29dfb0e4d02d854a82019ae6da43c88797f81c6056071631e6abac50f8e3885052a459e89b06a3419786c6bca673_0", "is_ignored": false, "lines": "        ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9206, "rule_id": "oqUe8K", "rv_id": 109729, "url": "https://semgrep.dev/playground/r/PkTJ1vy/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "version_id": "PkTJ1vy"}}, "shortlink": "https://sg.run/AvkL", "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "subcategory": ["audit"], "technology": ["jdbc"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "executeQuery", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 78, "offset": 3065}, "start": {"col": 39, "line": 78, "offset": 3053}}, "$S": {"abstract_content": "statement", "end": {"col": 38, "line": 78, "offset": 3052}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE ResultSet.CONCUR_UPDATABLE)", "svalue_end": {"col": 79, "line": 76, "offset": 2981}, "svalue_start": {"col": 13, "line": 75, "offset": 2875}}, "start": {"col": 29, "line": 78, "offset": 3043}}, "$SQL": {"abstract_content": "query", "end": {"col": 57, "line": 78, "offset": 3071}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM employees WHERE last_name = '\"+name+\"' AND auth_tan = '\"+auth_tan+\"'\"", "svalue_end": {"col": 18, "line": 70, "offset": 2755}, "svalue_start": {"col": 9, "line": 66, "offset": 2615}}, "start": {"col": 52, "line": 78, "offset": 3066}}, "$X": {"abstract_content": "\"SELECT * FROM employees WHERE last_name = '\"+name+\"' AND auth_tan = '\"+auth_tan", "end": {"col": 23, "line": 69, "offset": 2737}, "start": {"col": 9, "line": 66, "offset": 2615}}, "$Y": {"abstract_content": "\"'\"", "end": {"col": 18, "line": 70, "offset": 2755}, "start": {"col": 15, "line": 70, "offset": 2752}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 29, "line": 78, "offset": 3043}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 40, "line": 158, "offset": 5696}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "action", "location": {"end": {"col": 11, "line": 148, "offset": 5245}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 5, "line": 148, "offset": 5239}}}, {"content": "logQuery", "location": {"end": {"col": 20, "line": 153, "offset": 5455}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 12, "line": 153, "offset": 5447}}}], "taint_sink": ["CliLoc", [{"end": {"col": 40, "line": 158, "offset": 5696}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 7, "line": 158, "offset": 5663}}, "statement.executeUpdate(logQuery)"]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 148, "offset": 5254}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 14, "line": 148, "offset": 5248}}, "action"]]}, "engine_kind": "OSS", "fingerprint": "b781dbe89fd825b16c927a50f69b2ee88b8d2a3da9e12b91d6e1370aeb5b7d3799588d81f9052a785317b14b305245c3f9767ab7c771cc4865f83440fd7ab9ed_0", "is_ignored": false, "lines": "      statement.executeUpdate(logQuery);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$ANNOT": {"abstract_content": "void", "end": {"col": 21, "line": 147, "offset": 5190}, "start": {"col": 17, "line": 147, "offset": 5186}}, "$FUNC": {"abstract_content": "log", "end": {"col": 25, "line": 147, "offset": 5194}, "start": {"col": 22, "line": 147, "offset": 5191}}, "$S": {"abstract_content": "statement", "end": {"col": 16, "line": 158, "offset": 5672}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(TYPE_SCROLL_SENSITIVE CONCUR_UPDATABLE)", "svalue_end": {"col": 96, "line": 157, "offset": 5655}, "svalue_start": {"col": 29, "line": 157, "offset": 5588}}, "start": {"col": 7, "line": 158, "offset": 5663}}, "$SQLFUNC": {"abstract_content": "executeUpdate", "end": {"col": 30, "line": 158, "offset": 5686}, "start": {"col": 17, "line": 158, "offset": 5673}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 7, "line": 158, "offset": 5663}}, {"check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "end": {"col": 40, "line": 158, "offset": 5696}, "extra": {"engine_kind": "OSS", "fingerprint": "ad2dce427928bd8c3483a09ad1e1df39799a993629dd4f27210d9aa57e0873565949e6f25975c59c189fd5e9132287815a05c96dc8b6096702b09887e7d4bb9c_0", "is_ignored": false, "lines": "      statement.executeUpdate(logQuery);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9206, "rule_id": "oqUe8K", "rv_id": 109729, "url": "https://semgrep.dev/playground/r/PkTJ1vy/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "version_id": "PkTJ1vy"}}, "shortlink": "https://sg.run/AvkL", "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "subcategory": ["audit"], "technology": ["jdbc"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "executeUpdate", "end": {"col": 14, "line": 1, "offset": 13}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "executeUpdate", "end": {"col": 30, "line": 158, "offset": 5686}, "start": {"col": 17, "line": 158, "offset": 5673}}, "$S": {"abstract_content": "statement", "end": {"col": 16, "line": 158, "offset": 5672}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(TYPE_SCROLL_SENSITIVE CONCUR_UPDATABLE)", "svalue_end": {"col": 96, "line": 157, "offset": 5655}, "svalue_start": {"col": 29, "line": 157, "offset": 5588}}, "start": {"col": 7, "line": 158, "offset": 5663}}, "$SQL": {"abstract_content": "logQuery", "end": {"col": 39, "line": 158, "offset": 5695}, "propagated_value": {"svalue_abstract_content": "\"INSERT INTO access_log (time, action) VALUES ('\"+time+\"', '\"+action+\"')\"", "svalue_end": {"col": 90, "line": 154, "offset": 5547}, "svalue_start": {"col": 9, "line": 154, "offset": 5466}}, "start": {"col": 31, "line": 158, "offset": 5687}}, "$X": {"abstract_content": "\"INSERT INTO access_log (time, action) VALUES ('\"+time+\"', '\"+action", "end": {"col": 83, "line": 154, "offset": 5540}, "start": {"col": 9, "line": 154, "offset": 5466}}, "$Y": {"abstract_content": "\"')\"", "end": {"col": 90, "line": 154, "offset": 5547}, "start": {"col": 86, "line": 154, "offset": 5543}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java", "start": {"col": 7, "line": 158, "offset": 5663}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 58, "line": 76, "offset": 3081}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "query", "location": {"end": {"col": 17, "line": 66, "offset": 2645}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java", "start": {"col": 12, "line": 66, "offset": 2640}}}], "taint_sink": ["CliLoc", [{"end": {"col": 58, "line": 76, "offset": 3081}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java", "start": {"col": 29, "line": 76, "offset": 3052}}, "statement.executeQuery(query)"]], "taint_source": ["CliLoc", [{"end": {"col": 23, "line": 70, "offset": 2778}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java", "start": {"col": 15, "line": 70, "offset": 2770}}, "auth_tan"]]}, "engine_kind": "OSS", "fingerprint": "752aecd0dfe12b88bf5211f759e86ef831ae736c9e202e2a90aa9f9275bc5a0725691c3915f7b6936cbaa462aff516f9c16b0e2b80bfcb657d3fb34ac079537a_0", "is_ignored": false, "lines": "        ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 109715, "url": "https://semgrep.dev/playground/r/O9TNOzA/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "O9TNOzA"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$FUNC": {"abstract_content": "injectableQueryIntegrity", "end": {"col": 50, "line": 64, "offset": 2548}, "start": {"col": 26, "line": 64, "offset": 2524}}, "$S": {"abstract_content": "statement", "end": {"col": 38, "line": 76, "offset": 3061}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(TYPE_SCROLL_SENSITIVE CONCUR_UPDATABLE)", "svalue_end": {"col": 98, "line": 74, "offset": 2970}, "svalue_start": {"col": 31, "line": 74, "offset": 2903}}, "start": {"col": 29, "line": 76, "offset": 3052}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 76, "offset": 3074}, "start": {"col": 39, "line": 76, "offset": 3062}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java", "start": {"col": 29, "line": 76, "offset": 3052}}, {"check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "end": {"col": 58, "line": 76, "offset": 3081}, "extra": {"engine_kind": "OSS", "fingerprint": "43529cef2371702cd20a12426ce712c0da8a0ba768f6cf2663c75f999461770b9d3a75d317506c12e3276ef83ac30b39a433da5b657885b7c5fc3e6b8060383c_0", "is_ignored": false, "lines": "        ResultSet results = statement.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9206, "rule_id": "oqUe8K", "rv_id": 109729, "url": "https://semgrep.dev/playground/r/PkTJ1vy/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "version_id": "PkTJ1vy"}}, "shortlink": "https://sg.run/AvkL", "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "subcategory": ["audit"], "technology": ["jdbc"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "executeQuery", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "executeQuery", "end": {"col": 51, "line": 76, "offset": 3074}, "start": {"col": 39, "line": 76, "offset": 3062}}, "$S": {"abstract_content": "statement", "end": {"col": 38, "line": 76, "offset": 3061}, "propagated_value": {"svalue_abstract_content": "connection.createStatement(TYPE_SCROLL_SENSITIVE CONCUR_UPDATABLE)", "svalue_end": {"col": 98, "line": 74, "offset": 2970}, "svalue_start": {"col": 31, "line": 74, "offset": 2903}}, "start": {"col": 29, "line": 76, "offset": 3052}}, "$SQL": {"abstract_content": "query", "end": {"col": 57, "line": 76, "offset": 3080}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM employees WHERE last_name = '\"+name+\"' AND auth_tan = '\"+auth_tan+\"'\"", "svalue_end": {"col": 18, "line": 71, "offset": 2796}, "svalue_start": {"col": 9, "line": 67, "offset": 2656}}, "start": {"col": 52, "line": 76, "offset": 3075}}, "$X": {"abstract_content": "\"SELECT * FROM employees WHERE last_name = '\"+name+\"' AND auth_tan = '\"+auth_tan", "end": {"col": 23, "line": 70, "offset": 2778}, "start": {"col": 9, "line": 67, "offset": 2656}}, "$Y": {"abstract_content": "\"'\"", "end": {"col": 18, "line": 71, "offset": 2796}, "start": {"col": 15, "line": 71, "offset": 2793}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java", "start": {"col": 29, "line": 76, "offset": 3052}}, {"check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 27, "line": 75, "offset": 2646}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "column", "location": {"end": {"col": 55, "line": 67, "offset": 2287}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java", "start": {"col": 49, "line": 67, "offset": 2281}}}], "taint_sink": ["CliLoc", [{"end": {"col": 27, "line": 75, "offset": 2646}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java", "start": {"col": 15, "line": 73, "offset": 2491}}, "\"select id, hostname, ip, mac, status, description from SERVERS where status <> 'out\"\n                  + \" of order' order by \"\n                  + column"]], "taint_source": ["CliLoc", [{"end": {"col": 55, "line": 67, "offset": 2287}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java", "start": {"col": 49, "line": 67, "offset": 2281}}, "column"]]}, "engine_kind": "OSS", "fingerprint": "e6ff9ae0b411027f7dfd86f84b851c08de1d4ab8f9d9d9c80aa9b689f23eea9f2fe822d8b8c7f6ff06f44892a5622c7ad47420cac54a5e9dbdbb9d64a6843351_0", "is_ignored": false, "lines": "              \"select id, hostname, ip, mac, status, description from SERVERS where status <> 'out\"\n                  + \" of order' order by \"\n                  + column)) {", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14767, "rule_id": "10UdRR", "rv_id": 109782, "url": "https://semgrep.dev/playground/r/0bTLlny/java.spring.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTLlny"}}, "shortlink": "https://sg.run/9rzz", "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["spring"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "select", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "sort", "end": {"col": 27, "line": 67, "offset": 2259}, "start": {"col": 23, "line": 67, "offset": 2255}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 41, "line": 67, "offset": 2273}, "start": {"col": 29, "line": 67, "offset": 2261}}, "$SOURCE": {"abstract_content": "column", "end": {"col": 55, "line": 67, "offset": 2287}, "start": {"col": 49, "line": 67, "offset": 2281}}, "$SQLSTR": {"abstract_content": "\"select id, hostname, ip, mac, status, description from SERVERS where status <> 'out\"", "end": {"col": 100, "line": 73, "offset": 2576}, "start": {"col": 15, "line": 73, "offset": 2491}}, "$TYPE": {"abstract_content": "String", "end": {"col": 48, "line": 67, "offset": 2280}, "start": {"col": 42, "line": 67, "offset": 2274}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java", "start": {"col": 15, "line": 73, "offset": 2491}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 34, "line": 130, "offset": 5741}, "extra": {"engine_kind": "OSS", "fingerprint": "459aa3171b9921a8ac51dfd034db92056da7b2cfc8e46b503a6b5d3c257252ef5ab6883afa5ffe40c781b9f11459e74a9a3b0340be6f787d9017d502453ce11b_0", "is_ignored": false, "lines": "      exception.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 111546, "url": "https://semgrep.dev/playground/r/44TR6L2/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "44TR6L2"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "exception", "end": {"col": 16, "line": 130, "offset": 5723}, "start": {"col": 7, "line": 130, "offset": 5714}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java", "start": {"col": 7, "line": 130, "offset": 5714}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 62, "offset": 2716}, "extra": {"engine_kind": "OSS", "fingerprint": "375b81c2609176779dc2bac48bd5b4889437d7223248b6e999e5bfcec00fc47b2b544518cbbe51a8c4a35ddbff575641a23efb710b50d67e02ad9d3c7d9f03af_0", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 111546, "url": "https://semgrep.dev/playground/r/44TR6L2/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "44TR6L2"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 62, "offset": 2698}, "start": {"col": 7, "line": 62, "offset": 2697}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java", "start": {"col": 7, "line": 62, "offset": 2697}}, {"check_id": "java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "end": {"col": 21, "line": 91, "offset": 3728}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "field1", "location": {"end": {"col": 34, "line": 60, "offset": 2496}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 28, "line": 60, "offset": 2490}}}, {"content": "cart", "location": {"end": {"col": 9, "line": 76, "offset": 3051}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 5, "line": 76, "offset": 3047}}}], "taint_sink": ["CliLoc", [{"end": {"col": 21, "line": 91, "offset": 3728}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 16, "line": 88, "offset": 3599}}, "success(this)\n            .feedback(\"xss-reflected-5a-success-console\")\n            .output(cart.toString())\n            .build()"]], "taint_source": ["CliLoc", [{"end": {"col": 34, "line": 60, "offset": 2496}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 28, "line": 60, "offset": 2490}}, "field1"]]}, "engine_kind": "OSS", "fingerprint": "91a2d239ca6afa9b67dd23f4910cd32239ed303a2666d18a7c07583bd26664b99f0e5b093f3ff0de8b2c3910233a4968b303aa2d6e444d3f4e030903f45e8476_0", "is_ignored": false, "lines": "        return success(this)\n            .feedback(\"xss-reflected-5a-success-console\")\n            .output(cart.toString())\n            .build();", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::sink::direct-response::Spring", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection", "A07:2017 - Cross-Site Scripting (XSS)"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 67673, "rule_id": "GdUEwv", "rv_id": 735057, "url": "https://semgrep.dev/playground/r/7ZTWldy/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "version_id": "7ZTWldy"}}, "shortlink": "https://sg.run/wRqd", "source": "https://semgrep.dev/r/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$METHOD": {"abstract_content": "completed", "end": {"col": 32, "line": 55, "offset": 2325}, "start": {"col": 23, "line": 55, "offset": 2316}}, "$METHODNAME": {"abstract_content": "completed", "end": {"col": 32, "line": 55, "offset": 2325}, "start": {"col": 23, "line": 55, "offset": 2316}}, "$RET": {"abstract_content": "AttackResult AttackResult AttackResult AttackResult AttackResult AttackResult", "end": {"col": 22, "line": 55, "offset": 2315}, "start": {"col": 10, "line": 55, "offset": 2303}}, "$SOURCE": {"abstract_content": "field1", "end": {"col": 34, "line": 60, "offset": 2496}, "start": {"col": 28, "line": 60, "offset": 2490}}, "$TYPE": {"abstract_content": "String", "end": {"col": 27, "line": 60, "offset": 2489}, "start": {"col": 21, "line": 60, "offset": 2483}}, "$X": {"abstract_content": "success(this).feedback(\"xss-reflected-5a-success-console\").output(cart.toString()).build()", "end": {"col": 21, "line": 91, "offset": 3728}, "start": {"col": 16, "line": 88, "offset": 3599}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 16, "line": 88, "offset": 3599}}, {"check_id": "java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "end": {"col": 21, "line": 96, "offset": 3887}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "field1", "location": {"end": {"col": 34, "line": 60, "offset": 2496}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 28, "line": 60, "offset": 2490}}}, {"content": "cart", "location": {"end": {"col": 9, "line": 76, "offset": 3051}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 5, "line": 76, "offset": 3047}}}], "taint_sink": ["CliLoc", [{"end": {"col": 21, "line": 96, "offset": 3887}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 16, "line": 93, "offset": 3760}}, "success(this)\n            .feedback(\"xss-reflected-5a-success-alert\")\n            .output(cart.toString())\n            .build()"]], "taint_source": ["CliLoc", [{"end": {"col": 34, "line": 60, "offset": 2496}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 28, "line": 60, "offset": 2490}}, "field1"]]}, "engine_kind": "OSS", "fingerprint": "c9f6ea7c72094461071e0bd5312e91485180e5fad8e047da0f244149158e6f5ba749ccb31e2772ba40cdb9fdc95c0e82bb31f13dce54784841df4dc86f22e646_0", "is_ignored": false, "lines": "        return success(this)\n            .feedback(\"xss-reflected-5a-success-alert\")\n            .output(cart.toString())\n            .build();", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::sink::direct-response::Spring", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection", "A07:2017 - Cross-Site Scripting (XSS)"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 67673, "rule_id": "GdUEwv", "rv_id": 735057, "url": "https://semgrep.dev/playground/r/7ZTWldy/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "version_id": "7ZTWldy"}}, "shortlink": "https://sg.run/wRqd", "source": "https://semgrep.dev/r/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$METHOD": {"abstract_content": "completed", "end": {"col": 32, "line": 55, "offset": 2325}, "start": {"col": 23, "line": 55, "offset": 2316}}, "$METHODNAME": {"abstract_content": "completed", "end": {"col": 32, "line": 55, "offset": 2325}, "start": {"col": 23, "line": 55, "offset": 2316}}, "$RET": {"abstract_content": "AttackResult AttackResult AttackResult AttackResult AttackResult AttackResult", "end": {"col": 22, "line": 55, "offset": 2315}, "start": {"col": 10, "line": 55, "offset": 2303}}, "$SOURCE": {"abstract_content": "field1", "end": {"col": 34, "line": 60, "offset": 2496}, "start": {"col": 28, "line": 60, "offset": 2490}}, "$TYPE": {"abstract_content": "String", "end": {"col": 27, "line": 60, "offset": 2489}, "start": {"col": 21, "line": 60, "offset": 2483}}, "$X": {"abstract_content": "success(this).feedback(\"xss-reflected-5a-success-alert\").output(cart.toString()).build()", "end": {"col": 21, "line": 96, "offset": 3887}, "start": {"col": 16, "line": 93, "offset": 3760}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 16, "line": 93, "offset": 3760}}, {"check_id": "java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "end": {"col": 95, "line": 100, "offset": 4072}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "field1", "location": {"end": {"col": 34, "line": 60, "offset": 2496}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 28, "line": 60, "offset": 2490}}}, {"content": "cart", "location": {"end": {"col": 9, "line": 76, "offset": 3051}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 5, "line": 76, "offset": 3047}}}], "taint_sink": ["CliLoc", [{"end": {"col": 95, "line": 100, "offset": 4072}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 14, "line": 100, "offset": 3991}}, "failed(this).feedback(\"xss-reflected-5a-failure\").output(cart.toString()).build()"]], "taint_source": ["CliLoc", [{"end": {"col": 34, "line": 60, "offset": 2496}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 28, "line": 60, "offset": 2490}}, "field1"]]}, "engine_kind": "OSS", "fingerprint": "e4b6ff78edd7dc375ae5903be9dc61a985c80ae3e76ce1e47d0ee1e9bd68d9a820f926ad2855d9ce0bd671d459b1d2e2f5ccec88f52fc8d898a71f1dcb1ad6b3_0", "is_ignored": false, "lines": "      return failed(this).feedback(\"xss-reflected-5a-failure\").output(cart.toString()).build();", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::sink::direct-response::Spring", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection", "A07:2017 - Cross-Site Scripting (XSS)"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 67673, "rule_id": "GdUEwv", "rv_id": 735057, "url": "https://semgrep.dev/playground/r/7ZTWldy/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "version_id": "7ZTWldy"}}, "shortlink": "https://sg.run/wRqd", "source": "https://semgrep.dev/r/java.spring.tainted-html-string-responsebody.tainted-html-string-responsebody", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$METHOD": {"abstract_content": "completed", "end": {"col": 32, "line": 55, "offset": 2325}, "start": {"col": 23, "line": 55, "offset": 2316}}, "$METHODNAME": {"abstract_content": "completed", "end": {"col": 32, "line": 55, "offset": 2325}, "start": {"col": 23, "line": 55, "offset": 2316}}, "$RET": {"abstract_content": "AttackResult AttackResult AttackResult AttackResult AttackResult AttackResult", "end": {"col": 22, "line": 55, "offset": 2315}, "start": {"col": 10, "line": 55, "offset": 2303}}, "$SOURCE": {"abstract_content": "field1", "end": {"col": 34, "line": 60, "offset": 2496}, "start": {"col": 28, "line": 60, "offset": 2490}}, "$TYPE": {"abstract_content": "String", "end": {"col": 27, "line": 60, "offset": 2489}, "start": {"col": 21, "line": 60, "offset": 2483}}, "$X": {"abstract_content": "failed(this).feedback(\"xss-reflected-5a-failure\").output(cart.toString()).build()", "end": {"col": 95, "line": 100, "offset": 4072}, "start": {"col": 14, "line": 100, "offset": 3991}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java", "start": {"col": 14, "line": 100, "offset": 3991}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 99, "offset": 3743}, "extra": {"engine_kind": "OSS", "fingerprint": "00edc66bd039c3149b9635acf2e88ef098fa678c673e9b0c8f2aa30a165f6bbb7cfa52632801f12e38df8c64868fee9874b71e776387ccf10fb01432565335d2_0", "is_ignored": false, "lines": "  @RequestMapping(", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "getSampleDTDFile", "end": {"col": 33, "line": 104, "offset": 3897}, "start": {"col": 17, "line": 104, "offset": 3881}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 16, "line": 104, "offset": 3880}, "start": {"col": 10, "line": 104, "offset": 3874}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java", "start": {"col": 4, "line": 99, "offset": 3729}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 73, "offset": 2765}, "extra": {"engine_kind": "OSS", "fingerprint": "ecaca92d2719a579da8a0136173c43f8ad7399308de83fe9457a678c7e3a02563b0f63d8f97a50ab52d7f5d6a9647c8de132ae33765c5e688cfc19de747bc7e8_0", "is_ignored": false, "lines": "  @RequestMapping(", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 109785, "url": "https://semgrep.dev/playground/r/l4T4vEd/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "l4T4vEd"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "getFileLocation", "end": {"col": 32, "line": 78, "offset": 2925}, "start": {"col": 17, "line": 78, "offset": 2910}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 16, "line": 78, "offset": 2909}, "start": {"col": 10, "line": 78, "offset": 2903}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 4, "line": 73, "offset": 2751}}, {"check_id": "java.spring.security.injection.tainted-file-path.tainted-file-path", "end": {"col": 77, "line": 89, "offset": 3352}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "myFile", "location": {"end": {"col": 49, "line": 84, "offset": 3080}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 43, "line": 84, "offset": 3074}}}], "taint_sink": ["CliLoc", [{"end": {"col": 77, "line": 89, "offset": 3352}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 23, "line": 89, "offset": 3298}}, "new File(destinationDir, myFile.getOriginalFilename())"]], "taint_source": ["CliLoc", [{"end": {"col": 49, "line": 84, "offset": 3080}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 43, "line": 84, "offset": 3074}}, "myFile"]]}, "engine_kind": "OSS", "fingerprint": "aa6576bbc68b53f4b7aae0ea2a037982fa4a4448ba504d4b9344cbe5f359c4334bc2443c3a85dc8691c7b943d6ff8ac191d691393d6a0f08bfa7921e17a65b46_0", "is_ignored": false, "lines": "    myFile.transferTo(new File(destinationDir, myFile.getOriginalFilename()));", "message": "Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-23: Relative Path Traversal"], "impact": "HIGH", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/www-community/attacks/Path_Traversal"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 22074, "rule_id": "lBUxok", "rv_id": 109780, "url": "https://semgrep.dev/playground/r/DkT6nEd/java.spring.security.injection.tainted-file-path.tainted-file-path", "version_id": "DkT6nEd"}}, "shortlink": "https://sg.run/x9o0", "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-file-path.tainted-file-path", "subcategory": ["vuln"], "technology": ["java", "spring"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$1": {"abstract_content": "RequestParam", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "importFile", "end": {"col": 33, "line": 83, "offset": 3030}, "start": {"col": 23, "line": 83, "offset": 3020}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 20, "line": 84, "offset": 3051}, "start": {"col": 8, "line": 84, "offset": 3039}}, "$SOURCE": {"abstract_content": "myFile", "end": {"col": 49, "line": 84, "offset": 3080}, "start": {"col": 43, "line": 84, "offset": 3074}}, "$TYPE": {"abstract_content": "MultipartFile", "end": {"col": 42, "line": 84, "offset": 3073}, "start": {"col": 29, "line": 84, "offset": 3060}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 23, "line": 89, "offset": 3298}}, {"check_id": "java.spring.spring-tainted-path-traversal.spring-tainted-path-traversal", "end": {"col": 76, "line": 89, "offset": 3351}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "myFile", "location": {"end": {"col": 49, "line": 84, "offset": 3080}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 43, "line": 84, "offset": 3074}}}], "taint_sink": ["CliLoc", [{"end": {"col": 76, "line": 89, "offset": 3351}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 48, "line": 89, "offset": 3323}}, "myFile.getOriginalFilename()"]], "taint_source": ["CliLoc", [{"end": {"col": 49, "line": 84, "offset": 3080}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 43, "line": 84, "offset": 3074}}, "myFile"]]}, "engine_kind": "OSS", "fingerprint": "8555ea883e31b96a6d958dfc419ec8448610f0405b6be0619bf56fb6398c304a9399ff19e8eec7114b994bd33c4b16e50a84a531daf9dd41effba2b076c19aab_0", "is_ignored": false, "lines": "    myFile.transferTo(new File(destinationDir, myFile.getOriginalFilename()));", "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files. In Java, you may also consider using a utility method such as `org.apache.commons.io.FilenameUtils.getName(...)` to only retrieve the file name from the path.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["file::sink::file-access::commons-io", "file::sink::file-access::java.io", "file::sink::file-access::java.xml", "file::sink::file-access::spring", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control", "A05:2017 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control", "https://owasp.org/www-community/attacks/Path_Traversal", "https://portswigger.net/web-security/file-path-traversal", "https://www.stackhawk.com/blog/spring-path-traversal-guide-examples-and-prevention/"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 72945, "rule_id": "yyUr8r", "rv_id": 735056, "url": "https://semgrep.dev/playground/r/ExTqLOx/java.spring.spring-tainted-path-traversal.spring-tainted-path-traversal", "version_id": "ExTqLOx"}}, "shortlink": "https://sg.run/Pqzq", "source": "https://semgrep.dev/r/java.spring.spring-tainted-path-traversal.spring-tainted-path-traversal", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$1": {"abstract_content": "RequestParam", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$FILE": {"abstract_content": "myFile.getOriginalFilename()", "end": {"col": 76, "line": 89, "offset": 3351}, "start": {"col": 48, "line": 89, "offset": 3323}}, "$METHOD": {"abstract_content": "importFile", "end": {"col": 33, "line": 83, "offset": 3030}, "start": {"col": 23, "line": 83, "offset": 3020}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 20, "line": 84, "offset": 3051}, "start": {"col": 8, "line": 84, "offset": 3039}}, "$RET": {"abstract_content": "ModelAndView", "end": {"col": 22, "line": 83, "offset": 3019}, "start": {"col": 10, "line": 83, "offset": 3007}}, "$SOURCE": {"abstract_content": "myFile", "end": {"col": 49, "line": 84, "offset": 3080}, "start": {"col": 43, "line": 84, "offset": 3074}}, "$TYPE": {"abstract_content": "MultipartFile", "end": {"col": 42, "line": 84, "offset": 3073}, "start": {"col": 29, "line": 84, "offset": 3060}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 48, "line": 89, "offset": 3323}}, {"check_id": "java.spring.security.injection.tainted-file-path.tainted-file-path", "end": {"col": 89, "line": 90, "offset": 3443}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "myFile", "location": {"end": {"col": 49, "line": 84, "offset": 3080}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 43, "line": 84, "offset": 3074}}}], "taint_sink": ["CliLoc", [{"end": {"col": 89, "line": 90, "offset": 3443}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 35, "line": 90, "offset": 3389}}, "new File(destinationDir, myFile.getOriginalFilename())"]], "taint_source": ["CliLoc", [{"end": {"col": 49, "line": 84, "offset": 3080}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 43, "line": 84, "offset": 3074}}, "myFile"]]}, "engine_kind": "OSS", "fingerprint": "aa6576bbc68b53f4b7aae0ea2a037982fa4a4448ba504d4b9344cbe5f359c4334bc2443c3a85dc8691c7b943d6ff8ac191d691393d6a0f08bfa7921e17a65b46_1", "is_ignored": false, "lines": "    log.debug(\"File saved to {}\", new File(destinationDir, myFile.getOriginalFilename()));", "message": "Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-23: Relative Path Traversal"], "impact": "HIGH", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/www-community/attacks/Path_Traversal"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 22074, "rule_id": "lBUxok", "rv_id": 109780, "url": "https://semgrep.dev/playground/r/DkT6nEd/java.spring.security.injection.tainted-file-path.tainted-file-path", "version_id": "DkT6nEd"}}, "shortlink": "https://sg.run/x9o0", "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-file-path.tainted-file-path", "subcategory": ["vuln"], "technology": ["java", "spring"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$1": {"abstract_content": "RequestParam", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "importFile", "end": {"col": 33, "line": 83, "offset": 3030}, "start": {"col": 23, "line": 83, "offset": 3020}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 20, "line": 84, "offset": 3051}, "start": {"col": 8, "line": 84, "offset": 3039}}, "$SOURCE": {"abstract_content": "myFile", "end": {"col": 49, "line": 84, "offset": 3080}, "start": {"col": 43, "line": 84, "offset": 3074}}, "$TYPE": {"abstract_content": "MultipartFile", "end": {"col": 42, "line": 84, "offset": 3073}, "start": {"col": 29, "line": 84, "offset": 3060}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 35, "line": 90, "offset": 3389}}, {"check_id": "java.spring.spring-tainted-path-traversal.spring-tainted-path-traversal", "end": {"col": 88, "line": 90, "offset": 3442}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "myFile", "location": {"end": {"col": 49, "line": 84, "offset": 3080}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 43, "line": 84, "offset": 3074}}}], "taint_sink": ["CliLoc", [{"end": {"col": 88, "line": 90, "offset": 3442}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 60, "line": 90, "offset": 3414}}, "myFile.getOriginalFilename()"]], "taint_source": ["CliLoc", [{"end": {"col": 49, "line": 84, "offset": 3080}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 43, "line": 84, "offset": 3074}}, "myFile"]]}, "engine_kind": "OSS", "fingerprint": "8555ea883e31b96a6d958dfc419ec8448610f0405b6be0619bf56fb6398c304a9399ff19e8eec7114b994bd33c4b16e50a84a531daf9dd41effba2b076c19aab_1", "is_ignored": false, "lines": "    log.debug(\"File saved to {}\", new File(destinationDir, myFile.getOriginalFilename()));", "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files. In Java, you may also consider using a utility method such as `org.apache.commons.io.FilenameUtils.getName(...)` to only retrieve the file name from the path.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["file::sink::file-access::commons-io", "file::sink::file-access::java.io", "file::sink::file-access::java.xml", "file::sink::file-access::spring", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control", "A05:2017 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control", "https://owasp.org/www-community/attacks/Path_Traversal", "https://portswigger.net/web-security/file-path-traversal", "https://www.stackhawk.com/blog/spring-path-traversal-guide-examples-and-prevention/"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 72945, "rule_id": "yyUr8r", "rv_id": 735056, "url": "https://semgrep.dev/playground/r/ExTqLOx/java.spring.spring-tainted-path-traversal.spring-tainted-path-traversal", "version_id": "ExTqLOx"}}, "shortlink": "https://sg.run/Pqzq", "source": "https://semgrep.dev/r/java.spring.spring-tainted-path-traversal.spring-tainted-path-traversal", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$1": {"abstract_content": "RequestParam", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$FILE": {"abstract_content": "myFile.getOriginalFilename()", "end": {"col": 88, "line": 90, "offset": 3442}, "start": {"col": 60, "line": 90, "offset": 3414}}, "$METHOD": {"abstract_content": "importFile", "end": {"col": 33, "line": 83, "offset": 3030}, "start": {"col": 23, "line": 83, "offset": 3020}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 20, "line": 84, "offset": 3051}, "start": {"col": 8, "line": 84, "offset": 3039}}, "$RET": {"abstract_content": "ModelAndView", "end": {"col": 22, "line": 83, "offset": 3019}, "start": {"col": 10, "line": 83, "offset": 3007}}, "$SOURCE": {"abstract_content": "myFile", "end": {"col": 49, "line": 84, "offset": 3080}, "start": {"col": 43, "line": 84, "offset": 3074}}, "$TYPE": {"abstract_content": "MultipartFile", "end": {"col": 42, "line": 84, "offset": 3073}, "start": {"col": 29, "line": 84, "offset": 3060}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java", "start": {"col": 60, "line": 90, "offset": 3414}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 41, "offset": 2605}, "extra": {"engine_kind": "OSS", "fingerprint": "4b1a2304df67282d39982e8d80d00544c6a2d6f320d24f710d439eec08ab44b891d0c46160df2913e52666d934c3c215fef1b3e681740093f729a62efbcd1cd1_0", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\" id=\"verify-account-form\"\n                  method=\"POST\" name=\"form\"\n                  successCallback=\"onBypassResponse\"\n                  action=\"auth-bypass/verify-account\">\n                <p>Verify Your Account by answering the questions below:</p>\n\n                <p>What is the name of your favorite teacher?</p>\n                <input name=\"secQuestion0\" value=\"\" type=\"TEXT\" /><br/>\n\n                <p>What is the name of the street you grew up on?</p>\n                <input name=\"secQuestion1\" value=\"\" type=\"TEXT\" /><br/><br />\n\n                <input type=\"hidden\" name=\"jsEnabled\" value=\"1\" />\n                <input type=\"hidden\" name=\"verifyMethod\" value=\"SEC_QUESTIONS\" />\n                <input type=\"hidden\" name=\"userId\" value=\"12309746\" />\n\n                <input name=\"submit\" value=\"Submit\" type=\"submit\"/>\n\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 24, "offset": 1808}, "start": {"col": 27, "line": 24, "offset": 1804}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/authbypass/html/AuthBypass.html", "start": {"col": 13, "line": 23, "offset": 1702}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 60, "offset": 3382}, "extra": {"engine_kind": "OSS", "fingerprint": "4b1a2304df67282d39982e8d80d00544c6a2d6f320d24f710d439eec08ab44b891d0c46160df2913e52666d934c3c215fef1b3e681740093f729a62efbcd1cd1_1", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\" id=\"change-password-form\"\n                  method=\"POST\" name=\"form\"\n                  successCallback=\"onBypassResponse\"\n                  action=\"auth-bypass/verify-account\"\n                  style=\"display:none\"><!-- start off hidden -->\n                <p>Please provide a new password for your account</p>\n\n                <p>Password:</p>\n                <input name=\"newPassword\" value=\"\" type=\"password\" /><br/>\n\n                <p>Confirm Password:</p>\n                <input name=\"newPasswordConfirm\" value=\"\" type=\"password\" /><br/><br />\n\n                <input type=\"hidden\" name=\"userId\" value=\"12309746\" />\n\n                <input name=\"submit\" value=\"Submit\" type=\"submit\"/>\n\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 44, "offset": 2726}, "start": {"col": 27, "line": 44, "offset": 2722}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/authbypass/html/AuthBypass.html", "start": {"col": 13, "line": 43, "offset": 2619}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 28, "line": 35, "offset": 1821}, "extra": {"engine_kind": "OSS", "fingerprint": "37c8ec93ebcdb5bbf7c8ab1aaed69f6ed83f91c8c97e02052d08987083557ea4ffbac8870151c2f1c533bb73b661e4ba99cd82637e6f561225eaeb56f6c60a5e_0", "is_ignored": false, "lines": "                    <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n                          method=\"POST\" name=\"form\"\n                          action=\"challenge/1\"\n                          style=\"width: 200px;\">\n\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputEmail1\" th:text=\"#{username}\">Username</label>\n                            <input autofocus=\"dummy_for_thymeleaf_parser\" type=\"text\" class=\"form-control\"\n                                   id=\"exampleInputEmail1\" placeholder=\"Username\" name='username' value=\"admin\"/>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputPassword1\" th:text=\"#{password}\">Password</label>\n                            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\"\n                                   placeholder=\"Password\"\n                                   name='password'/>\n                        </div>\n                        <button class=\"btn btn-primary btn-block\" type=\"submit\" th:text=\"#{sign.in}\">Sign in</button>\n                    </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 39, "line": 19, "offset": 773}, "start": {"col": 35, "line": 19, "offset": 769}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/challenges/html/Challenge1.html", "start": {"col": 21, "line": 18, "offset": 684}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 53, "offset": 2631}, "extra": {"engine_kind": "OSS", "fingerprint": "37c8ec93ebcdb5bbf7c8ab1aaed69f6ed83f91c8c97e02052d08987083557ea4ffbac8870151c2f1c533bb73b661e4ba99cd82637e6f561225eaeb56f6c60a5e_1", "is_ignored": false, "lines": "        <form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"challenge/flag\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-addon\"><i class=\"fa fa-flag-checkered\" aria-hidden=\"true\"\n                                                      style=\"font-size:20px\"></i></div>\n                    <input type=\"text\" class=\"form-control\" id=\"flag\" name=\"flag\"\n                           placeholder=\"a7179f89-906b-4fec-9d99-f15b796e7208\"/>\n                </div>\n                <div class=\"input-group\" style=\"margin-top: 10px\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit flag</button>\n                </div>\n            </div>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 47, "line": 40, "offset": 1926}, "start": {"col": 43, "line": 40, "offset": 1922}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/challenges/html/Challenge1.html", "start": {"col": 9, "line": 40, "offset": 1888}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 82, "offset": 4692}, "extra": {"engine_kind": "OSS", "fingerprint": "117785d339d41496a4be0aafb382236fb6eb87012f7233593c578147f37547abe2260382b858ea8e8d23456899c5e6937f415db6db36b094553e2486570b3162_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"challenge/flag\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-addon\"><i class=\"fa fa-flag-checkered\" aria-hidden=\"true\"\n                                                      style=\"font-size:20px\"></i></div>\n                    <input type=\"text\" class=\"form-control\" id=\"flag\" name=\"flag\"\n                           placeholder=\"a7179f89-906b-4fec-9d99-f15b796e7208\"/>\n                </div>\n                <div class=\"input-group\" style=\"margin-top: 10px\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit flag</button>\n                </div>\n            </div>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 47, "line": 69, "offset": 3987}, "start": {"col": 43, "line": 69, "offset": 3983}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/challenges/html/Challenge5.html", "start": {"col": 9, "line": 69, "offset": 3949}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 115, "offset": 7269}, "extra": {"engine_kind": "OSS", "fingerprint": "45a862be2779cc604e1807e18d24830ec171af6071f33961b099260dbab602759d9dade9d928624abe73775e95886e674a160b7856893e7ae4f5b2f79487b8a8_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"challenge/flag\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-addon\"><i class=\"fa fa-flag-checkered\" aria-hidden=\"true\"\n                                                      style=\"font-size:20px\"></i></div>\n                    <input type=\"text\" class=\"form-control\" id=\"flag\" name=\"flag\"\n                           placeholder=\"a7179f89-906b-4fec-9d99-f15b796e7208\"/>\n                </div>\n                <div class=\"input-group\" style=\"margin-top: 10px\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit flag</button>\n                </div>\n            </div>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 47, "line": 102, "offset": 6564}, "start": {"col": 43, "line": 102, "offset": 6560}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/challenges/html/Challenge6.html", "start": {"col": 9, "line": 102, "offset": 6526}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 73, "offset": 3679}, "extra": {"engine_kind": "OSS", "fingerprint": "260b49b2581b73f420a7057f5b7c1c5dfcb0d530aee25e5196f490354db4566fbd5096b686fefc2c7d952e0416049287c8917714c78b9ead363299114e8efde6_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"challenge/flag\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-addon\"><i class=\"fa fa-flag-checkered\" aria-hidden=\"true\"\n                                                      style=\"font-size:20px\"></i></div>\n                    <input type=\"text\" class=\"form-control\" id=\"flag\" name=\"flag\"\n                           placeholder=\"a7179f89-906b-4fec-9d99-f15b796e7208\"/>\n                </div>\n                <div class=\"input-group\" style=\"margin-top: 10px\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit flag</button>\n                </div>\n            </div>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 47, "line": 60, "offset": 2974}, "start": {"col": 43, "line": 60, "offset": 2970}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/challenges/html/Challenge7.html", "start": {"col": 9, "line": 60, "offset": 2936}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 247, "offset": 15589}, "extra": {"engine_kind": "OSS", "fingerprint": "8d84b1bb176cccdd61ca22ec344db67f1ba57feeb084589acbc883de905d105d673d059fcd89a08b1735da0b762298d7b68aef665f84ab3b22ad1b9e54662dd8_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"challenge/flag\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-addon\"><i class=\"fa fa-flag-checkered\" aria-hidden=\"true\"\n                                                      style=\"font-size:20px\"></i></div>\n                    <input type=\"text\" class=\"form-control\" id=\"flag\" name=\"flag\"\n                           placeholder=\"a7179f89-906b-4fec-9d99-f15b796e7208\"/>\n                </div>\n                <div class=\"input-group\" style=\"margin-top: 10px\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit flag</button>\n                </div>\n            </div>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 47, "line": 234, "offset": 14884}, "start": {"col": 43, "line": 234, "offset": 14880}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/challenges/html/Challenge8.html", "start": {"col": 9, "line": 234, "offset": 14846}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 30, "offset": 1197}, "extra": {"engine_kind": "OSS", "fingerprint": "24b4cc0d3d5d45cca1a9a10e2fd0988e26d753ef58c4de5c777cda91614269f2386ddc9460938a73e9cbf923bb3347154932a2d961d9985b11bcca2a536e1c9d_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"DOMFollowUp\"\n              action=\"ChromeDevTools/dummy\">\n            <input name=\"successMessage\" value=\"\" type=\"TEXT\" />\n            <input name=\"submitMessage\" value=\"Submit\" type=\"SUBMIT\"/>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 26, "offset": 980}, "start": {"col": 23, "line": 26, "offset": 976}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html", "start": {"col": 9, "line": 25, "offset": 903}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 65, "offset": 2826}, "extra": {"engine_kind": "OSS", "fingerprint": "24b4cc0d3d5d45cca1a9a10e2fd0988e26d753ef58c4de5c777cda91614269f2386ddc9460938a73e9cbf923bb3347154932a2d961d9985b11bcca2a536e1c9d_1", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"ChromeDevTools/network\">\n            <script>\n                // sample custom javascript in the recommended way ...\n                // a namespace has been assigned for it, but you can roll your own if you prefer\n                document.getElementById(\"btn\").addEventListener(\"click\", function() {\n                    document.getElementById(\"networkNum\").value = Math.random() * 100;\n                    document.getElementById(\"networkNumCopy\").value = document.getElementById(\"networkNum\").value;\n                });\n            </script>\n            <input type=\"hidden\" name=\"networkNum\" id=\"networkNum\" value=\"foo\" />\n            <table>\n                <tr>\n                    <td>Click this button to make a request:</td>\n                    <td><input id=\"btn\" name=\"SUBMIT\" value=\"Go!\" type=\"SUBMIT\" /></td>\n                    <td></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 47, "offset": 1881}, "start": {"col": 23, "line": 47, "offset": 1877}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html", "start": {"col": 9, "line": 46, "offset": 1804}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 79, "offset": 3396}, "extra": {"engine_kind": "OSS", "fingerprint": "24b4cc0d3d5d45cca1a9a10e2fd0988e26d753ef58c4de5c777cda91614269f2386ddc9460938a73e9cbf923bb3347154932a2d961d9985b11bcca2a536e1c9d_2", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"ChromeDevTools/network\">\n            <table>\n                <tr>\n                    <td>What is the number you found:   </td>\n                    <td><input name=\"number\" type=\"text\"/></td>\n                    <td><input type=\"submit\" name=\"Submit\" value=\"check\"/></td>\n                    <td></td>\n                </tr>\n            </table>\n            <input type=\"hidden\" name=\"network_num\" id=\"networkNumCopy\" value=\"foo\" />\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 68, "offset": 2913}, "start": {"col": 23, "line": 68, "offset": 2909}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html", "start": {"col": 9, "line": 67, "offset": 2836}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 36, "offset": 1571}, "extra": {"engine_kind": "OSS", "fingerprint": "9031e10356d9e934409d1bc7b545abac4c9195d7b010a5acb4e01d143584571720c1a4da5881b7c23b0fc2814cac035b8e4c1ac664a7c4bf8720cdbdf28a2783_0", "is_ignored": false, "lines": "            <form id=\"quiz-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\"\n                  method=\"POST\" name=\"form\"\n                  action=\"cia/quiz\" role=\"form\">\n                <div id=\"q_container\"></div>\n                <br />\n                <input name=\"Quiz_solutions\" value=\"Submit answers\" type=\"SUBMIT\"/>\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 31, "offset": 1337}, "start": {"col": 27, "line": 31, "offset": 1333}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/cia/html/CIA.html", "start": {"col": 13, "line": 30, "offset": 1241}}, {"check_id": "html.security.plaintext-http-link.plaintext-http-link", "end": {"col": 95, "line": 96, "offset": 5273}, "extra": {"engine_kind": "OSS", "fingerprint": "0a7a263fc5722a0ec8e258680ef7824d9447270ffdd01610d343c27695e997dac07860c0c84e62f3cc83677abc5bc841c212b75c6a2357d6991bf2b89f3ced98_0", "is_ignored": false, "lines": "                        <h5 style=\"color:#337ab7\"><a href=\"http://www.samsung.com\">Samsung</a> \u00b7", "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://cwe.mitre.org/data/definitions/319.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 39193, "rule_id": "AbUnNo", "rv_id": 109656, "url": "https://semgrep.dev/playground/r/w8T9nEl/html.security.plaintext-http-link.plaintext-http-link", "version_id": "w8T9nEl"}}, "shortlink": "https://sg.run/RA5q", "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link", "subcategory": ["vuln"], "technology": ["html"], "vulnerability_class": ["Mishandled Sensitive Information"]}, "metavars": {"$URL": {"abstract_content": "http://www.samsung.com", "end": {"col": 82, "line": 96, "offset": 5260}, "start": {"col": 60, "line": 96, "offset": 5238}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/clientsidefiltering/html/ClientSideFiltering.html", "start": {"col": 51, "line": 96, "offset": 5229}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 108, "line": 6, "offset": 206}, "extra": {"engine_kind": "OSS", "fingerprint": "d31e79bfc78c46181673c5daf53031b7f42e5b1e7012c4189458c89f3ac3d8ab4c7984818361b3a0f5f748f3e69d9f15b1eb554114e9a16d53401ffa4cf281e0_0", "is_ignored": false, "lines": "    document.getElementById(\"employeeRecord\").innerHTML = document.getElementById(newEmployeeID).innerHTML;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "document.getElementById(\"employeeRecord\")", "end": {"col": 46, "line": 6, "offset": 144}, "start": {"col": 5, "line": 6, "offset": 103}}, "$HTML": {"abstract_content": "document.getElementById(newEmployeeID).innerHTML", "end": {"col": 107, "line": 6, "offset": 205}, "start": {"col": 59, "line": 6, "offset": 157}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/clientsidefiltering/js/clientSideFiltering.js", "start": {"col": 5, "line": 6, "offset": 103}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 33, "line": 38, "offset": 1399}, "extra": {"engine_kind": "OSS", "fingerprint": "a26851deac1b1cfafd866a52642ff3bd038226e14411acac50948fbf82781c0e44219e650513d04b8799a990148e644b8c361ab6564824dabf38ea5eccda6d8d_0", "is_ignored": false, "lines": "        newdiv.innerHTML = html;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "newdiv", "end": {"col": 15, "line": 38, "offset": 1381}, "propagated_value": {"svalue_abstract_content": "document.createElement(\"div\")", "svalue_end": {"col": 51, "line": 37, "offset": 1365}, "svalue_start": {"col": 22, "line": 37, "offset": 1336}}, "start": {"col": 9, "line": 38, "offset": 1375}}, "$HTML": {"abstract_content": "html", "end": {"col": 32, "line": 38, "offset": 1398}, "propagated_value": {"svalue_abstract_content": "html+'</tr></table>'", "svalue_end": {"col": 38, "line": 35, "offset": 1312}, "svalue_start": {"col": 16, "line": 35, "offset": 1290}}, "start": {"col": 28, "line": 38, "offset": 1394}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/clientsidefiltering/js/clientSideFiltering.js", "start": {"col": 9, "line": 38, "offset": 1375}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 11, "line": 37, "offset": 1347}, "extra": {"engine_kind": "OSS", "fingerprint": "4db1bec9d335e0f6b53024b5e205adaf03b83d31a2a7d52410ec3b8d9f79a3f13974331b72521ffd0da7b58b47d197981b954e5904e2553d6f9784f3666da218_0", "is_ignored": false, "lines": "\t\t\t<form class=\"attack-form\" method=\"POST\" name=\"form\"\taction=\"crypto/encoding/basic-auth\">\n\t\t\tThen what was the username\n\t\t\t<input name=\"answer_user\" value=\"\" type=\"TEXT\"/>\n\t\t\tand what was the password:\n\t\t\t<input name=\"answer_pwd\" value=\"\" type=\"TEXT\"/>\n\t\t\t<input name=\"SUBMIT\" value=\"post the answer\" type=\"SUBMIT\"/>\n\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 42, "line": 31, "offset": 1059}, "start": {"col": 38, "line": 31, "offset": 1055}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/cryptography/html/Cryptography.html", "start": {"col": 4, "line": 31, "offset": 1021}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 11, "line": 53, "offset": 2116}, "extra": {"engine_kind": "OSS", "fingerprint": "4db1bec9d335e0f6b53024b5e205adaf03b83d31a2a7d52410ec3b8d9f79a3f13974331b72521ffd0da7b58b47d197981b954e5904e2553d6f9784f3666da218_1", "is_ignored": false, "lines": "\t\t\t<form class=\"attack-form\" method=\"POST\" name=\"form\"\taction=\"crypto/encoding/xor\">\n\t\t\tSuppose you found the database password encoded as {xor}Oz4rPj0+LDovPiwsKDAtOw==<br/>\n\t\t\tWhat would be the actual password\n\t\t\t<input name=\"answer_pwd1\" value=\"\" type=\"TEXT\"/><br/>\n\t\t\t<input name=\"SUBMIT\" value=\"post the answer\" type=\"SUBMIT\"/>\n\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 42, "line": 48, "offset": 1815}, "start": {"col": 38, "line": 48, "offset": 1811}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/cryptography/html/Cryptography.html", "start": {"col": 4, "line": 48, "offset": 1777}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 11, "line": 71, "offset": 2944}, "extra": {"engine_kind": "OSS", "fingerprint": "4db1bec9d335e0f6b53024b5e205adaf03b83d31a2a7d52410ec3b8d9f79a3f13974331b72521ffd0da7b58b47d197981b954e5904e2553d6f9784f3666da218_2", "is_ignored": false, "lines": "\t\t\t<form class=\"attack-form\" method=\"POST\" name=\"form\"\taction=\"crypto/hashing\">\n\t\t\tWhich password belongs to this hash: <div id=\"md5token\" ></div>\n\t\t\t<input name=\"answer_pwd1\" value=\"\" type=\"TEXT\"/><br/>\n\t\t\tWhich password belongs to this hash: <div id=\"sha256token\" ></div>\n\t\t\t<input name=\"answer_pwd2\" value=\"\" type=\"TEXT\"/>\n\t\t\t<input name=\"SUBMIT\" value=\"post the answer\" type=\"SUBMIT\"/>\n\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 42, "line": 65, "offset": 2585}, "start": {"col": 38, "line": 65, "offset": 2581}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/cryptography/html/Cryptography.html", "start": {"col": 4, "line": 65, "offset": 2547}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 11, "line": 96, "offset": 4000}, "extra": {"engine_kind": "OSS", "fingerprint": "4db1bec9d335e0f6b53024b5e205adaf03b83d31a2a7d52410ec3b8d9f79a3f13974331b72521ffd0da7b58b47d197981b954e5904e2553d6f9784f3666da218_3", "is_ignored": false, "lines": "\t\t\t<form class=\"attack-form\" method=\"POST\" name=\"form\"\taction=\"crypto/signing/verify\">\n\t\t\tThen what was the modulus of the public key\n\t\t\t<input name=\"modulus\" value=\"\" type=\"TEXT\"/>\n\t\t\tand now provide a signature for us based on that modulus\n\t\t\t<input name=\"signature\" value=\"\" type=\"TEXT\"/>\n\t\t\t<input name=\"SUBMIT\" value=\"post the answer\" type=\"SUBMIT\"/>\n\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 42, "line": 90, "offset": 3675}, "start": {"col": 38, "line": 90, "offset": 3671}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/cryptography/html/Cryptography.html", "start": {"col": 4, "line": 90, "offset": 3637}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 11, "line": 119, "offset": 4975}, "extra": {"engine_kind": "OSS", "fingerprint": "4db1bec9d335e0f6b53024b5e205adaf03b83d31a2a7d52410ec3b8d9f79a3f13974331b72521ffd0da7b58b47d197981b954e5904e2553d6f9784f3666da218_4", "is_ignored": false, "lines": "\t\t\t<form class=\"attack-form\" method=\"POST\" name=\"form\"\taction=\"crypto/secure/defaults\">\n\t\t\tWhat is the unencrypted message<br/>\n\t\t\t<input name=\"secretText\" value=\"\" type=\"TEXT\"/><br/>\n\t\t\tand what is the name of the file that stored the password <br/>\n\t\t\t<input name=\"secretFileName\" value=\"\" type=\"TEXT\"/>\n\t\t\t<input name=\"SUBMIT\" value=\"post the answer\" type=\"SUBMIT\"/>\n\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 42, "line": 113, "offset": 4636}, "start": {"col": 38, "line": 113, "offset": 4632}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/cryptography/html/Cryptography.html", "start": {"col": 4, "line": 113, "offset": 4598}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 12, "line": 24, "offset": 782}, "extra": {"engine_kind": "OSS", "fingerprint": "e64ad4725ead74a8d00504ec3b903bd6d5c78a025e99fb74736948374d876a1883753b8fe6644f1cc77d353c933131663f05fedecb2ba9d4a4e7d43722e22790_0", "is_ignored": false, "lines": "    <form accept-charset=\"UNKNOWN\" id=\"basic-csrf-get\"\n          method=\"POST\" name=\"form1\"\n          target=\"_blank\"\n          successCallback=\"\"\n          action=\"csrf/basic-get-flag\">\n        <input name=\"csrf\" type=\"hidden\" value=\"false\"/>\n        <input type=\"submit\" name=\"submit\"/>\n\n    </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 23, "line": 17, "offset": 558}, "start": {"col": 19, "line": 17, "offset": 554}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/csrf/html/CSRF.html", "start": {"col": 5, "line": 16, "offset": 485}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 48, "offset": 1613}, "extra": {"engine_kind": "OSS", "fingerprint": "e64ad4725ead74a8d00504ec3b903bd6d5c78a025e99fb74736948374d876a1883753b8fe6644f1cc77d353c933131663f05fedecb2ba9d4a4e7d43722e22790_1", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\" id=\"confirm-flag-1\"\n              method=\"POST\" name=\"form2\"\n              successCallback=\"\"\n              action=\"csrf/confirm-flag-1\">\n\n            Confirm Flag Value:\n            <input type=\"text\" length=\"6\" name=\"confirmFlagVal\" value=\"\"/>\n\n            <input name=\"submit\" value=\"Submit\" type=\"submit\"/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 36, "offset": 1261}, "start": {"col": 23, "line": 36, "offset": 1257}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/csrf/html/CSRF.html", "start": {"col": 9, "line": 35, "offset": 1164}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 36, "line": 102, "offset": 4138}, "extra": {"engine_kind": "OSS", "fingerprint": "e64ad4725ead74a8d00504ec3b903bd6d5c78a025e99fb74736948374d876a1883753b8fe6644f1cc77d353c933131663f05fedecb2ba9d4a4e7d43722e22790_2", "is_ignored": false, "lines": "                            <form class=\"attack-form\" accept-charset=\"UNKNOWN\" id=\"csrf-review\"\n                                  method=\"POST\" name=\"review-form\"\n                                  successCallback=\"\"\n                                  action=\"csrf/review\">\n                                <input class=\"form-control\" id=\"reviewText\" name=\"reviewText\" placeholder=\"Add a Review\"\n                                       type=\"text\"/>\n                                <input class=\"form-control\" id=\"reviewStars\" name=\"stars\" type=\"text\"/>\n                                <input type=\"hidden\" name=\"validateReq\" value=\"2aa14227b9a13d0bede0388a7fba9aa9\"/>\n                                <input type=\"submit\" name=\"submit\" value=\"Submit review\"/>\n                            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 47, "line": 94, "offset": 3489}, "start": {"col": 43, "line": 94, "offset": 3485}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/csrf/html/CSRF.html", "start": {"col": 29, "line": 93, "offset": 3375}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 222, "offset": 10196}, "extra": {"engine_kind": "OSS", "fingerprint": "e64ad4725ead74a8d00504ec3b903bd6d5c78a025e99fb74736948374d876a1883753b8fe6644f1cc77d353c933131663f05fedecb2ba9d4a4e7d43722e22790_3", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\" id=\"confirm-flag-feedback\"\n              method=\"POST\" name=\"form2\"\n              action=\"csrf/feedback\">\n\n            Confirm Flag Value:\n            <input type=\"text\" length=\"6\" name=\"confirmFlagVal\" value=\"\"/>\n\n            <input name=\"submit\" value=\"Submit\" type=\"submit\"/>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 214, "offset": 9954}, "start": {"col": 23, "line": 214, "offset": 9950}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/csrf/html/CSRF.html", "start": {"col": 9, "line": 213, "offset": 9850}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 245, "offset": 10937}, "extra": {"engine_kind": "OSS", "fingerprint": "e64ad4725ead74a8d00504ec3b903bd6d5c78a025e99fb74736948374d876a1883753b8fe6644f1cc77d353c933131663f05fedecb2ba9d4a4e7d43722e22790_4", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\" id=\"confirm-flag-login\"\n              method=\"POST\" name=\"form2\"\n              action=\"csrf/login\">\n\n            Press the button below when your are logged in as the other user<br/>\n\n            <input name=\"submit\" value=\"Solved!\" type=\"submit\"/>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 238, "offset": 10722}, "start": {"col": 23, "line": 238, "offset": 10718}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/csrf/html/CSRF.html", "start": {"col": 9, "line": 237, "offset": 10621}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 33, "offset": 1527}, "extra": {"engine_kind": "OSS", "fingerprint": "f519f7698014240172eaa09f937df48d641bfde7cfed8750974b19a1bd7906b408e365f5a05b9fbbd873c77f89e2ce51c53eecb674c5a0de92ad5deb18ab2a65_0", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"task\"\n                  method=\"POST\"\n                  action=\"InsecureDeserialization/task\">\n\n                <input type=\"textarea\" rows=\"4\" cols=\"40\" value=\"\" name=\"token\" placeholder=\"token\"/>\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 27, "offset": 1290}, "start": {"col": 27, "line": 27, "offset": 1286}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/deserialization/html/InsecureDeserialization.html", "start": {"col": 13, "line": 26, "offset": 1197}}, {"check_id": "html.security.audit.missing-integrity.missing-integrity", "end": {"col": 69, "line": 6, "offset": 168}, "extra": {"engine_kind": "OSS", "fingerprint": "99fd4902f55203f3107fabaa363a48e9e39fa78c5e8174cc5b2206858cdddb8dcbe722a374ed62c40c6f878b2484c3620f53429c163a78c315a18fe1b9493d4b_0", "is_ignored": false, "lines": "<link rel=\"stylesheet\" type=\"text/css\"\n\thref=\"http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css\" />", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-353: Missing Support for Integrity Check"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13728, "rule_id": "AbUQzj", "rv_id": 727930, "url": "https://semgrep.dev/playground/r/rxT2BP3/html.security.audit.missing-integrity.missing-integrity", "version_id": "rxT2BP3"}}, "shortlink": "https://sg.run/krXA", "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity", "subcategory": ["audit"], "technology": ["html"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$...A": {"abstract_content": " rel=\"stylesheet\" type=\"text/css\"\n\thref=\"http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css\" /", "end": {"col": 68, "line": 6, "offset": 167}, "start": {"col": 6, "line": 5, "offset": 66}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/hijacksession/html/HijackSession.html", "start": {"col": 1, "line": 5, "offset": 61}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 10, "line": 22, "offset": 882}, "extra": {"engine_kind": "OSS", "fingerprint": "1da06f05f8b6e22eb32527c6d1c48b60ad33bfb151ded0eeb7bea539554ba55699c853257a1c1e8f721b826fd12517666f3c729979d2061f06578969730ce259_0", "is_ignored": false, "lines": "\t\t<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\"\n\t\t\taction=\"HijackSession/login\">\n\t\t\t<div style=\"padding: 20px;\" id=\"password-login\">\n\t\t\t\t<h4 style=\"border-bottom: 1px solid #c5c5c5;\">Account Access</h4>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<div class=\"form-group input-group\">\n\t\t\t\t\t\t<span class=\"input-group-addon\"> <i\n\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i>\n\t\t\t\t\t\t</span> <input class=\"form-control\" placeholder=\"User name\"\n\t\t\t\t\t\t\tname=\"username\" type=\"text\"></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group input-group\">\n\t\t\t\t\t\t<span class=\"input-group-addon\"><i\n\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-lock\"></i></span> <input class=\"form-control\"\n\t\t\t\t\t\t\tplaceholder=\"Password\" name=\"password\" type=\"password\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-block\">Access</button>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 66, "line": 3, "offset": 107}, "start": {"col": 62, "line": 3, "offset": 103}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/hijacksession/templates/hijackform.html", "start": {"col": 3, "line": 3, "offset": 44}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 13, "line": 30, "offset": 1760}, "extra": {"engine_kind": "OSS", "fingerprint": "6b922c4828ccf62716c1998d56f98dd67aa98eb922c0b79877bd69ad3763029c3aa0745f57d1f2003eccda0212351984dbb762bd8425406a0ddaa9ae3a571616_0", "is_ignored": false, "lines": "\t\t\t\t\t<form accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\"\n\t\t\t\t\t\taction=\"#attack/307/100\">\n\t\t\t\t\t\tEnter Your Name: <input name=\"person\" value=\"\" type=\"TEXT\"/><input\n\t\t\t\t\t\t\tname=\"SUBMIT\" value=\"Go!\" type=\"SUBMIT\"/>\n\t\t\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 49, "line": 26, "offset": 1580}, "start": {"col": 45, "line": 26, "offset": 1576}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/httpbasics/html/HttpBasics.html", "start": {"col": 6, "line": 26, "offset": 1537}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 32, "offset": 1351}, "extra": {"engine_kind": "OSS", "fingerprint": "73c70ced306942ba029dca72698b24f9336d9a9f6e8dc9e8a6dc6b0f7e26f36ec9ce82d33dd44dbe0ec88cd9c2641ec661a7490b5359fad45e86352e4419554f_0", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"intercept-request\"\n                  method=\"POST\"\n                  action=\"HttpProxies/intercept-request\">\n\n                <input type=\"text\" value=\"doesn't matter really\" name=\"changeMe\" />\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 26, "offset": 1131}, "start": {"col": 27, "line": 26, "offset": 1127}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/httpproxies/html/HttpProxies.html", "start": {"col": 13, "line": 25, "offset": 1025}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 37, "offset": 2263}, "extra": {"engine_kind": "OSS", "fingerprint": "bd5763f06cb37022d6be295a6c6c17a808975fc0a2c12151ef64d22109ccd3c7305794fc12286e7631a4aab25c2e12b0d0debc359a5fe0f682a30c46196e222b_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"IDOR/login\">\n            <table>\n                <tr>\n                    <td>user/pass</td>\n                    <td>user:<input name=\"username\" value=\"\" type=\"TEXT\" /></td>\n                    <td>pass:<input name=\"password\" value=\"\" type=\"password\" /></td>\n                    <td>\n                        <input\n                            name=\"submit\" value=\"Submit\" type=\"SUBMIT\"/>\n                    </td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 24, "offset": 1755}, "start": {"col": 23, "line": 24, "offset": 1751}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/idor/html/IDOR.html", "start": {"col": 9, "line": 23, "offset": 1678}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 86, "offset": 5586}, "extra": {"engine_kind": "OSS", "fingerprint": "bd5763f06cb37022d6be295a6c6c17a808975fc0a2c12151ef64d22109ccd3c7305794fc12286e7631a4aab25c2e12b0d0debc359a5fe0f682a30c46196e222b_1", "is_ignored": false, "lines": "        <form class=\"attack-form\"\n              method=\"POST\" name=\"diff-form\"\n              action=\"IDOR/diff-attributes\">\n            <input name=\"attributes\" type=\"text\" />\n            <input name=\"Submit Diffs\" value=\"Submit Diffs\" type=\"submit\" />\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 82, "offset": 5378}, "start": {"col": 23, "line": 82, "offset": 5374}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/idor/html/IDOR.html", "start": {"col": 9, "line": 81, "offset": 5326}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 114, "offset": 7510}, "extra": {"engine_kind": "OSS", "fingerprint": "bd5763f06cb37022d6be295a6c6c17a808975fc0a2c12151ef64d22109ccd3c7305794fc12286e7631a4aab25c2e12b0d0debc359a5fe0f682a30c46196e222b_2", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"IDOR/profile/alt-path\">\n            <div class=\"adoc-content\" th:replace=\"~{doc:lessons/idor/documentation/IDOR_inputAltPath.adoc}\"></div>\n            <input name=\"url\" value=\"WebGoat/\" type=\"text\"/>\n            <input name=\"submit\" value=\"Submit\" type=\"SUBMIT\"/>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 109, "offset": 7195}, "start": {"col": 23, "line": 109, "offset": 7191}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/idor/html/IDOR.html", "start": {"col": 9, "line": 108, "offset": 7118}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 24, "offset": 1208}, "extra": {"engine_kind": "OSS", "fingerprint": "b15eb9f8b208cdf4135c6be25403b44463a26b4433b78384d2f10f7cc6de45f9ce80f7ff4669e2d42558c93add931a4eb391942ca396d5945c8263206acbbad4_0", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"task\"\n                  method=\"POST\"\n                  action=\"InsecureLogin/task\">\n\n                <button onclick=\"javascript:submit_secret_credentials();return false;\">Log in</button>\n\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 19, "offset": 1035}, "start": {"col": 27, "line": 19, "offset": 1031}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/insecurelogin/html/InsecureLogin.html", "start": {"col": 13, "line": 18, "offset": 942}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 34, "offset": 1636}, "extra": {"engine_kind": "OSS", "fingerprint": "b15eb9f8b208cdf4135c6be25403b44463a26b4433b78384d2f10f7cc6de45f9ce80f7ff4669e2d42558c93add931a4eb391942ca396d5945c8263206acbbad4_1", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"task\"\n                  method=\"POST\"\n                  action=\"InsecureLogin/task\">\n\n                <input type=\"text\" value=\"\" name=\"username\" placeholder=\"username\"/>\n                <input type=\"password\" value=\"\" name=\"password\" placeholder=\"password\" />\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 27, "offset": 1336}, "start": {"col": 27, "line": 27, "offset": 1332}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/insecurelogin/html/InsecureLogin.html", "start": {"col": 13, "line": 26, "offset": 1243}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 35, "offset": 1420}, "extra": {"engine_kind": "OSS", "fingerprint": "6518c78d4a879b1ff289e2fb18e4a3806011b7eb2bfc3ec4c6eeb93e99ac6150f56e632fd1760992db78aa65bdf6f38f917e6f9839a9c7f9fb7b1e89043dc485_0", "is_ignored": false, "lines": "        <form id=\"decode\" class=\"attack-form\" method=\"POST\" name=\"form\" action=\"JWT/decode\">\n            <div class=\"assignment-success\"><i class=\"fa fa-2 fa-check hidden\" aria-hidden=\"true\"></i></div>\n            <br>\n            <div class=\"row\">\n                <div class=\"col-lg-10\">\n                        <span>\n                            <span>\n                                 Username:\n                            </span>\n                        <input type=\"text\" name=\"jwt-encode-user\">\n                               <button type=\"SUBMIT\">Submit</button>\n                            </span>\n                </div>\n            </div>\n            <br>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 59, "line": 20, "offset": 798}, "start": {"col": 55, "line": 20, "offset": 794}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/jwt/html/JWT.html", "start": {"col": 9, "line": 20, "offset": 748}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 132, "offset": 6349}, "extra": {"engine_kind": "OSS", "fingerprint": "6518c78d4a879b1ff289e2fb18e4a3806011b7eb2bfc3ec4c6eeb93e99ac6150f56e632fd1760992db78aa65bdf6f38f917e6f9839a9c7f9fb7b1e89043dc485_1", "is_ignored": false, "lines": "            <form id=\"quiz-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\"\n                  method=\"POST\" name=\"form\"\n                  action=\"JWT/quiz\"\n                  role=\"form\">\n                <div id=\"q_container\"></div>\n                <br/>\n                <input name=\"Quiz_solutions\" value=\"Submit answers\" type=\"SUBMIT\"/>\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 126, "offset": 6098}, "start": {"col": 27, "line": 126, "offset": 6094}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/jwt/html/JWT.html", "start": {"col": 13, "line": 125, "offset": 6002}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 171, "offset": 8000}, "extra": {"engine_kind": "OSS", "fingerprint": "6518c78d4a879b1ff289e2fb18e4a3806011b7eb2bfc3ec4c6eeb93e99ac6150f56e632fd1760992db78aa65bdf6f38f917e6f9839a9c7f9fb7b1e89043dc485_2", "is_ignored": false, "lines": "        <form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"JWT/secret\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-addon\"><i class=\"fa fa-flag-checkered\" aria-hidden=\"true\"\n                                                      style=\"font-size:20px\"></i></div>\n                    <input type=\"text\" class=\"form-control\" id=\"flag\" name=\"token\"\n                           placeholder=\"XXX.YYY.ZZZ\"/>\n                </div>\n                <div class=\"input-group\" style=\"margin-top: 10px\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit token</button>\n                </div>\n            </div>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 47, "line": 158, "offset": 7322}, "start": {"col": 43, "line": 158, "offset": 7318}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/jwt/html/JWT.html", "start": {"col": 9, "line": 158, "offset": 7284}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 61, "offset": 3994}, "extra": {"engine_kind": "OSS", "fingerprint": "8615db997f64423f16cf23ebe23a1c7f6f1a4b97efc9760cfddeb768196496c2d1ecc979a18c025c38940ee2a52ff47256081c639ee49ed6e1f135e208c5f915_0", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n                  method=\"POST\" name=\"form\"\n                  action=\"lesson-template/sample-attack\">\n                <table>\n                    <tr>\n                        <td>two random params</td>\n                        <td>parameter 1:<input name=\"param1\" value=\"\" type=\"TEXT\" /></td>\n                        <td>parameter 2:<input name=\"param2\" value=\"\" type=\"TEXT\" /></td>\n                        <td>\n                            <input name=\"submit\" value=\"Submit\" type=\"SUBMIT\"/>\n                        </td>\n                    </tr>\n                </table>\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 49, "offset": 3433}, "start": {"col": 27, "line": 49, "offset": 3429}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/lessontemplate/html/LessonTemplate.html", "start": {"col": 13, "line": 48, "offset": 3352}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 25, "offset": 1179}, "extra": {"engine_kind": "OSS", "fingerprint": "a5bb064084b958143f94eb35e3c19a3a88e0658b9431ddcade4f98778b25722ec334855e3e34a1460f7ebb731ed99adef45a541424a403ae206432008b52256c_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"task\"\n              method=\"POST\"\n              action=\"LogSpoofing/log-spoofing\">\n\n            <input type=\"text\" value=\"\" name=\"username\" placeholder=\"username\"/>\n            <input type=\"password\" value=\"\" name=\"password\" placeholder=\"password\"/>\n            <input type=\"submit\" value=\"Submit\"/>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 18, "offset": 895}, "start": {"col": 23, "line": 18, "offset": 891}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/logging/html/LogSpoofing.html", "start": {"col": 9, "line": 17, "offset": 806}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 47, "offset": 2307}, "extra": {"engine_kind": "OSS", "fingerprint": "a5bb064084b958143f94eb35e3c19a3a88e0658b9431ddcade4f98778b25722ec334855e3e34a1460f7ebb731ed99adef45a541424a403ae206432008b52256c_1", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"task\"\n              method=\"POST\"\n              action=\"LogSpoofing/log-bleeding\">\n\n            <input type=\"text\" value=\"\" name=\"username\" placeholder=\"username\"/>\n            <input type=\"password\" value=\"\" name=\"password\" placeholder=\"password\"/>\n            <input type=\"submit\" value=\"Submit\"/>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 40, "offset": 2023}, "start": {"col": 23, "line": 40, "offset": 2019}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/logging/html/LogSpoofing.html", "start": {"col": 9, "line": 39, "offset": 1934}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 62, "offset": 3125}, "extra": {"engine_kind": "OSS", "fingerprint": "ce64cc2f717c7ff8efdad2bd606f4979092a917b79e57d40c710620094a51438a9e76d407bb99e8690afa7e91c997bd1e791434319f2d0b56c019291211832cb_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"access-control/hidden-menu\">\n\n            <p>Hidden item 1 <input name=\"hiddenMenu1\" value=\"\" type=\"TEXT\"/></p>\n            <p>Hidden item 2 <input name=\"hiddenMenu2\" value=\"\" type=\"TEXT\"/></p>\n            <br/>\n            <input name=\"submit\" value=\"Submit\" type=\"SUBMIT\"/>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 54, "offset": 2797}, "start": {"col": 23, "line": 54, "offset": 2793}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/missingac/html/MissingFunctionAC.html", "start": {"col": 9, "line": 53, "offset": 2720}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 84, "offset": 3855}, "extra": {"engine_kind": "OSS", "fingerprint": "ce64cc2f717c7ff8efdad2bd606f4979092a917b79e57d40c710620094a51438a9e76d407bb99e8690afa7e91c997bd1e791434319f2d0b56c019291211832cb_1", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"access-control/user-hash\">\n\n            <p>Your Hash: <input name=\"userHash\" value=\"\" type=\"TEXT\"/></p>\n            <br/>\n            <input name=\"submit\" value=\"Submit\" type=\"SUBMIT\"/>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 77, "offset": 3617}, "start": {"col": 23, "line": 77, "offset": 3613}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/missingac/html/MissingFunctionAC.html", "start": {"col": 9, "line": 76, "offset": 3540}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 106, "offset": 4595}, "extra": {"engine_kind": "OSS", "fingerprint": "ce64cc2f717c7ff8efdad2bd606f4979092a917b79e57d40c710620094a51438a9e76d407bb99e8690afa7e91c997bd1e791434319f2d0b56c019291211832cb_2", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"access-control/user-hash-fix\">\n\n            <p>Your Hash: <input name=\"userHash\" value=\"\" type=\"TEXT\"/></p>\n            <br/>\n            <input name=\"submit\" value=\"Submit\" type=\"SUBMIT\"/>\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 99, "offset": 4353}, "start": {"col": 23, "line": 99, "offset": 4349}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/missingac/html/MissingFunctionAC.html", "start": {"col": 9, "line": 98, "offset": 4276}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 164, "offset": 8620}, "extra": {"engine_kind": "OSS", "fingerprint": "b30b160bc3832faa5cf3d50a51fcef488abefeb1d692f67ab9bf913ad1aad3bebf46f3f913de01c217aecfd254f40d672c7965ff6124351abed48a8c8fbc41b2_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"PasswordReset/SecurityQuestions\">\n            <select name=\"question\">\n                <option>What is your favorite animal?</option>\n                <option>In what year was your mother born?</option>\n                <option>What was the time you were born?</option>\n                <option>What is the name of the person you first kissed?</option>\n                <option>What was the house number and street name you lived in as a child?</option>\n                <option>In what town or city was your first full time job?</option>\n                <option>In what city were you born?</option>\n                <option>On which wrist do you were your watch?</option>\n                <option>What was the last name of your favorite teacher in grade three?</option>\n                <option>What is the name of a college/job you applied to but didn't attend?</option>\n                <option>What are the last 5 digits of your drivers license?</option>\n                <option>What was your childhood nickname?</option>\n                <option>Who was your childhood hero?</option>\n                <option>What is your favorite color?</option>\n            </select>\n            <input name=\"Check Question\" value=\"check\" type=\"SUBMIT\"/>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 145, "offset": 7335}, "start": {"col": 23, "line": 145, "offset": 7331}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/passwordreset/html/PasswordReset.html", "start": {"col": 9, "line": 144, "offset": 7258}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 26, "offset": 1477}, "extra": {"engine_kind": "OSS", "fingerprint": "cead4ea81bc1f855e4db14c97668d94d912908a26a47a0d410b54a973caedaefeb905fe7f339494ec44f95ad202f16f9ee3e59fd8dd902bcb95d40398287d1cd_0", "is_ignored": false, "lines": "            <form role=\"form\" method=\"POST\" action=\"PasswordReset/reset/change-password\" th:object=\"${form}\" novalidate=\"novalidate\">\n                <h2 class=\"sign_up_title\">Reset your password</h2>\n                    <div class=\"form-group\" th:classappend=\"${#fields.hasErrors('password')}? 'has-error'\">\n                        <input type=\"hidden\" name=\"resetLink\" th:field=\"*{resetLink}\" />\n                        <label for=\"password\" class=\"control-label\" th:text=\"#{password}\">Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\"\n                               name='password' th:value=\"*{password}\"/>\n                        <span th:if=\"${#fields.hasErrors('password')}\" th:errors=\"*{password}\">Password error</span>\n                    </div>\n                <div class=\"row\">\n                    <div class=\"col-xs-12 col-md-12\">\n                        <button type=\"submit\" class=\"btn btn-success btn-block btn-lg\">Save</button>\n                    </div>\n                </div>\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 43, "line": 12, "offset": 435}, "start": {"col": 39, "line": 12, "offset": 431}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/passwordreset/templates/password_reset.html", "start": {"col": 13, "line": 12, "offset": 405}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 205, "offset": 10154}, "extra": {"engine_kind": "OSS", "fingerprint": "740003f495c5ea73f9203487a716ddb92612a2fb62d39182409c80a62562644b970b29abf01211cf12a34ff8210d986a8a25a3a761b5c1b08a975d67eb4afb5f_0", "is_ignored": false, "lines": "            <form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"PathTraversal/random\">\n                <div class=\"assignment-success\"><i class=\"fa fa-2 fa-check hidden\" aria-hidden=\"true\"></i></div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <div class=\"input-group-addon\"><i class=\"fa fa-flag-checkered\" aria-hidden=\"true\"\n                                                          style=\"font-size:20px\"></i></div>\n                        <input type=\"text\" class=\"form-control\" id=\"pathTraversalSecret\" name=\"secret\"/>\n                    </div>\n                    <div class=\"input-group\" style=\"margin-top: 10px\">\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit secret</button>\n                    </div>\n                </div>\n\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 51, "line": 192, "offset": 9345}, "start": {"col": 47, "line": 192, "offset": 9341}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/pathtraversal/html/PathTraversal.html", "start": {"col": 13, "line": 192, "offset": 9307}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 35, "offset": 1635}, "extra": {"engine_kind": "OSS", "fingerprint": "c7776bb8a6863ff3be9fcde4542dfb88160085cc7a981d48908812d1c0d3dc63418c47c98261575d41031e47c2d90635a0161bf4406add9bc1f25e0aed567719_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SecurePasswords/assignment\"\n              autocomplete=\"off\">\n\n            <div class=\"input-group input-group\">\n                <input id=\"myInput\" name=\"password\" value=\"\" type=\"password\" class=\"form-control\"\n                       placeholder=\"Enter a secure password...\"\n                       aria-describedby=\"password-label\">\n                <span class=\"input-group-addon\"><input type=\"checkbox\" onclick=\"javascript:myFunction()\"/> Show password</span>\n            </div>\n            <div class=\"input-group\" style=\"margin-top: 10px\">\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 22, "offset": 944}, "start": {"col": 23, "line": 22, "offset": 940}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/securepasswords/html/SecurePasswords.html", "start": {"col": 9, "line": 21, "offset": 867}}, {"check_id": "html.security.audit.missing-integrity.missing-integrity", "end": {"col": 69, "line": 6, "offset": 168}, "extra": {"engine_kind": "OSS", "fingerprint": "4f2c3bcea1cbc124993cb71cf5f0e0e4a29b2c504703e60243404798e8a074b77cfb7fc9dae3c8d9030a583c3cbe39a3b9141ace9085c93a61849db7d2a7c32c_0", "is_ignored": false, "lines": "<link rel=\"stylesheet\" type=\"text/css\"\n\thref=\"http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css\" />", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-353: Missing Support for Integrity Check"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13728, "rule_id": "AbUQzj", "rv_id": 727930, "url": "https://semgrep.dev/playground/r/rxT2BP3/html.security.audit.missing-integrity.missing-integrity", "version_id": "rxT2BP3"}}, "shortlink": "https://sg.run/krXA", "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity", "subcategory": ["audit"], "technology": ["html"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$...A": {"abstract_content": " rel=\"stylesheet\" type=\"text/css\"\n\thref=\"http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css\" /", "end": {"col": 68, "line": 6, "offset": 167}, "start": {"col": 6, "line": 5, "offset": 66}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/spoofcookie/html/SpoofCookie.html", "start": {"col": 1, "line": 5, "offset": 61}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 29, "offset": 1217}, "extra": {"engine_kind": "OSS", "fingerprint": "b8450be118da5321fc1c7fa1d64b5ba63df7114d7ac87a8596374a74bbfca79e813b7a0e5a48b64d1be4e5502a5e8f60f6cd9dfbd8adc1cb0158ed30568284eb_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjection/attack2\"\n              autocomplete=\"off\">\n            <table>\n                <tr>\n                    <td><label>SQL query</label></td>\n                    <td width=\"100%\"><input class=\"form-control\" name=\"query\" value=\"\" type=\"TEXT\" placeholder=\"SQL query\"/></td>\n                </tr>\n                <tr>\n                    <td><button type=\"SUBMIT\">Submit</button></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 17, "offset": 732}, "start": {"col": 23, "line": 17, "offset": 728}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "start": {"col": 9, "line": 16, "offset": 655}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 53, "offset": 2213}, "extra": {"engine_kind": "OSS", "fingerprint": "b8450be118da5321fc1c7fa1d64b5ba63df7114d7ac87a8596374a74bbfca79e813b7a0e5a48b64d1be4e5502a5e8f60f6cd9dfbd8adc1cb0158ed30568284eb_1", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjection/attack3\"\n              autocomplete=\"off\">\n            <table>\n                <tr>\n                    <td><label>SQL query</label></td>\n                    <td width=\"100%\"><input class=\"form-control\" name=\"query\" value=\"\" type=\"TEXT\" placeholder=\"SQL query\"/></td>\n                </tr>\n                <tr>\n                    <td><button type=\"SUBMIT\">Submit</button></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 41, "offset": 1728}, "start": {"col": 23, "line": 41, "offset": 1724}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "start": {"col": 9, "line": 40, "offset": 1651}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 77, "offset": 3209}, "extra": {"engine_kind": "OSS", "fingerprint": "b8450be118da5321fc1c7fa1d64b5ba63df7114d7ac87a8596374a74bbfca79e813b7a0e5a48b64d1be4e5502a5e8f60f6cd9dfbd8adc1cb0158ed30568284eb_2", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjection/attack4\"\n              autocomplete=\"off\">\n            <table>\n                <tr>\n                    <td><label>SQL query</label></td>\n                    <td width=\"100%\"><input class=\"form-control\" name=\"query\" value=\"\" type=\"TEXT\" placeholder=\"SQL query\"/></td>\n                </tr>\n                <tr>\n                    <td><button type=\"SUBMIT\">Submit</button></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 65, "offset": 2724}, "start": {"col": 23, "line": 65, "offset": 2720}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "start": {"col": 9, "line": 64, "offset": 2647}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 101, "offset": 4205}, "extra": {"engine_kind": "OSS", "fingerprint": "b8450be118da5321fc1c7fa1d64b5ba63df7114d7ac87a8596374a74bbfca79e813b7a0e5a48b64d1be4e5502a5e8f60f6cd9dfbd8adc1cb0158ed30568284eb_3", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjection/attack5\"\n              autocomplete=\"off\">\n            <table>\n                <tr>\n                    <td><label>SQL query</label></td>\n                    <td width=\"100%\"><input class=\"form-control\" name=\"query\" value=\"\" type=\"TEXT\" placeholder=\"SQL query\"/></td>\n                </tr>\n                <tr>\n                    <td><button type=\"SUBMIT\">Submit</button></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 89, "offset": 3720}, "start": {"col": 23, "line": 89, "offset": 3716}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "start": {"col": 9, "line": 88, "offset": 3643}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 207, "offset": 8666}, "extra": {"engine_kind": "OSS", "fingerprint": "b8450be118da5321fc1c7fa1d64b5ba63df7114d7ac87a8596374a74bbfca79e813b7a0e5a48b64d1be4e5502a5e8f60f6cd9dfbd8adc1cb0158ed30568284eb_4", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjection/assignment5b\">\n            <table>\n                <tr>\n                    <td>Login_Count:</td>\n                    <td><input name=\"login_count\" type=\"text\" required=\"true\"/></td>\n                </tr>\n                <tr>\n                    <td>User_Id:</td>\n                    <td><input name=\"userid\" type=\"TEXT\" required=\"true\"/></td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td><input\n                            name=\"Get Account Info\" value=\"Get Account Info\" type=\"SUBMIT\"/></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 190, "offset": 8013}, "start": {"col": 23, "line": 190, "offset": 8009}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "start": {"col": 9, "line": 189, "offset": 7936}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 234, "offset": 9825}, "extra": {"engine_kind": "OSS", "fingerprint": "b8450be118da5321fc1c7fa1d64b5ba63df7114d7ac87a8596374a74bbfca79e813b7a0e5a48b64d1be4e5502a5e8f60f6cd9dfbd8adc1cb0158ed30568284eb_5", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjection/attack8\"\n              autocomplete=\"off\">\n            <table>\n                <tr>\n                    <td><label>Employee Name:</label></td>\n                    <td><input name=\"name\" value=\"\" type=\"TEXT\" placeholder=\"Lastname\"/></td>\n                </tr>\n                <tr>\n                    <td><label>Authentication TAN:</label></td>\n                    <td><input name=\"auth_tan\" value=\"\" type=\"TEXT\" placeholder=\"TAN\"/></td>\n                </tr>\n                <tr>\n                    <td><button type=\"SUBMIT\">Get department</button></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 218, "offset": 9163}, "start": {"col": 23, "line": 218, "offset": 9159}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "start": {"col": 9, "line": 217, "offset": 9086}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 262, "offset": 10999}, "extra": {"engine_kind": "OSS", "fingerprint": "b8450be118da5321fc1c7fa1d64b5ba63df7114d7ac87a8596374a74bbfca79e813b7a0e5a48b64d1be4e5502a5e8f60f6cd9dfbd8adc1cb0158ed30568284eb_6", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjection/attack9\"\n              autocomplete=\"off\">\n            <table>\n                <tr>\n                    <td><label>Employee Name:</label></td>\n                    <td><input name=\"name\" value=\"\" type=\"TEXT\" placeholder=\"Lastname\"/></td>\n                </tr>\n                <tr>\n                    <td><label>Authentication TAN:</label></td>\n                    <td><input name=\"auth_tan\" value=\"\" type=\"TEXT\" placeholder=\"TAN\"/></td>\n                </tr>\n                <tr>\n                    <td><button type=\"SUBMIT\">Get department</button></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 246, "offset": 10337}, "start": {"col": 23, "line": 246, "offset": 10333}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "start": {"col": 9, "line": 245, "offset": 10260}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 287, "offset": 11995}, "extra": {"engine_kind": "OSS", "fingerprint": "b8450be118da5321fc1c7fa1d64b5ba63df7114d7ac87a8596374a74bbfca79e813b7a0e5a48b64d1be4e5502a5e8f60f6cd9dfbd8adc1cb0158ed30568284eb_7", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjection/attack10\"\n              autocomplete=\"off\">\n            <table>\n                <tr>\n                    <td><label>Action contains:</label></td>\n                    <td><input name=\"action_string\" value=\"\" type=\"TEXT\" placeholder=\"Enter search string\"/></td>\n                </tr>\n                <tr>\n                    <td><button type=\"SUBMIT\">Search logs</button></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 275, "offset": 11513}, "start": {"col": 23, "line": 275, "offset": 11509}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjection.html", "start": {"col": 9, "line": 274, "offset": 11436}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 33, "offset": 1318}, "extra": {"engine_kind": "OSS", "fingerprint": "b8d82e0b4507e3f57c78b4dc7ec3e61027686354b5c5eafe1c0fa8c510e67131d3800f063dda8029e76f34399bb4e64959e14564cf1a5c37aa68b467c1325a08_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjectionAdvanced/attack6a\">\n            <table>\n                <tr>\n                    <td>Name:</td>\n                    <td><input name=\"userid_6a\" value=\"\" type=\"TEXT\"/></td>\n                    <td><input\n                            name=\"Get Account Info\" value=\"Get Account Info\" type=\"SUBMIT\"/></td>\n                    <td></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 22, "offset": 881}, "start": {"col": 23, "line": 22, "offset": 877}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html", "start": {"col": 9, "line": 21, "offset": 804}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 46, "offset": 1849}, "extra": {"engine_kind": "OSS", "fingerprint": "b8d82e0b4507e3f57c78b4dc7ec3e61027686354b5c5eafe1c0fa8c510e67131d3800f063dda8029e76f34399bb4e64959e14564cf1a5c37aa68b467c1325a08_1", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlInjectionAdvanced/attack6b\">\n            <table>\n                <tr>\n                    <td>Password:</td>\n                    <td><input name=\"userid_6b\" value=\"\" type=\"TEXT\"/></td>\n                    <td><input\n                            name=\"Check Dave's Password:\" value=\"Check Password\" type=\"SUBMIT\"/></td>\n                    <td></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 35, "offset": 1404}, "start": {"col": 23, "line": 35, "offset": 1400}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html", "start": {"col": 9, "line": 34, "offset": 1327}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 24, "line": 176, "offset": 9873}, "extra": {"engine_kind": "OSS", "fingerprint": "b8d82e0b4507e3f57c78b4dc7ec3e61027686354b5c5eafe1c0fa8c510e67131d3800f063dda8029e76f34399bb4e64959e14564cf1a5c37aa68b467c1325a08_2", "is_ignored": false, "lines": "                <form id=\"quiz-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\"\n                      method=\"POST\" name=\"form\"\n                      action=\"SqlInjectionAdvanced/quiz\"\n                      role=\"form\">\n                    <div id=\"q_container\"></div>\n                    <br />\n                <input name=\"Quiz_solutions\" value=\"Submit answers\" type=\"SUBMIT\"/>\n                </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 35, "line": 170, "offset": 9584}, "start": {"col": 31, "line": 170, "offset": 9580}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html", "start": {"col": 17, "line": 169, "offset": 9484}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 36, "offset": 1969}, "extra": {"engine_kind": "OSS", "fingerprint": "5b25bb5d7c965d7717b190498db87e1d062db9621d5431b06d8b0209c2aaba19bdebb4eca59456b50a8d591974e0907d1aff6d4954727800814ec9fb9ab4b5d8_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"SqlInjectionMitigations/attack10a\">\n            <div>\n                <p>Connection conn = DriverManager.<input type=\"text\" name=\"field1\" id=\"field1\" />(DBURL, DBUSER, DBPW);</p>\n                <p><input type=\"text\" name=\"field2\" id=\"field2\" /> = conn.<input type=\"text\" name=\"field3\" id=\"field3\" />(\"SELECT status FROM users WHERE name=<input type=\"text\" name=\"field4\" id=\"field4\" /> AND mail=<input type=\"text\" name=\"field5\" id=\"field5\" />\");</p>\n                <p><input type=\"text\" name=\"field6\" id=\"field6\" />;</p>\n                <p><input type=\"text\" name=\"field7\" id=\"field7\" />;</p>\n            </div>\n            <div class=\"input-group\" style=\"margin-top: 10px\">\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 72, "line": 26, "offset": 1159}, "start": {"col": 68, "line": 26, "offset": 1155}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html", "start": {"col": 9, "line": 26, "offset": 1096}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 55, "offset": 3144}, "extra": {"engine_kind": "OSS", "fingerprint": "5b25bb5d7c965d7717b190498db87e1d062db9621d5431b06d8b0209c2aaba19bdebb4eca59456b50a8d591974e0907d1aff6d4954727800814ec9fb9ab4b5d8_1", "is_ignored": false, "lines": "        <form id=\"codesubmit\" style=\"height: 100%; min-height: 300px;\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"SqlInjectionMitigations/attack10b\">\n            <div>\n                <div id=\"editor\" style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0; height: 300px;\" name=\"editor\"></div>\n                <script th:src=\"@{/js/libs/ace.js}\" type=\"text/javascript\" charset=\"utf-8\"></script>\n                <script th:src=\"@{/lesson_js/assignment10b.js}\" type=\"text/javascript\" charset=\"utf-8\"></script>\n            </div>\n            <input type=\"hidden\" name=\"editor\"/>\n            <div class=\"input-group\" style=\"position: absolute; top: 310px;\">\n                <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </div>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 129, "line": 45, "offset": 2461}, "start": {"col": 125, "line": 45, "offset": 2457}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html", "start": {"col": 9, "line": 45, "offset": 2341}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 86, "offset": 4509}, "extra": {"engine_kind": "OSS", "fingerprint": "5b25bb5d7c965d7717b190498db87e1d062db9621d5431b06d8b0209c2aaba19bdebb4eca59456b50a8d591974e0907d1aff6d4954727800814ec9fb9ab4b5d8_2", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlOnlyInputValidation/attack\"\n              enctype=\"application/json;charset=UTF-8\">\n            <table>\n                <tr>\n                    <td>Name:</td>\n                    <td><input name=\"userid_sql_only_input_validation\" value=\"\" type=\"TEXT\"/></td>\n                    <td><input\n                            name=\"Get Account Info\" value=\"Get Account Info\" type=\"SUBMIT\"/></td>\n                    <td></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 74, "offset": 3994}, "start": {"col": 23, "line": 74, "offset": 3990}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html", "start": {"col": 9, "line": 73, "offset": 3917}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 109, "offset": 5532}, "extra": {"engine_kind": "OSS", "fingerprint": "5b25bb5d7c965d7717b190498db87e1d062db9621d5431b06d8b0209c2aaba19bdebb4eca59456b50a8d591974e0907d1aff6d4954727800814ec9fb9ab4b5d8_3", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"SqlOnlyInputValidationOnKeywords/attack\"\n              enctype=\"application/json;charset=UTF-8\">\n            <table>\n                <tr>\n                    <td>Name:</td>\n                    <td><input name=\"userid_sql_only_input_validation_on_keywords\" value=\"\" type=\"TEXT\"/></td>\n                    <td><input\n                            name=\"Get Account Info\" value=\"Get Account Info\" type=\"SUBMIT\"/></td>\n                    <td></td>\n                </tr>\n            </table>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 97, "offset": 4995}, "start": {"col": 23, "line": 97, "offset": 4991}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html", "start": {"col": 9, "line": 96, "offset": 4918}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 187, "offset": 9683}, "extra": {"engine_kind": "OSS", "fingerprint": "5b25bb5d7c965d7717b190498db87e1d062db9621d5431b06d8b0209c2aaba19bdebb4eca59456b50a8d591974e0907d1aff6d4954727800814ec9fb9ab4b5d8_4", "is_ignored": false, "lines": "        <form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"SqlInjectionMitigations/attack12a\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-addon\">IP address webgoat-prd server:</div>\n                    <input type=\"text\" class=\"form-control\" id=\"ip\" name=\"ip\"\n                           placeholder=\"192.1.0.12\"/>\n                </div>\n                <div class=\"input-group\" style=\"margin-top: 10px\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </div>\n            </div>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 47, "line": 176, "offset": 9097}, "start": {"col": 43, "line": 176, "offset": 9093}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html", "start": {"col": 9, "line": 176, "offset": 9059}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 25, "offset": 1042}, "extra": {"engine_kind": "OSS", "fingerprint": "3f120207e16d5e0530a1d1f2c8fc2e795180d37381c7db87ba4240f2b02e1abeb2309c758904cb18d64f347438fb8827f249acc190df1e4a674d7d8259517db6_0", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n                  method=\"POST\" name=\"form\"\n                  action=\"SSRF/task1\">\n                <table>\n                    <tr>\n                        <td><input type=\"hidden\" id=\"url1\" name=\"url\" value=\"images/tom.png\"/></td>\n\n                        <td><input\n                                name=\"Steal the Cheese\" value=\"Steal the Cheese\" type=\"SUBMIT\"/></td>\n                        <td></td>\n                    </tr>\n                </table>\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 14, "offset": 598}, "start": {"col": 27, "line": 14, "offset": 594}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/ssrf/html/SSRF.html", "start": {"col": 13, "line": 13, "offset": 517}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 47, "offset": 1975}, "extra": {"engine_kind": "OSS", "fingerprint": "3f120207e16d5e0530a1d1f2c8fc2e795180d37381c7db87ba4240f2b02e1abeb2309c758904cb18d64f347438fb8827f249acc190df1e4a674d7d8259517db6_1", "is_ignored": false, "lines": "            <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n                  method=\"POST\" name=\"form\"\n                  action=\"SSRF/task2\">\n                <table>\n                    <tr>\n                        <td><input type=\"hidden\" id=\"url2\" name=\"url\" value=\"images/cat.png\"/></td>\n\n                        <td><input\n                                name=\"try this\" value=\"try this\" type=\"SUBMIT\"/></td>\n                        <td></td>\n                    </tr>\n                </table>\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 31, "line": 36, "offset": 1547}, "start": {"col": 27, "line": 36, "offset": 1543}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/ssrf/html/SSRF.html", "start": {"col": 13, "line": 35, "offset": 1466}}, {"check_id": "html.security.audit.missing-integrity.missing-integrity", "end": {"col": 111, "line": 5, "offset": 171}, "extra": {"engine_kind": "OSS", "fingerprint": "cf512ee80f0a5c0b763a970658dec782236129606b7f570133c2a089c2a21dd666ba16f58986baf1e96ac6f84383f1b932296e0a92c372066b0da3335e476471_0", "is_ignored": false, "lines": "    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css\" />", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-353: Missing Support for Integrity Check"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13728, "rule_id": "AbUQzj", "rv_id": 727930, "url": "https://semgrep.dev/playground/r/rxT2BP3/html.security.audit.missing-integrity.missing-integrity", "version_id": "rxT2BP3"}}, "shortlink": "https://sg.run/krXA", "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity", "subcategory": ["audit"], "technology": ["html"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$...A": {"abstract_content": " rel=\"stylesheet\" type=\"text/css\" href=\"http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css\" /", "end": {"col": 110, "line": 5, "offset": 170}, "start": {"col": 10, "line": 5, "offset": 70}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/vulnerablecomponents/html/VulnerableComponents.html", "start": {"col": 5, "line": 5, "offset": 65}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 13, "line": 113, "offset": 5690}, "extra": {"engine_kind": "OSS", "fingerprint": "2c95306eff55df6c7baddfd9d47228371c1fdf0378a98c4520304603855cf3b6711ddcc4ad245ad353b772437c990c7ee7a7a57e395fc6db1ad130e478977bea_0", "is_ignored": false, "lines": "\t\t\t\t\t<form accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\"\n\t\t\t\t\t\taction=\"#attack/307/100\">\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Enter the contact's xml representation:</td>\n\t\t\t\t\t\t\t\t<td><textarea name=\"payload\" value=\"\" type=\"TEXT\" rows=\"15\" cols=\"60\"/></td>\n\t\t\t\t\t\t\t\t<td><input name=\"SUBMIT\" value=\"Go!\" type=\"SUBMIT\"/></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 49, "line": 104, "offset": 5370}, "start": {"col": 45, "line": 104, "offset": 5366}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/vulnerablecomponents/html/VulnerableComponents.html", "start": {"col": 6, "line": 104, "offset": 5327}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 36, "offset": 1596}, "extra": {"engine_kind": "OSS", "fingerprint": "3bdfbe2b3decd4dfe444e3f420b5fff47b8ae9aea7afdb5f341157d2e704e6acc9ea5a9e3dd48b89566beeb3a7ef8cd1482ddeea072c22ca77078b35754eb500_0", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"  style=\"position:relative;top:150px\"\n              method=\"POST\" name=\"form\"\n              action=\"WebWolf/mail\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\"form-control\"\n                                   placeholder=\"Type in your unique code\"\n                                   name='uniqueCode'/>\n                            <div class=\"input-group-btn\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Go</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 20, "offset": 881}, "start": {"col": 23, "line": 20, "offset": 877}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/webwolfintroduction/html/WebWolfIntroduction.html", "start": {"col": 9, "line": 19, "offset": 767}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 59, "offset": 2644}, "extra": {"engine_kind": "OSS", "fingerprint": "3bdfbe2b3decd4dfe444e3f420b5fff47b8ae9aea7afdb5f341157d2e704e6acc9ea5a9e3dd48b89566beeb3a7ef8cd1482ddeea072c22ca77078b35754eb500_1", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"  style=\"position:relative;top:-50px\"\n              method=\"POST\" name=\"secondform\"\n              action=\"WebWolf/mail/send\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <div class=\"form-group input-group\">\n          <span class=\"input-group-addon\">\n            @\n          </span>\n                            <input class=\"form-control\" th:attr=\"placeholder=${username + '@webgoat.org'}\" name=\"email\" type=\"email\"\n                                   required=\"\"/>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary btn-block\" id=\"btn-login\">\n                            Send e-mail\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 41, "offset": 1860}, "start": {"col": 23, "line": 41, "offset": 1856}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/webwolfintroduction/html/WebWolfIntroduction.html", "start": {"col": 9, "line": 40, "offset": 1746}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 94, "offset": 4081}, "extra": {"engine_kind": "OSS", "fingerprint": "3bdfbe2b3decd4dfe444e3f420b5fff47b8ae9aea7afdb5f341157d2e704e6acc9ea5a9e3dd48b89566beeb3a7ef8cd1482ddeea072c22ca77078b35754eb500_2", "is_ignored": false, "lines": "        <form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n              method=\"POST\" name=\"form\"\n              action=\"WebWolf/landing\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\"form-control\"\n                                   placeholder=\"Type in your unique code\"\n                                   name='uniqueCode'/>\n                            <div class=\"input-group-btn\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Go</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 27, "line": 78, "offset": 3363}, "start": {"col": 23, "line": 78, "offset": 3359}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/webwolfintroduction/html/WebWolfIntroduction.html", "start": {"col": 9, "line": 77, "offset": 3286}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 11, "line": 24, "offset": 794}, "extra": {"engine_kind": "OSS", "fingerprint": "3dbee0a1a2084d136f2e71e80739569bcc48472c24f27868668a797790d0eeb46acd4c8b01b28d2e76272291ee596179f0010a80f46bd4cb694baa5b7b31aa6c_0", "is_ignored": false, "lines": "\t\t\t<form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n\t\t\t\t  method=\"POST\" name=\"form\"\n\t\t\t\t  action=\"CrossSiteScripting/attack1\">\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><input type=\"checkbox\" name=\"checkboxAttack1\"> The cookies are the same on each tab </td>\n\t\t\t\t\t\t<td><input\n\t\t\t\t\t\t\t\tname=\"answer\" value=\"Submit\" type=\"SUBMIT\"/></td>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 19, "line": 14, "offset": 490}, "start": {"col": 15, "line": 14, "offset": 486}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/xss/html/CrossSiteScripting.html", "start": {"col": 4, "line": 13, "offset": 421}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 10, "line": 139, "offset": 4811}, "extra": {"engine_kind": "OSS", "fingerprint": "3dbee0a1a2084d136f2e71e80739569bcc48472c24f27868668a797790d0eeb46acd4c8b01b28d2e76272291ee596179f0010a80f46bd4cb694baa5b7b31aa6c_1", "is_ignored": false, "lines": "\t\t<form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n\t\t\t  method=\"POST\" name=\"DOMTestRoute\"\n\t\t\t  action=\"CrossSiteScripting/attack6a\">\n\t\t\t<input name=\"DOMTestRoute\" value=\"\" type=\"TEXT\" />\n\t\t\t<input name=\"SubmitTestRoute\" value=\"Submit\" type=\"SUBMIT\"/>\n\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 18, "line": 135, "offset": 4619}, "start": {"col": 14, "line": 135, "offset": 4615}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/xss/html/CrossSiteScripting.html", "start": {"col": 3, "line": 134, "offset": 4551}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 10, "line": 154, "offset": 5447}, "extra": {"engine_kind": "OSS", "fingerprint": "3dbee0a1a2084d136f2e71e80739569bcc48472c24f27868668a797790d0eeb46acd4c8b01b28d2e76272291ee596179f0010a80f46bd4cb694baa5b7b31aa6c_2", "is_ignored": false, "lines": "\t\t<form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n\t\t\t  method=\"POST\" name=\"DOMFollowUp\"\n\t\t\t  action=\"CrossSiteScripting/dom-follow-up\">\n\t\t\t<input name=\"successMessage\" value=\"\" type=\"TEXT\" />\n\t\t\t<input name=\"submitMessage\" value=\"Submit\" type=\"SUBMIT\"/>\n\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 18, "line": 150, "offset": 5251}, "start": {"col": 14, "line": 150, "offset": 5247}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/xss/html/CrossSiteScripting.html", "start": {"col": 3, "line": 149, "offset": 5183}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 11, "line": 175, "offset": 6406}, "extra": {"engine_kind": "OSS", "fingerprint": "3dbee0a1a2084d136f2e71e80739569bcc48472c24f27868668a797790d0eeb46acd4c8b01b28d2e76272291ee596179f0010a80f46bd4cb694baa5b7b31aa6c_3", "is_ignored": false, "lines": "\t\t\t<form id=\"quiz-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\"\n\t\t\t\t  method=\"POST\" name=\"form\"\n\t\t\t\t  action=\"CrossSiteScripting/quiz\" role=\"form\">\n\t\t\t\t<div id=\"q_container\"></div>\n\t\t\t\t<br />\n\t\t\t\t<input name=\"Quiz_solutions\" value=\"Submit answers\" type=\"SUBMIT\"/>\n\t\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 19, "line": 170, "offset": 6214}, "start": {"col": 15, "line": 170, "offset": 6210}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/xss/html/CrossSiteScripting.html", "start": {"col": 4, "line": 169, "offset": 6130}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 10, "line": 34, "offset": 1630}, "extra": {"engine_kind": "OSS", "fingerprint": "ceb2c5045af0fa09b002a0a242dd52046f4e22f79b3cc66997b7420eeb9b7fd3783ea3e317d3c1726ce1e06d268e16ca2be395f0a7502166b83c8892cac0e6a1_0", "is_ignored": false, "lines": "\t\t<form id=\"codesubmit\" style=\"height: 100%; min-height: 350px;\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"CrossSiteScripting/attack3\">\n\t\t\t<div>\n\t\t\t\t<div id=\"editor\" style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0; height: 350px;\" name=\"editor\"></div>\n\t\t\t\t<script th:src=\"@{/js/libs/ace.js}\" type=\"text/javascript\" charset=\"utf-8\"></script>\n\t\t\t\t<script th:src=\"@{/lesson_js/assignment3.js}\" type=\"text/javascript\" charset=\"utf-8\"></script>\n\t\t\t</div>\n\t\t\t<input type=\"hidden\" name=\"editor\"/>\n\t\t\t<div class=\"input-group\" style=\"position: absolute; top: 365px;\">\n\t\t\t\t<button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\t\t\t</div>\n\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 123, "line": 24, "offset": 1055}, "start": {"col": 119, "line": 24, "offset": 1051}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/xss/html/CrossSiteScriptingMitigation.html", "start": {"col": 3, "line": 24, "offset": 935}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 10, "line": 54, "offset": 2702}, "extra": {"engine_kind": "OSS", "fingerprint": "ceb2c5045af0fa09b002a0a242dd52046f4e22f79b3cc66997b7420eeb9b7fd3783ea3e317d3c1726ce1e06d268e16ca2be395f0a7502166b83c8892cac0e6a1_1", "is_ignored": false, "lines": "\t\t<form id=\"codesubmit2\" style=\"height: 100%; min-height: 350px;\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"CrossSiteScripting/attack4\">\n\t\t\t<div>\n\t\t\t\t<div id=\"editor2\" style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0; height: 350px;\" name=\"editor2\"></div>\n\t\t\t\t<script th:src=\"@{/js/libs/ace.js}\" type=\"text/javascript\" charset=\"utf-8\"></script>\n\t\t\t\t<script th:src=\"@{/lesson_js/assignment4.js}\" type=\"text/javascript\" charset=\"utf-8\"></script>\n\t\t\t</div>\n\t\t\t<input type=\"hidden\" name=\"editor2\"/>\n\t\t\t<div class=\"input-group\" style=\"position: absolute; top: 365px;\">\n\t\t\t\t<button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\t\t\t</div>\n\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 124, "line": 44, "offset": 2124}, "start": {"col": 120, "line": 44, "offset": 2120}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/xss/html/CrossSiteScriptingMitigation.html", "start": {"col": 3, "line": 44, "offset": 2003}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 10, "line": 73, "offset": 2457}, "extra": {"engine_kind": "OSS", "fingerprint": "5351e7d7ea12362137b69a45184cde763dc917d93bcab248a4769d19daa108916f0ed4f53ea6d625207ff688bd2ed5666eedc6c34065a18185f74f3a58743528_0", "is_ignored": false, "lines": "\t\t<form class=\"attack-form\" accept-charset=\"UNKNOWN\"\n\t\t\t  method=\"POST\" name=\"DOMFollowUp\"\n\t\t\t  action=\"CrossSiteScriptingStored/stored-xss-follow-up\">\n\t\t\t<input name=\"successMessage\" value=\"\" type=\"TEXT\" />\n\t\t\t<input name=\"submitMessage\" value=\"Submit\" type=\"SUBMIT\"/>\n\t\t</form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 18, "line": 69, "offset": 2248}, "start": {"col": 14, "line": 69, "offset": 2244}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/lessons/xss/html/CrossSiteScriptingStored.html", "start": {"col": 3, "line": 68, "offset": 2180}}, {"check_id": "javascript.express.security.audit.xss.ejs.var-in-href.var-in-href", "end": {"col": 54, "line": 6, "offset": 300}, "extra": {"engine_kind": "OSS", "fingerprint": "bfec683047e38ffc23003bdb93f29b01d2e04d7416669e22d02eb7c3b5cf47b666e0c5239702ad72d721e4365cb003c80e9f5f5610668d35ffc1be75577a1c3e_0", "is_ignored": false, "lines": "            <a href=\"<%=overview.baseUrl%>/<%=index%>\"  alt=\"Page <%=index++ %>\" class=\"no-underline\">", "message": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like this: href='/<%= link %>'. You may also consider setting the Content Security Policy (CSP) header.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://flask.palletsprojects.com/en/1.1.x/security/#cross-site-scripting-xss#:~:text=javascript:%20URI", "https://github.com/pugjs/pug/issues/2952"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9279, "rule_id": "PeUZrg", "rv_id": 109856, "url": "https://semgrep.dev/playground/r/NdT3d77/javascript.express.security.audit.xss.ejs.var-in-href.var-in-href", "version_id": "NdT3d77"}}, "shortlink": "https://sg.run/Zv0p", "source": "https://semgrep.dev/r/javascript.express.security.audit.xss.ejs.var-in-href.var-in-href", "subcategory": ["audit"], "technology": ["express"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html", "start": {"col": 13, "line": 6, "offset": 259}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 19937, "line": 1, "offset": 19936}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "t", "location": {"end": {"col": 19775, "line": 1, "offset": 19774}, "path": "src/main/resources/webgoat/static/js/libs/backbone-min.js", "start": {"col": 19774, "line": 1, "offset": 19773}}}], "taint_sink": ["CliLoc", [{"end": {"col": 19937, "line": 1, "offset": 19936}, "path": "src/main/resources/webgoat/static/js/libs/backbone-min.js", "start": {"col": 19897, "line": 1, "offset": 19896}}, "new RegExp(\"^\"+t+\"(?:\\\\?([\\\\s\\\\S]*))?$\")"]], "taint_source": ["CliLoc", [{"end": {"col": 19775, "line": 1, "offset": 19774}, "path": "src/main/resources/webgoat/static/js/libs/backbone-min.js", "start": {"col": 19774, "line": 1, "offset": 19773}}, "t"]]}, "engine_kind": "OSS", "fingerprint": "9f7b2b1501f87d66b3809b1916fac67c5888d90265e58c6a9bed1bd94a97336eabd5e639390053c940a34a39a596f373f3b93a8843f1a8e985b0a6bff6db5724_0", "is_ignored": false, "lines": "(function(t){var e=typeof self==\"object\"&&self.self===self&&self||typeof global==\"object\"&&global.global===global&&global;if(typeof define===\"function\"&&define.amd){define([\"underscore\",\"jquery\",\"exports\"],function(i,n,r){e.Backbone=t(e,r,i,n)})}else if(typeof exports!==\"undefined\"){var i=require(\"underscore\"),n;try{n=require(\"jquery\")}catch(r){}t(e,exports,i,n)}else{e.Backbone=t(e,{},e._,e.jQuery||e.Zepto||e.ender||e.$)}})(function(t,e,i,n){var r=t.Backbone;var s=Array.prototype.slice;e.VERSION=\"1.4.0\";e.$=n;e.noConflict=function(){t.Backbone=r;return this};e.emulateHTTP=false;e.emulateJSON=false;var a=e.Events={};var o=/\\s+/;var h;var u=function(t,e,n,r,s){var a=0,h;if(n&&typeof n===\"object\"){if(r!==void 0&&\"context\"in s&&s.context===void 0)s.context=r;for(h=i.keys(n);a<h.length;a++){e=u(t,e,h[a],n[h[a]],s)}}else if(n&&o.test(n)){for(h=n.split(o);a<h.length;a++){e=t(e,h[a],r,s)}}else{e=t(e,n,r,s)}return e};a.on=function(t,e,i){this._events=u(l,this._events||{},t,e,{context:i,ctx:this,listening:h});if(h){var n=this._listeners||(this._listeners={});n[h.id]=h;h.interop=false}return this};a.listenTo=function(t,e,n){if(!t)return this;var r=t._listenId||(t._listenId=i.uniqueId(\"l\"));var s=this._listeningTo||(this._listeningTo={});var a=h=s[r];if(!a){this._listenId||(this._listenId=i.uniqueId(\"l\"));a=h=s[r]=new g(this,t)}var o=c(t,e,n,this);h=void 0;if(o)throw o;if(a.interop)a.on(e,n);return this};var l=function(t,e,i,n){if(i){var r=t[e]||(t[e]=[]);var s=n.context,a=n.ctx,o=n.listening;if(o)o.count++;r.push({callback:i,context:s,ctx:s||a,listening:o})}return t};var c=function(t,e,i,n){try{t.on(e,i,n)}catch(r){return r}};a.off=function(t,e,i){if(!this._events)return this;this._events=u(f,this._events,t,e,{context:i,listeners:this._listeners});return this};a.stopListening=function(t,e,n){var r=this._listeningTo;if(!r)return this;var s=t?[t._listenId]:i.keys(r);for(var a=0;a<s.length;a++){var o=r[s[a]];if(!o)break;o.obj.off(e,n,this);if(o.interop)o.off(e,n)}if(i.isEmpty(r))this._listeningTo=void 0;return this};var f=function(t,e,n,r){if(!t)return;var s=r.context,a=r.listeners;var o=0,h;if(!e&&!s&&!n){for(h=i.keys(a);o<h.length;o++){a[h[o]].cleanup()}return}h=e?[e]:i.keys(t);for(;o<h.length;o++){e=h[o];var u=t[e];if(!u)break;var l=[];for(var c=0;c<u.length;c++){var f=u[c];if(n&&n!==f.callback&&n!==f.callback._callback||s&&s!==f.context){l.push(f)}else{var d=f.listening;if(d)d.off(e,n)}}if(l.length){t[e]=l}else{delete t[e]}}return t};a.once=function(t,e,i){var n=u(d,{},t,e,this.off.bind(this));if(typeof t===\"string\"&&i==null)e=void 0;return this.on(n,e,i)};a.listenToOnce=function(t,e,i){var n=u(d,{},e,i,this.stopListening.bind(this,t));return this.listenTo(t,n)};var d=function(t,e,n,r){if(n){var s=t[e]=i.once(function(){r(e,s);n.apply(this,arguments)});s._callback=n}return t};a.trigger=function(t){if(!this._events)return this;var e=Math.max(0,arguments.length-1);var i=Array(e);for(var n=0;n<e;n++)i[n]=arguments[n+1];u(v,this._events,t,void 0,i);return this};var v=function(t,e,i,n){if(t){var r=t[e];var s=t.all;if(r&&s)s=s.slice();if(r)p(r,n);if(s)p(s,[e].concat(n))}return t};var p=function(t,e){var i,n=-1,r=t.length,s=e[0],a=e[1],o=e[2];switch(e.length){case 0:while(++n<r)(i=t[n]).callback.call(i.ctx);return;case 1:while(++n<r)(i=t[n]).callback.call(i.ctx,s);return;case 2:while(++n<r)(i=t[n]).callback.call(i.ctx,s,a);return;case 3:while(++n<r)(i=t[n]).callback.call(i.ctx,s,a,o);return;default:while(++n<r)(i=t[n]).callback.apply(i.ctx,e);return}};var g=function(t,e){this.id=t._listenId;this.listener=t;this.obj=e;this.interop=true;this.count=0;this._events=void 0};g.prototype.on=a.on;g.prototype.off=function(t,e){var i;if(this.interop){this._events=u(f,this._events,t,e,{context:void 0,listeners:void 0});i=!this._events}else{this.count--;i=this.count===0}if(i)this.cleanup()};g.prototype.cleanup=function(){delete this.listener._listeningTo[this.obj._listenId];if(!this.interop)delete this.obj._listeners[this.id]};a.bind=a.on;a.unbind=a.off;i.extend(e,a);var m=e.Model=function(t,e){var n=t||{};e||(e={});this.preinitialize.apply(this,arguments);this.cid=i.uniqueId(this.cidPrefix);this.attributes={};if(e.collection)this.collection=e.collection;if(e.parse)n=this.parse(n,e)||{};var r=i.result(this,\"defaults\");n=i.defaults(i.extend({},r,n),r);this.set(n,e);this.changed={};this.initialize.apply(this,arguments)};i.extend(m.prototype,a,{changed:null,validationError:null,idAttribute:\"id\",cidPrefix:\"c\",preinitialize:function(){},initialize:function(){},toJSON:function(t){return i.clone(this.attributes)},sync:function(){return e.sync.apply(this,arguments)},get:function(t){return this.attributes[t]},escape:function(t){return i.escape(this.get(t))},has:function(t){return this.get(t)!=null},matches:function(t){return!!i.iteratee(t,this)(this.attributes)},set:function(t,e,n){if(t==null)return this;var r;if(typeof t===\"object\"){r=t;n=e}else{(r={})[t]=e}n||(n={});if(!this._validate(r,n))return false;var s=n.unset;var a=n.silent;var o=[];var h=this._changing;this._changing=true;if(!h){this._previousAttributes=i.clone(this.attributes);this.changed={}}var u=this.attributes;var l=this.changed;var c=this._previousAttributes;for(var f in r){e=r[f];if(!i.isEqual(u[f],e))o.push(f);if(!i.isEqual(c[f],e)){l[f]=e}else{delete l[f]}s?delete u[f]:u[f]=e}if(this.idAttribute in r)this.id=this.get(this.idAttribute);if(!a){if(o.length)this._pending=n;for(var d=0;d<o.length;d++){this.trigger(\"change:\"+o[d],this,u[o[d]],n)}}if(h)return this;if(!a){while(this._pending){n=this._pending;this._pending=false;this.trigger(\"change\",this,n)}}this._pending=false;this._changing=false;return this},unset:function(t,e){return this.set(t,void 0,i.extend({},e,{unset:true}))},clear:function(t){var e={};for(var n in this.attributes)e[n]=void 0;return this.set(e,i.extend({},t,{unset:true}))},hasChanged:function(t){if(t==null)return!i.isEmpty(this.changed);return i.has(this.changed,t)},changedAttributes:function(t){if(!t)return this.hasChanged()?i.clone(this.changed):false;var e=this._changing?this._previousAttributes:this.attributes;var n={};var r;for(var s in t){var a=t[s];if(i.isEqual(e[s],a))continue;n[s]=a;r=true}return r?n:false},previous:function(t){if(t==null||!this._previousAttributes)return null;return this._previousAttributes[t]},previousAttributes:function(){return i.clone(this._previousAttributes)},fetch:function(t){t=i.extend({parse:true},t);var e=this;var n=t.success;t.success=function(i){var r=t.parse?e.parse(i,t):i;if(!e.set(r,t))return false;if(n)n.call(t.context,e,i,t);e.trigger(\"sync\",e,i,t)};G(this,t);return this.sync(\"read\",this,t)},save:function(t,e,n){var r;if(t==null||typeof t===\"object\"){r=t;n=e}else{(r={})[t]=e}n=i.extend({validate:true,parse:true},n);var s=n.wait;if(r&&!s){if(!this.set(r,n))return false}else if(!this._validate(r,n)){return false}var a=this;var o=n.success;var h=this.attributes;n.success=function(t){a.attributes=h;var e=n.parse?a.parse(t,n):t;if(s)e=i.extend({},r,e);if(e&&!a.set(e,n))return false;if(o)o.call(n.context,a,t,n);a.trigger(\"sync\",a,t,n)};G(this,n);if(r&&s)this.attributes=i.extend({},h,r);var u=this.isNew()?\"create\":n.patch?\"patch\":\"update\";if(u===\"patch\"&&!n.attrs)n.attrs=r;var l=this.sync(u,this,n);this.attributes=h;return l},destroy:function(t){t=t?i.clone(t):{};var e=this;var n=t.success;var r=t.wait;var s=function(){e.stopListening();e.trigger(\"destroy\",e,e.collection,t)};t.success=function(i){if(r)s();if(n)n.call(t.context,e,i,t);if(!e.isNew())e.trigger(\"sync\",e,i,t)};var a=false;if(this.isNew()){i.defer(t.success)}else{G(this,t);a=this.sync(\"delete\",this,t)}if(!r)s();return a},url:function(){var t=i.result(this,\"urlRoot\")||i.result(this.collection,\"url\")||V();if(this.isNew())return t;var e=this.get(this.idAttribute);return t.replace(/[^\\/]$/,\"$&/\")+encodeURIComponent(e)},parse:function(t,e){return t},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return!this.has(this.idAttribute)},isValid:function(t){return this._validate({},i.extend({},t,{validate:true}))},_validate:function(t,e){if(!e.validate||!this.validate)return true;t=i.extend({},this.attributes,t);var n=this.validationError=this.validate(t,e)||null;if(!n)return true;this.trigger(\"invalid\",this,n,i.extend(e,{validationError:n}));return false}});var _=e.Collection=function(t,e){e||(e={});this.preinitialize.apply(this,arguments);if(e.model)this.model=e.model;if(e.comparator!==void 0)this.comparator=e.comparator;this._reset();this.initialize.apply(this,arguments);if(t)this.reset(t,i.extend({silent:true},e))};var y={add:true,remove:true,merge:true};var b={add:true,remove:false};var x=function(t,e,i){i=Math.min(Math.max(i,0),t.length);var n=Array(t.length-i);var r=e.length;var s;for(s=0;s<n.length;s++)n[s]=t[s+i];for(s=0;s<r;s++)t[s+i]=e[s];for(s=0;s<n.length;s++)t[s+r+i]=n[s]};i.extend(_.prototype,a,{model:m,preinitialize:function(){},initialize:function(){},toJSON:function(t){return this.map(function(e){return e.toJSON(t)})},sync:function(){return e.sync.apply(this,arguments)},add:function(t,e){return this.set(t,i.extend({merge:false},e,b))},remove:function(t,e){e=i.extend({},e);var n=!i.isArray(t);t=n?[t]:t.slice();var r=this._removeModels(t,e);if(!e.silent&&r.length){e.changes={added:[],merged:[],removed:r};this.trigger(\"update\",this,e)}return n?r[0]:r},set:function(t,e){if(t==null)return;e=i.extend({},y,e);if(e.parse&&!this._isModel(t)){t=this.parse(t,e)||[]}var n=!i.isArray(t);t=n?[t]:t.slice();var r=e.at;if(r!=null)r=+r;if(r>this.length)r=this.length;if(r<0)r+=this.length+1;var s=[];var a=[];var o=[];var h=[];var u={};var l=e.add;var c=e.merge;var f=e.remove;var d=false;var v=this.comparator&&r==null&&e.sort!==false;var p=i.isString(this.comparator)?this.comparator:null;var g,m;for(m=0;m<t.length;m++){g=t[m];var _=this.get(g);if(_){if(c&&g!==_){var b=this._isModel(g)?g.attributes:g;if(e.parse)b=_.parse(b,e);_.set(b,e);o.push(_);if(v&&!d)d=_.hasChanged(p)}if(!u[_.cid]){u[_.cid]=true;s.push(_)}t[m]=_}else if(l){g=t[m]=this._prepareModel(g,e);if(g){a.push(g);this._addReference(g,e);u[g.cid]=true;s.push(g)}}}if(f){for(m=0;m<this.length;m++){g=this.models[m];if(!u[g.cid])h.push(g)}if(h.length)this._removeModels(h,e)}var w=false;var E=!v&&l&&f;if(s.length&&E){w=this.length!==s.length||i.some(this.models,function(t,e){return t!==s[e]});this.models.length=0;x(this.models,s,0);this.length=this.models.length}else if(a.length){if(v)d=true;x(this.models,a,r==null?this.length:r);this.length=this.models.length}if(d)this.sort({silent:true});if(!e.silent){for(m=0;m<a.length;m++){if(r!=null)e.index=r+m;g=a[m];g.trigger(\"add\",g,this,e)}if(d||w)this.trigger(\"sort\",this,e);if(a.length||h.length||o.length){e.changes={added:a,removed:h,merged:o};this.trigger(\"update\",this,e)}}return n?t[0]:t},reset:function(t,e){e=e?i.clone(e):{};for(var n=0;n<this.models.length;n++){this._removeReference(this.models[n],e)}e.previousModels=this.models;this._reset();t=this.add(t,i.extend({silent:true},e));if(!e.silent)this.trigger(\"reset\",this,e);return t},push:function(t,e){return this.add(t,i.extend({at:this.length},e))},pop:function(t){var e=this.at(this.length-1);return this.remove(e,t)},unshift:function(t,e){return this.add(t,i.extend({at:0},e))},shift:function(t){var e=this.at(0);return this.remove(e,t)},slice:function(){return s.apply(this.models,arguments)},get:function(t){if(t==null)return void 0;return this._byId[t]||this._byId[this.modelId(this._isModel(t)?t.attributes:t)]||t.cid&&this._byId[t.cid]},has:function(t){return this.get(t)!=null},at:function(t){if(t<0)t+=this.length;return this.models[t]},where:function(t,e){return this[e?\"find\":\"filter\"](t)},findWhere:function(t){return this.where(t,true)},sort:function(t){var e=this.comparator;if(!e)throw new Error(\"Cannot sort a set without a comparator\");t||(t={});var n=e.length;if(i.isFunction(e))e=e.bind(this);if(n===1||i.isString(e)){this.models=this.sortBy(e)}else{this.models.sort(e)}if(!t.silent)this.trigger(\"sort\",this,t);return this},pluck:function(t){return this.map(t+\"\")},fetch:function(t){t=i.extend({parse:true},t);var e=t.success;var n=this;t.success=function(i){var r=t.reset?\"reset\":\"set\";n[r](i,t);if(e)e.call(t.context,n,i,t);n.trigger(\"sync\",n,i,t)};G(this,t);return this.sync(\"read\",this,t)},create:function(t,e){e=e?i.clone(e):{};var n=e.wait;t=this._prepareModel(t,e);if(!t)return false;if(!n)this.add(t,e);var r=this;var s=e.success;e.success=function(t,e,i){if(n)r.add(t,i);if(s)s.call(i.context,t,e,i)};t.save(null,e);return t},parse:function(t,e){return t},clone:function(){return new this.constructor(this.models,{model:this.model,comparator:this.comparator})},modelId:function(t){return t[this.model.prototype.idAttribute||\"id\"]},values:function(){return new E(this,k)},keys:function(){return new E(this,I)},entries:function(){return new E(this,S)},_reset:function(){this.length=0;this.models=[];this._byId={}},_prepareModel:function(t,e){if(this._isModel(t)){if(!t.collection)t.collection=this;return t}e=e?i.clone(e):{};e.collection=this;var n=new this.model(t,e);if(!n.validationError)return n;this.trigger(\"invalid\",this,n.validationError,e);return false},_removeModels:function(t,e){var i=[];for(var n=0;n<t.length;n++){var r=this.get(t[n]);if(!r)continue;var s=this.indexOf(r);this.models.splice(s,1);this.length--;delete this._byId[r.cid];var a=this.modelId(r.attributes);if(a!=null)delete this._byId[a];if(!e.silent){e.index=s;r.trigger(\"remove\",r,this,e)}i.push(r);this._removeReference(r,e)}return i},_isModel:function(t){return t instanceof m},_addReference:function(t,e){this._byId[t.cid]=t;var i=this.modelId(t.attributes);if(i!=null)this._byId[i]=t;t.on(\"all\",this._onModelEvent,this)},_removeReference:function(t,e){delete this._byId[t.cid];var i=this.modelId(t.attributes);if(i!=null)delete this._byId[i];if(this===t.collection)delete t.collection;t.off(\"all\",this._onModelEvent,this)},_onModelEvent:function(t,e,i,n){if(e){if((t===\"add\"||t===\"remove\")&&i!==this)return;if(t===\"destroy\")this.remove(e,n);if(t===\"change\"){var r=this.modelId(e.previousAttributes());var s=this.modelId(e.attributes);if(r!==s){if(r!=null)delete this._byId[r];if(s!=null)this._byId[s]=e}}}this.trigger.apply(this,arguments)}});var w=typeof Symbol===\"function\"&&Symbol.iterator;if(w){_.prototype[w]=_.prototype.values}var E=function(t,e){this._collection=t;this._kind=e;this._index=0};var k=1;var I=2;var S=3;if(w){E.prototype[w]=function(){return this}}E.prototype.next=function(){if(this._collection){if(this._index<this._collection.length){var t=this._collection.at(this._index);this._index++;var e;if(this._kind===k){e=t}else{var i=this._collection.modelId(t.attributes);if(this._kind===I){e=i}else{e=[i,t]}}return{value:e,done:false}}this._collection=void 0}return{value:void 0,done:true}};var T=e.View=function(t){this.cid=i.uniqueId(\"view\");this.preinitialize.apply(this,arguments);i.extend(this,i.pick(t,H));this._ensureElement();this.initialize.apply(this,arguments)};var P=/^(\\S+)\\s*(.*)$/;var H=[\"model\",\"collection\",\"el\",\"id\",\"attributes\",\"className\",\"tagName\",\"events\"];i.extend(T.prototype,a,{tagName:\"div\",$:function(t){return this.$el.find(t)},preinitialize:function(){},initialize:function(){},render:function(){return this},remove:function(){this._removeElement();this.stopListening();return this},_removeElement:function(){this.$el.remove()},setElement:function(t){this.undelegateEvents();this._setElement(t);this.delegateEvents();return this},_setElement:function(t){this.$el=t instanceof e.$?t:e.$(t);this.el=this.$el[0]},delegateEvents:function(t){t||(t=i.result(this,\"events\"));if(!t)return this;this.undelegateEvents();for(var e in t){var n=t[e];if(!i.isFunction(n))n=this[n];if(!n)continue;var r=e.match(P);this.delegate(r[1],r[2],n.bind(this))}return this},delegate:function(t,e,i){this.$el.on(t+\".delegateEvents\"+this.cid,e,i);return this},undelegateEvents:function(){if(this.$el)this.$el.off(\".delegateEvents\"+this.cid);return this},undelegate:function(t,e,i){this.$el.off(t+\".delegateEvents\"+this.cid,e,i);return this},_createElement:function(t){return document.createElement(t)},_ensureElement:function(){if(!this.el){var t=i.extend({},i.result(this,\"attributes\"));if(this.id)t.id=i.result(this,\"id\");if(this.className)t[\"class\"]=i.result(this,\"className\");this.setElement(this._createElement(i.result(this,\"tagName\")));this._setAttributes(t)}else{this.setElement(i.result(this,\"el\"))}},_setAttributes:function(t){this.$el.attr(t)}});var $=function(t,e,i,n){switch(e){case 1:return function(){return t[i](this[n])};case 2:return function(e){return t[i](this[n],e)};case 3:return function(e,r){return t[i](this[n],C(e,this),r)};case 4:return function(e,r,s){return t[i](this[n],C(e,this),r,s)};default:return function(){var e=s.call(arguments);e.unshift(this[n]);return t[i].apply(t,e)}}};var A=function(t,e,n,r){i.each(n,function(i,n){if(e[n])t.prototype[n]=$(e,i,n,r)})};var C=function(t,e){if(i.isFunction(t))return t;if(i.isObject(t)&&!e._isModel(t))return R(t);if(i.isString(t))return function(e){return e.get(t)};return t};var R=function(t){var e=i.matches(t);return function(t){return e(t.attributes)}};var M={forEach:3,each:3,map:3,collect:3,reduce:0,foldl:0,inject:0,reduceRight:0,foldr:0,find:3,detect:3,filter:3,select:3,reject:3,every:3,all:3,some:3,any:3,include:3,includes:3,contains:3,invoke:0,max:3,min:3,toArray:1,size:1,first:3,head:3,take:3,initial:3,rest:3,tail:3,drop:3,last:3,without:0,difference:0,indexOf:3,shuffle:1,lastIndexOf:3,isEmpty:1,chain:1,sample:3,partition:3,groupBy:3,countBy:3,sortBy:3,indexBy:3,findIndex:3,findLastIndex:3};var N={keys:1,values:1,pairs:1,invert:1,pick:0,omit:0,chain:1,isEmpty:1};i.each([[_,M,\"models\"],[m,N,\"attributes\"]],function(t){var e=t[0],n=t[1],r=t[2];e.mixin=function(t){var n=i.reduce(i.functions(t),function(t,e){t[e]=0;return t},{});A(e,t,n,r)};A(e,i,n,r)});e.sync=function(t,n,r){var s=j[t];i.defaults(r||(r={}),{emulateHTTP:e.emulateHTTP,emulateJSON:e.emulateJSON});var a={type:s,dataType:\"json\"};if(!r.url){a.url=i.result(n,\"url\")||V()}if(r.data==null&&n&&(t===\"create\"||t===\"update\"||t===\"patch\")){a.contentType=\"application/json\";a.data=JSON.stringify(r.attrs||n.toJSON(r))}if(r.emulateJSON){a.contentType=\"application/x-www-form-urlencoded\";a.data=a.data?{model:a.data}:{}}if(r.emulateHTTP&&(s===\"PUT\"||s===\"DELETE\"||s===\"PATCH\")){a.type=\"POST\";if(r.emulateJSON)a.data._method=s;var o=r.beforeSend;r.beforeSend=function(t){t.setRequestHeader(\"X-HTTP-Method-Override\",s);if(o)return o.apply(this,arguments)}}if(a.type!==\"GET\"&&!r.emulateJSON){a.processData=false}var h=r.error;r.error=function(t,e,i){r.textStatus=e;r.errorThrown=i;if(h)h.call(r.context,t,e,i)};var u=r.xhr=e.ajax(i.extend(a,r));n.trigger(\"request\",n,u,r);return u};var j={create:\"POST\",update:\"PUT\",patch:\"PATCH\",\"delete\":\"DELETE\",read:\"GET\"};e.ajax=function(){return e.$.ajax.apply(e.$,arguments)};var O=e.Router=function(t){t||(t={});this.preinitialize.apply(this,arguments);if(t.routes)this.routes=t.routes;this._bindRoutes();this.initialize.apply(this,arguments)};var U=/\\((.*?)\\)/g;var z=/(\\(\\?)?:\\w+/g;var q=/\\*\\w+/g;var F=/[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;i.extend(O.prototype,a,{preinitialize:function(){},initialize:function(){},route:function(t,n,r){if(!i.isRegExp(t))t=this._routeToRegExp(t);if(i.isFunction(n)){r=n;n=\"\"}if(!r)r=this[n];var s=this;e.history.route(t,function(i){var a=s._extractParameters(t,i);if(s.execute(r,a,n)!==false){s.trigger.apply(s,[\"route:\"+n].concat(a));s.trigger(\"route\",n,a);e.history.trigger(\"route\",s,n,a)}});return this},execute:function(t,e,i){if(t)t.apply(this,e)},navigate:function(t,i){e.history.navigate(t,i);return this},_bindRoutes:function(){if(!this.routes)return;this.routes=i.result(this,\"routes\");var t,e=i.keys(this.routes);while((t=e.pop())!=null){this.route(t,this.routes[t])}},_routeToRegExp:function(t){t=t.replace(F,\"\\\\$&\").replace(U,\"(?:$1)?\").replace(z,function(t,e){return e?t:\"([^/?]+)\"}).replace(q,\"([^?]*?)\");return new RegExp(\"^\"+t+\"(?:\\\\?([\\\\s\\\\S]*))?$\")},_extractParameters:function(t,e){var n=t.exec(e).slice(1);return i.map(n,function(t,e){if(e===n.length-1)return t||null;return t?decodeURIComponent(t):null})}});var B=e.History=function(){this.handlers=[];this.checkUrl=this.checkUrl.bind(this);if(typeof window!==\"undefined\"){this.location=window.location;this.history=window.history}};var J=/^[#\\/]|\\s+$/g;var L=/^\\/+|\\/+$/g;var W=/#.*$/;B.started=false;i.extend(B.prototype,a,{interval:50,atRoot:function(){var t=this.location.pathname.replace(/[^\\/]$/,\"$&/\");return t===this.root&&!this.getSearch()},matchRoot:function(){var t=this.decodeFragment(this.location.pathname);var e=t.slice(0,this.root.length-1)+\"/\";return e===this.root},decodeFragment:function(t){return decodeURI(t.replace(/%25/g,\"%2525\"))},getSearch:function(){var t=this.location.href.replace(/#.*/,\"\").match(/\\?.+/);return t?t[0]:\"\"},getHash:function(t){var e=(t||this).location.href.match(/#(.*)$/);return e?e[1]:\"\"},getPath:function(){var t=this.decodeFragment(this.location.pathname+this.getSearch()).slice(this.root.length-1);return t.charAt(0)===\"/\"?t.slice(1):t},getFragment:function(t){if(t==null){if(this._usePushState||!this._wantsHashChange){t=this.getPath()}else{t=this.getHash()}}return t.replace(J,\"\")},start:function(t){if(B.started)throw new Error(\"Backbone.history has already been started\");B.started=true;this.options=i.extend({root:\"/\"},this.options,t);this.root=this.options.root;this._wantsHashChange=this.options.hashChange!==false;this._hasHashChange=\"onhashchange\"in window&&(document.documentMode===void 0||document.documentMode>7);this._useHashChange=this._wantsHashChange&&this._hasHashChange;this._wantsPushState=!!this.options.pushState;this._hasPushState=!!(this.history&&this.history.pushState);this._usePushState=this._wantsPushState&&this._hasPushState;this.fragment=this.getFragment();this.root=(\"/\"+this.root+\"/\").replace(L,\"/\");if(this._wantsHashChange&&this._wantsPushState){if(!this._hasPushState&&!this.atRoot()){var e=this.root.slice(0,-1)||\"/\";this.location.replace(e+\"#\"+this.getPath());return true}else if(this._hasPushState&&this.atRoot()){this.navigate(this.getHash(),{replace:true})}}if(!this._hasHashChange&&this._wantsHashChange&&!this._usePushState){this.iframe=document.createElement(\"iframe\");this.iframe.src=\"javascript:0\";this.iframe.style.display=\"none\";this.iframe.tabIndex=-1;var n=document.body;var r=n.insertBefore(this.iframe,n.firstChild).contentWindow;r.document.open();r.document.close();r.location.hash=\"#\"+this.fragment}var s=window.addEventListener||function(t,e){return attachEvent(\"on\"+t,e)};if(this._usePushState){s(\"popstate\",this.checkUrl,false)}else if(this._useHashChange&&!this.iframe){s(\"hashchange\",this.checkUrl,false)}else if(this._wantsHashChange){this._checkUrlInterval=setInterval(this.checkUrl,this.interval)}if(!this.options.silent)return this.loadUrl()},stop:function(){var t=window.removeEventListener||function(t,e){return detachEvent(\"on\"+t,e)};if(this._usePushState){t(\"popstate\",this.checkUrl,false)}else if(this._useHashChange&&!this.iframe){t(\"hashchange\",this.checkUrl,false)}if(this.iframe){document.body.removeChild(this.iframe);this.iframe=null}if(this._checkUrlInterval)clearInterval(this._checkUrlInterval);B.started=false},route:function(t,e){this.handlers.unshift({route:t,callback:e})},checkUrl:function(t){var e=this.getFragment();if(e===this.fragment&&this.iframe){e=this.getHash(this.iframe.contentWindow)}if(e===this.fragment)return false;if(this.iframe)this.navigate(e);this.loadUrl()},loadUrl:function(t){if(!this.matchRoot())return false;t=this.fragment=this.getFragment(t);return i.some(this.handlers,function(e){if(e.route.test(t)){e.callback(t);return true}})},navigate:function(t,e){if(!B.started)return false;if(!e||e===true)e={trigger:!!e};t=this.getFragment(t||\"\");var i=this.root;if(t===\"\"||t.charAt(0)===\"?\"){i=i.slice(0,-1)||\"/\"}var n=i+t;t=t.replace(W,\"\");var r=this.decodeFragment(t);if(this.fragment===r)return;this.fragment=r;if(this._usePushState){this.history[e.replace?\"replaceState\":\"pushState\"]({},document.title,n)}else if(this._wantsHashChange){this._updateHash(this.location,t,e.replace);if(this.iframe&&t!==this.getHash(this.iframe.contentWindow)){var s=this.iframe.contentWindow;if(!e.replace){s.document.open();s.document.close()}this._updateHash(s.location,t,e.replace)}}else{return this.location.assign(n)}if(e.trigger)return this.loadUrl(t)},_updateHash:function(t,e,i){if(i){var n=t.href.replace(/(javascript:|#).*$/,\"\");t.replace(n+\"#\"+e)}else{t.hash=\"#\"+e}}});e.history=new B;var D=function(t,e){var n=this;var r;if(t&&i.has(t,\"constructor\")){r=t.constructor}else{r=function(){return n.apply(this,arguments)}}i.extend(r,n,e);r.prototype=i.create(n.prototype,t);r.prototype.constructor=r;r.__super__=n.prototype;return r};m.extend=_.extend=O.extend=T.extend=B.extend=D;var V=function(){throw new Error('A \"url\" property or function must be specified')};var G=function(t,e){var i=e.error;e.error=function(n){if(i)i.call(e.context,t,n,e);t.trigger(\"error\",t,n,e)}};return e});", "message": "RegExp() called with a `t` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "t", "end": {"col": 19775, "line": 1, "offset": 19774}, "start": {"col": 19774, "line": 1, "offset": 19773}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/backbone-min.js", "start": {"col": 19897, "line": 1, "offset": 19896}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 41, "line": 622, "offset": 18198}, "extra": {"engine_kind": "OSS", "fingerprint": "ea3914decf92bed5d1f78ae5361bca460e45e4f0b732923de00c1db2ef911ec388354c38455d8f3344decf07e3182414d0975f604cb8278a10ef6245280abb90_0", "is_ignored": false, "lines": "\t\t\t\t\tcurOption = curOption[ parts[ i ] ];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13373, "rule_id": "QrUpbJ", "rv_id": 109925, "url": "https://semgrep.dev/playground/r/LjTqQbA/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "LjTqQbA"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"], "vulnerability_class": ["Mass Assignment"]}, "metavars": {"$A": {"abstract_content": "parts[i]", "end": {"col": 39, "line": 622, "offset": 18196}, "start": {"col": 29, "line": 622, "offset": 18186}}, "$SMTH": {"abstract_content": "curOption", "end": {"col": 15, "line": 622, "offset": 18172}, "start": {"col": 6, "line": 622, "offset": 18163}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 6, "line": 622, "offset": 18163}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 71, "line": 7171, "offset": 206774}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "term", "location": {"end": {"col": 30, "line": 7170, "offset": 206700}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 26, "line": 7170, "offset": 206696}}}], "taint_sink": ["CliLoc", [{"end": {"col": 71, "line": 7171, "offset": 206774}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 17, "line": 7171, "offset": 206720}}, "new RegExp( $.ui.autocomplete.escapeRegex(term), \"i\" )"]], "taint_source": ["CliLoc", [{"end": {"col": 30, "line": 7170, "offset": 206700}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 26, "line": 7170, "offset": 206696}}, "term"]]}, "engine_kind": "OSS", "fingerprint": "a78037dcb9fe53d16674b90e2b2014c330ce541a5f0f1bb2e5bd9322b3c066175180a173457d78bdc3bd0ada808ee02bfd39788ec587435e25b678b5e9605974_0", "is_ignored": false, "lines": "\t\tvar matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), \"i\" );", "message": "RegExp() called with a `term` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "term", "end": {"col": 30, "line": 7170, "offset": 206700}, "start": {"col": 26, "line": 7170, "offset": 206696}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 17, "line": 7171, "offset": 206720}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 56, "line": 11639, "offset": 344915}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "event", "location": {"end": {"col": 27, "line": 11582, "offset": 343576}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 22, "line": 11582, "offset": 343571}}}, {"content": "character", "location": {"end": {"col": 13, "line": 11628, "offset": 344663}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 4, "line": 11628, "offset": 344654}}}], "taint_sink": ["CliLoc", [{"end": {"col": 56, "line": 11639, "offset": 344915}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 12, "line": 11639, "offset": 344871}}, "new RegExp( \"^\" + escape( character ), \"i\" )"]], "taint_source": ["CliLoc", [{"end": {"col": 27, "line": 11582, "offset": 343576}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 22, "line": 11582, "offset": 343571}}, "event"]]}, "engine_kind": "OSS", "fingerprint": "26bae009f9b5b36df7177c3c59c40235f328a71f5c8bf3a753debc1df86164d9eeb7a316cd0399d9c720d70f040eaee86149aed38beecbd99d672fe3ad74f7e7_0", "is_ignored": false, "lines": "\t\t\tregex = new RegExp( \"^\" + escape( character ), \"i\" );", "message": "RegExp() called with a `event` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "event", "end": {"col": 27, "line": 11582, "offset": 343576}, "start": {"col": 22, "line": 11582, "offset": 343571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 12, "line": 11639, "offset": 344871}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 57, "line": 11651, "offset": 345470}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "event", "location": {"end": {"col": 27, "line": 11582, "offset": 343576}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 22, "line": 11582, "offset": 343571}}}, {"content": "character", "location": {"end": {"col": 13, "line": 11628, "offset": 344663}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 4, "line": 11628, "offset": 344654}}}], "taint_sink": ["CliLoc", [{"end": {"col": 57, "line": 11651, "offset": 345470}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 13, "line": 11651, "offset": 345426}}, "new RegExp( \"^\" + escape( character ), \"i\" )"]], "taint_source": ["CliLoc", [{"end": {"col": 27, "line": 11582, "offset": 343576}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 22, "line": 11582, "offset": 343571}}, "event"]]}, "engine_kind": "OSS", "fingerprint": "26bae009f9b5b36df7177c3c59c40235f328a71f5c8bf3a753debc1df86164d9eeb7a316cd0399d9c720d70f040eaee86149aed38beecbd99d672fe3ad74f7e7_1", "is_ignored": false, "lines": "\t\t\t\tregex = new RegExp( \"^\" + escape( character ), \"i\" );", "message": "RegExp() called with a `event` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "event", "end": {"col": 27, "line": 11582, "offset": 343576}, "start": {"col": 22, "line": 11582, "offset": 343571}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js", "start": {"col": 13, "line": 11651, "offset": 345426}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 1560, "line": 6, "offset": 2010}, "extra": {"engine_kind": "OSS", "fingerprint": "014993f071ee28c160374068408d5d04192004fec9dd738c2e8b1aa65eebf044ae399fd3283466936a2480f719532db38b1a21182cbd22b0011306b2829f9690_0", "is_ignored": false, "lines": "var n=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||Function(\"return this\")()||{},e=Array.prototype,i=Object.prototype,p=\"undefined\"!=typeof Symbol?Symbol.prototype:null,u=e.push,f=e.slice,s=i.toString,o=i.hasOwnProperty,r=Array.isArray,a=Object.keys,t=Object.create,c=n.isNaN,l=n.isFinite,v=function(){};function h(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)}var g=h.VERSION=\"1.10.2\";function y(u,o,n){if(void 0===o)return u;switch(null==n?3:n){case 1:return function(n){return u.call(o,n)};case 3:return function(n,r,t){return u.call(o,n,r,t)};case 4:return function(n,r,t,e){return u.call(o,n,r,t,e)}}return function(){return u.apply(o,arguments)}}function d(n,r,t){return null==n?ur:Cn(n)?y(n,r,t):Ln(n)&&!Kn(n)?ir(n):or(n)}function m(n,r){return d(n,r,1/0)}function b(n,r,t){return h.iteratee!==m?h.iteratee(n,r):d(n,r,t)}function j(u,o){return o=null==o?u.length-1:+o,function(){for(var n=Math.max(arguments.length-o,0),r=Array(n),t=0;t<n;t++)r[t]=arguments[t+o];switch(o){case 0:return u.call(this,r);case 1:return u.call(this,arguments[0],r);case 2:return u.call(this,arguments[0],arguments[1],r)}var e=Array(o+1);for(t=0;t<o;t++)e[t]=arguments[t];return e[o]=r,u.apply(this,e)}}function _(n){if(!Ln(n))return{};if(t)return t(n);v.prototype=n;var r=new v;return v.prototype=null,r}function w(r){return function(n){return null==n?void 0:n[r]}}function x(n,r){return null!=n&&o.call(n,r)}function S(n,r){for(var t=r.length,e=0;e<t;e++){if(null==n)return;n=n[r[e]]}return t?n:void 0}h.iteratee=m;var A=Math.pow(2,53)-1,O=w(\"length\");function M(n){var r=O(n);return\"number\"==typeof r&&0<=r&&r<=A}function E(n,r,t){var e,u;if(r=y(r,t),M(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var o=Sn(n);for(e=0,u=o.length;e<u;e++)r(n[o[e]],o[e],n)}return n}function N(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=Array(u),i=0;i<u;i++){var a=e?e[i]:i;o[i]=r(n[a],a,n)}return o}function k(f){return function(n,r,t,e){var u=3<=arguments.length;return function(n,r,t,e){var u=!M(n)&&Sn(n),o=(u||n).length,i=0<f?0:o-1;for(e||(t=n[u?u[i]:i],i+=f);0<=i&&i<o;i+=f){var a=u?u[i]:i;t=r(t,n[a],a,n)}return t}(n,y(r,e,4),t,u)}}var I=k(1),T=k(-1);function B(n,r,t){var e=(M(n)?on:Tn)(n,r,t);if(void 0!==e&&-1!==e)return n[e]}function R(n,e,r){var u=[];return e=b(e,r),E(n,function(n,r,t){e(n,r,t)&&u.push(n)}),u}function F(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(!r(n[i],i,n))return!1}return!0}function q(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(r(n[i],i,n))return!0}return!1}function D(n,r,t,e){return M(n)||(n=On(n)),(\"number\"!=typeof t||e)&&(t=0),0<=ln(n,r,t)}var W=j(function(n,t,e){var u,o;return Cn(t)?o=t:Kn(t)&&(u=t.slice(0,-1),t=t[t.length-1]),N(n,function(n){var r=o;if(!r){if(u&&u.length&&(n=S(n,u)),null==n)return;r=n[t]}return null==r?r:r.apply(n,e)})});function z(n,r){return N(n,or(r))}function P(n,e,r){var t,u,o=-1/0,i=-1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&o<t&&(o=t);else e=b(e,r),E(n,function(n,r,t){u=e(n,r,t),(i<u||u===-1/0&&o===-1/0)&&(o=n,i=u)});return o}function K(n,r,t){if(null==r||t)return M(n)||(n=On(n)),n[ar(n.length-1)];var e=M(n)?Dn(n):On(n),u=O(e);r=Math.max(Math.min(r,u),0);for(var o=u-1,i=0;i<r;i++){var a=ar(i,o),f=e[i];e[i]=e[a],e[a]=f}return e.slice(0,r)}function L(i,r){return function(e,u,n){var o=r?[[],[]]:{};return u=b(u,n),E(e,function(n,r){var t=u(n,r,e);i(o,n,t)}),o}}var V=L(function(n,r,t){x(n,t)?n[t].push(r):n[t]=[r]}),C=L(function(n,r,t){n[t]=r}),J=L(function(n,r,t){x(n,t)?n[t]++:n[t]=1}),U=/[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;var $=L(function(n,r,t){n[t?0:1].push(r)},!0);function G(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[0]:H(n,n.length-r)}function H(n,r,t){return f.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))}function Q(n,r,t){return f.call(n,null==r||t?1:r)}function X(n,r,t,e){for(var u=(e=e||[]).length,o=0,i=O(n);o<i;o++){var a=n[o];if(M(a)&&(Kn(a)||Vn(a)))if(r)for(var f=0,c=a.length;f<c;)e[u++]=a[f++];else X(a,r,t,e),u=e.length;else t||(e[u++]=a)}return e}var Y=j(function(n,r){return rn(n,r)});function Z(n,r,t,e){er(r)||(e=t,t=r,r=!1),null!=t&&(t=b(t,e));for(var u=[],o=[],i=0,a=O(n);i<a;i++){var f=n[i],c=t?t(f,i,n):f;r&&!t?(i&&o===c||u.push(f),o=c):t?D(o,c)||(o.push(c),u.push(f)):D(u,f)||u.push(f)}return u}var nn=j(function(n){return Z(X(n,!0,!0))});var rn=j(function(n,r){return r=X(r,!0,!0),R(n,function(n){return!D(r,n)})});function tn(n){for(var r=n&&P(n,O).length||0,t=Array(r),e=0;e<r;e++)t[e]=z(n,e);return t}var en=j(tn);function un(o){return function(n,r,t){r=b(r,t);for(var e=O(n),u=0<o?0:e-1;0<=u&&u<e;u+=o)if(r(n[u],u,n))return u;return-1}}var on=un(1),an=un(-1);function fn(n,r,t,e){for(var u=(t=b(t,e,1))(r),o=0,i=O(n);o<i;){var a=Math.floor((o+i)/2);t(n[a])<u?o=a+1:i=a}return o}function cn(o,i,a){return function(n,r,t){var e=0,u=O(n);if(\"number\"==typeof t)0<o?e=0<=t?t:Math.max(t+u,e):u=0<=t?Math.min(t+1,u):t+u+1;else if(a&&t&&u)return n[t=a(n,r)]===r?t:-1;if(r!=r)return 0<=(t=i(f.call(n,e,u),tr))?t+e:-1;for(t=0<o?e:u-1;0<=t&&t<u;t+=o)if(n[t]===r)return t;return-1}}var ln=cn(1,on,fn),pn=cn(-1,an);function sn(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var o=_(n.prototype),i=n.apply(o,u);return Ln(i)?i:o}var vn=j(function(r,t,e){if(!Cn(r))throw new TypeError(\"Bind must be called on a function\");var u=j(function(n){return sn(r,u,t,this,e.concat(n))});return u}),hn=j(function(u,o){var i=hn.placeholder,a=function(){for(var n=0,r=o.length,t=Array(r),e=0;e<r;e++)t[e]=o[e]===i?arguments[n++]:o[e];for(;n<arguments.length;)t.push(arguments[n++]);return sn(u,a,this,this,t)};return a});hn.placeholder=h;var gn=j(function(n,r){var t=(r=X(r,!1,!1)).length;if(t<1)throw new Error(\"bindAll must be passed function names\");for(;t--;){var e=r[t];n[e]=vn(n[e],n)}});var yn=j(function(n,r,t){return setTimeout(function(){return n.apply(null,t)},r)}),dn=hn(yn,h,1);function mn(n){return function(){return!n.apply(this,arguments)}}function bn(n,r){var t;return function(){return 0<--n&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}}var jn=hn(bn,2),_n=!{toString:null}.propertyIsEnumerable(\"toString\"),wn=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"];function xn(n,r){var t=wn.length,e=n.constructor,u=Cn(e)&&e.prototype||i,o=\"constructor\";for(x(n,o)&&!D(r,o)&&r.push(o);t--;)(o=wn[t])in n&&n[o]!==u[o]&&!D(r,o)&&r.push(o)}function Sn(n){if(!Ln(n))return[];if(a)return a(n);var r=[];for(var t in n)x(n,t)&&r.push(t);return _n&&xn(n,r),r}function An(n){if(!Ln(n))return[];var r=[];for(var t in n)r.push(t);return _n&&xn(n,r),r}function On(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e}function Mn(n){for(var r={},t=Sn(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r}function En(n){var r=[];for(var t in n)Cn(n[t])&&r.push(t);return r.sort()}function Nn(f,c){return function(n){var r=arguments.length;if(c&&(n=Object(n)),r<2||null==n)return n;for(var t=1;t<r;t++)for(var e=arguments[t],u=f(e),o=u.length,i=0;i<o;i++){var a=u[i];c&&void 0!==n[a]||(n[a]=e[a])}return n}}var kn=Nn(An),In=Nn(Sn);function Tn(n,r,t){r=b(r,t);for(var e,u=Sn(n),o=0,i=u.length;o<i;o++)if(r(n[e=u[o]],e,n))return e}function Bn(n,r,t){return r in t}var Rn=j(function(n,r){var t={},e=r[0];if(null==n)return t;Cn(e)?(1<r.length&&(e=y(e,r[1])),r=An(n)):(e=Bn,r=X(r,!1,!1),n=Object(n));for(var u=0,o=r.length;u<o;u++){var i=r[u],a=n[i];e(a,i,n)&&(t[i]=a)}return t}),Fn=j(function(n,t){var r,e=t[0];return Cn(e)?(e=mn(e),1<t.length&&(r=t[1])):(t=N(X(t,!1,!1),String),e=function(n,r){return!D(t,r)}),Rn(n,e,r)}),qn=Nn(An,!0);function Dn(n){return Ln(n)?Kn(n)?n.slice():kn({},n):n}function Wn(n,r){var t=Sn(r),e=t.length;if(null==n)return!e;for(var u=Object(n),o=0;o<e;o++){var i=t[o];if(r[i]!==u[i]||!(i in u))return!1}return!0}function zn(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return!1;if(n!=n)return r!=r;var u=typeof n;return(\"function\"===u||\"object\"===u||\"object\"==typeof r)&&function(n,r,t,e){n instanceof h&&(n=n._wrapped);r instanceof h&&(r=r._wrapped);var u=s.call(n);if(u!==s.call(r))return!1;switch(u){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+r;case\"[object Number]\":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case\"[object Date]\":case\"[object Boolean]\":return+n==+r;case\"[object Symbol]\":return p.valueOf.call(n)===p.valueOf.call(r)}var o=\"[object Array]\"===u;if(!o){if(\"object\"!=typeof n||\"object\"!=typeof r)return!1;var i=n.constructor,a=r.constructor;if(i!==a&&!(Cn(i)&&i instanceof i&&Cn(a)&&a instanceof a)&&\"constructor\"in n&&\"constructor\"in r)return!1}e=e||[];var f=(t=t||[]).length;for(;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),o){if((f=n.length)!==r.length)return!1;for(;f--;)if(!zn(n[f],r[f],t,e))return!1}else{var c,l=Sn(n);if(f=l.length,Sn(r).length!==f)return!1;for(;f--;)if(c=l[f],!x(r,c)||!zn(n[c],r[c],t,e))return!1}return t.pop(),e.pop(),!0}(n,r,t,e)}function Pn(r){return function(n){return s.call(n)===\"[object \"+r+\"]\"}}var Kn=r||Pn(\"Array\");function Ln(n){var r=typeof n;return\"function\"===r||\"object\"===r&&!!n}var Vn=Pn(\"Arguments\"),Cn=Pn(\"Function\"),Jn=Pn(\"String\"),Un=Pn(\"Number\"),$n=Pn(\"Date\"),Gn=Pn(\"RegExp\"),Hn=Pn(\"Error\"),Qn=Pn(\"Symbol\"),Xn=Pn(\"Map\"),Yn=Pn(\"WeakMap\"),Zn=Pn(\"Set\"),nr=Pn(\"WeakSet\");!function(){Vn(arguments)||(Vn=function(n){return x(n,\"callee\")})}();var rr=n.document&&n.document.childNodes;function tr(n){return Un(n)&&c(n)}function er(n){return!0===n||!1===n||\"[object Boolean]\"===s.call(n)}function ur(n){return n}function or(r){return Kn(r)?function(n){return S(n,r)}:w(r)}function ir(r){return r=In({},r),function(n){return Wn(n,r)}}function ar(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))}\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&\"function\"!=typeof rr&&(Cn=function(n){return\"function\"==typeof n||!1});var fr=Date.now||function(){return(new Date).getTime()},cr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},lr=Mn(cr);function pr(r){var t=function(n){return r[n]},n=\"(?:\"+Sn(r).join(\"|\")+\")\",e=RegExp(n),u=RegExp(n,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,t):n}}var sr=pr(cr),vr=pr(lr);var hr=0;var gr=h.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g},yr=/(.)^/,dr={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},mr=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,br=function(n){return\"\\\\\"+dr[n]};function jr(n,r){return n._chain?h(r).chain():r}function _r(t){return E(En(t),function(n){var r=h[n]=t[n];h.prototype[n]=function(){var n=[this._wrapped];return u.apply(n,arguments),jr(this,r.apply(h,n))}}),h}E([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(r){var t=e[r];h.prototype[r]=function(){var n=this._wrapped;return t.apply(n,arguments),\"shift\"!==r&&\"splice\"!==r||0!==n.length||delete n[0],jr(this,n)}}),E([\"concat\",\"join\",\"slice\"],function(n){var r=e[n];h.prototype[n]=function(){return jr(this,r.apply(this._wrapped,arguments))}}),h.prototype.valueOf=h.prototype.toJSON=h.prototype.value=function(){return this._wrapped},h.prototype.toString=function(){return String(this._wrapped)};var wr=_r({default:h,VERSION:g,iteratee:m,restArguments:j,each:E,forEach:E,map:N,collect:N,reduce:I,foldl:I,inject:I,reduceRight:T,foldr:T,find:B,detect:B,filter:R,select:R,reject:function(n,r,t){return R(n,mn(b(r)),t)},every:F,all:F,some:q,any:q,contains:D,includes:D,include:D,invoke:W,pluck:z,where:function(n,r){return R(n,ir(r))},findWhere:function(n,r){return B(n,ir(r))},max:P,min:function(n,e,r){var t,u,o=1/0,i=1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&t<o&&(o=t);else e=b(e,r),E(n,function(n,r,t){((u=e(n,r,t))<i||u===1/0&&o===1/0)&&(o=n,i=u)});return o},shuffle:function(n){return K(n,1/0)},sample:K,sortBy:function(n,e,r){var u=0;return e=b(e,r),z(N(n,function(n,r,t){return{value:n,index:u++,criteria:e(n,r,t)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(e<t||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),\"value\")},groupBy:V,indexBy:C,countBy:J,toArray:function(n){return n?Kn(n)?f.call(n):Jn(n)?n.match(U):M(n)?N(n,ur):On(n):[]},size:function(n){return null==n?0:M(n)?n.length:Sn(n).length},partition:$,first:G,head:G,take:G,initial:H,last:function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[n.length-1]:Q(n,Math.max(0,n.length-r))},rest:Q,tail:Q,drop:Q,compact:function(n){return R(n,Boolean)},flatten:function(n,r){return X(n,r,!1)},without:Y,uniq:Z,unique:Z,union:nn,intersection:function(n){for(var r=[],t=arguments.length,e=0,u=O(n);e<u;e++){var o=n[e];if(!D(r,o)){var i;for(i=1;i<t&&D(arguments[i],o);i++);i===t&&r.push(o)}}return r},difference:rn,unzip:tn,zip:en,object:function(n,r){for(var t={},e=0,u=O(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t},findIndex:on,findLastIndex:an,sortedIndex:fn,indexOf:ln,lastIndexOf:pn,range:function(n,r,t){null==r&&(r=n||0,n=0),t||(t=r<n?-1:1);for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),o=0;o<e;o++,n+=t)u[o]=n;return u},chunk:function(n,r){if(null==r||r<1)return[];for(var t=[],e=0,u=n.length;e<u;)t.push(f.call(n,e,e+=r));return t},bind:vn,partial:hn,bindAll:gn,memoize:function(e,u){var o=function(n){var r=o.cache,t=\"\"+(u?u.apply(this,arguments):n);return x(r,t)||(r[t]=e.apply(this,arguments)),r[t]};return o.cache={},o},delay:yn,defer:dn,throttle:function(t,e,u){var o,i,a,f,c=0;u||(u={});var l=function(){c=!1===u.leading?0:fr(),o=null,f=t.apply(i,a),o||(i=a=null)},n=function(){var n=fr();c||!1!==u.leading||(c=n);var r=e-(n-c);return i=this,a=arguments,r<=0||e<r?(o&&(clearTimeout(o),o=null),c=n,f=t.apply(i,a),o||(i=a=null)):o||!1===u.trailing||(o=setTimeout(l,r)),f};return n.cancel=function(){clearTimeout(o),c=0,o=i=a=null},n},debounce:function(t,e,u){var o,i,a=function(n,r){o=null,r&&(i=t.apply(n,r))},n=j(function(n){if(o&&clearTimeout(o),u){var r=!o;o=setTimeout(a,e),r&&(i=t.apply(this,n))}else o=yn(a,e,this,n);return i});return n.cancel=function(){clearTimeout(o),o=null},n},wrap:function(n,r){return hn(r,n)},negate:mn,compose:function(){var t=arguments,e=t.length-1;return function(){for(var n=e,r=t[e].apply(this,arguments);n--;)r=t[n].call(this,r);return r}},after:function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},before:bn,once:jn,keys:Sn,allKeys:An,values:On,mapObject:function(n,r,t){r=b(r,t);for(var e=Sn(n),u=e.length,o={},i=0;i<u;i++){var a=e[i];o[a]=r(n[a],a,n)}return o},pairs:function(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},invert:Mn,functions:En,methods:En,extend:kn,extendOwn:In,assign:In,findKey:Tn,pick:Rn,omit:Fn,defaults:qn,create:function(n,r){var t=_(n);return r&&In(t,r),t},clone:Dn,tap:function(n,r){return r(n),n},isMatch:Wn,isEqual:function(n,r){return zn(n,r)},isEmpty:function(n){return null==n||(M(n)&&(Kn(n)||Jn(n)||Vn(n))?0===n.length:0===Sn(n).length)},isElement:function(n){return!(!n||1!==n.nodeType)},isArray:Kn,isObject:Ln,isArguments:Vn,isFunction:Cn,isString:Jn,isNumber:Un,isDate:$n,isRegExp:Gn,isError:Hn,isSymbol:Qn,isMap:Xn,isWeakMap:Yn,isSet:Zn,isWeakSet:nr,isFinite:function(n){return!Qn(n)&&l(n)&&!c(parseFloat(n))},isNaN:tr,isBoolean:er,isNull:function(n){return null===n},isUndefined:function(n){return void 0===n},has:function(n,r){if(!Kn(r))return x(n,r);for(var t=r.length,e=0;e<t;e++){var u=r[e];if(null==n||!o.call(n,u))return!1;n=n[u]}return!!t},identity:ur,constant:function(n){return function(){return n}},noop:function(){},property:or,propertyOf:function(r){return null==r?function(){}:function(n){return Kn(n)?S(r,n):r[n]}},matcher:ir,matches:ir,times:function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},random:ar,now:fr,escape:sr,unescape:vr,result:function(n,r,t){Kn(r)||(r=[r]);var e=r.length;if(!e)return Cn(t)?t.call(n):t;for(var u=0;u<e;u++){var o=null==n?void 0:n[r[u]];void 0===o&&(o=t,u=e),n=Cn(o)?o.call(n):o}return n},uniqueId:function(n){var r=++hr+\"\";return n?n+r:r},templateSettings:gr,template:function(o,n,r){!n&&r&&(n=r),n=qn({},n,h.templateSettings);var t,e=RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";o.replace(e,function(n,r,t,e,u){return a+=o.slice(i,u).replace(mr,br),i=u+n.length,r?a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\":t?a+=\"'+\\n((__t=(\"+t+\"))==null?'':__t)+\\n'\":e&&(a+=\"';\\n\"+e+\"\\n__p+='\"),n}),a+=\"';\\n\",n.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{t=new Function(n.variable||\"obj\",\"_\",a)}catch(n){throw n.source=a,n}var u=function(n){return t.call(this,n,h)},f=n.variable||\"obj\";return u.source=\"function(\"+f+\"){\\n\"+a+\"}\",u},chain:function(n){var r=h(n);return r._chain=!0,r},mixin:_r});return wr._=wr});", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13373, "rule_id": "QrUpbJ", "rv_id": 109925, "url": "https://semgrep.dev/playground/r/LjTqQbA/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "LjTqQbA"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"], "vulnerability_class": ["Mass Assignment"]}, "metavars": {"$A": {"abstract_content": "r[e]", "end": {"col": 1559, "line": 6, "offset": 2009}, "start": {"col": 1555, "line": 6, "offset": 2005}}, "$SMTH": {"abstract_content": "n", "end": {"col": 1552, "line": 6, "offset": 2002}, "start": {"col": 1551, "line": 6, "offset": 2001}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 1551, "line": 6, "offset": 2001}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 10244, "line": 6, "offset": 10694}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "r", "location": {"end": {"col": 10172, "line": 6, "offset": 10622}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10171, "line": 6, "offset": 10621}}}, {"content": "n", "location": {"end": {"col": 10206, "line": 6, "offset": 10656}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10205, "line": 6, "offset": 10655}}}], "taint_sink": ["CliLoc", [{"end": {"col": 10244, "line": 6, "offset": 10694}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10235, "line": 6, "offset": 10685}}, "RegExp(n)"]], "taint_source": ["CliLoc", [{"end": {"col": 10172, "line": 6, "offset": 10622}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10171, "line": 6, "offset": 10621}}, "r"]]}, "engine_kind": "OSS", "fingerprint": "b1d9cf897328051c2d525d394902bc47c467e62c8c335b578ef6464eaca0a158873bc752860feeab3f17d3f142015a52bb6e5f5be90762deaf4858bb31bbef07_0", "is_ignored": false, "lines": "var n=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||Function(\"return this\")()||{},e=Array.prototype,i=Object.prototype,p=\"undefined\"!=typeof Symbol?Symbol.prototype:null,u=e.push,f=e.slice,s=i.toString,o=i.hasOwnProperty,r=Array.isArray,a=Object.keys,t=Object.create,c=n.isNaN,l=n.isFinite,v=function(){};function h(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)}var g=h.VERSION=\"1.10.2\";function y(u,o,n){if(void 0===o)return u;switch(null==n?3:n){case 1:return function(n){return u.call(o,n)};case 3:return function(n,r,t){return u.call(o,n,r,t)};case 4:return function(n,r,t,e){return u.call(o,n,r,t,e)}}return function(){return u.apply(o,arguments)}}function d(n,r,t){return null==n?ur:Cn(n)?y(n,r,t):Ln(n)&&!Kn(n)?ir(n):or(n)}function m(n,r){return d(n,r,1/0)}function b(n,r,t){return h.iteratee!==m?h.iteratee(n,r):d(n,r,t)}function j(u,o){return o=null==o?u.length-1:+o,function(){for(var n=Math.max(arguments.length-o,0),r=Array(n),t=0;t<n;t++)r[t]=arguments[t+o];switch(o){case 0:return u.call(this,r);case 1:return u.call(this,arguments[0],r);case 2:return u.call(this,arguments[0],arguments[1],r)}var e=Array(o+1);for(t=0;t<o;t++)e[t]=arguments[t];return e[o]=r,u.apply(this,e)}}function _(n){if(!Ln(n))return{};if(t)return t(n);v.prototype=n;var r=new v;return v.prototype=null,r}function w(r){return function(n){return null==n?void 0:n[r]}}function x(n,r){return null!=n&&o.call(n,r)}function S(n,r){for(var t=r.length,e=0;e<t;e++){if(null==n)return;n=n[r[e]]}return t?n:void 0}h.iteratee=m;var A=Math.pow(2,53)-1,O=w(\"length\");function M(n){var r=O(n);return\"number\"==typeof r&&0<=r&&r<=A}function E(n,r,t){var e,u;if(r=y(r,t),M(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var o=Sn(n);for(e=0,u=o.length;e<u;e++)r(n[o[e]],o[e],n)}return n}function N(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=Array(u),i=0;i<u;i++){var a=e?e[i]:i;o[i]=r(n[a],a,n)}return o}function k(f){return function(n,r,t,e){var u=3<=arguments.length;return function(n,r,t,e){var u=!M(n)&&Sn(n),o=(u||n).length,i=0<f?0:o-1;for(e||(t=n[u?u[i]:i],i+=f);0<=i&&i<o;i+=f){var a=u?u[i]:i;t=r(t,n[a],a,n)}return t}(n,y(r,e,4),t,u)}}var I=k(1),T=k(-1);function B(n,r,t){var e=(M(n)?on:Tn)(n,r,t);if(void 0!==e&&-1!==e)return n[e]}function R(n,e,r){var u=[];return e=b(e,r),E(n,function(n,r,t){e(n,r,t)&&u.push(n)}),u}function F(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(!r(n[i],i,n))return!1}return!0}function q(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(r(n[i],i,n))return!0}return!1}function D(n,r,t,e){return M(n)||(n=On(n)),(\"number\"!=typeof t||e)&&(t=0),0<=ln(n,r,t)}var W=j(function(n,t,e){var u,o;return Cn(t)?o=t:Kn(t)&&(u=t.slice(0,-1),t=t[t.length-1]),N(n,function(n){var r=o;if(!r){if(u&&u.length&&(n=S(n,u)),null==n)return;r=n[t]}return null==r?r:r.apply(n,e)})});function z(n,r){return N(n,or(r))}function P(n,e,r){var t,u,o=-1/0,i=-1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&o<t&&(o=t);else e=b(e,r),E(n,function(n,r,t){u=e(n,r,t),(i<u||u===-1/0&&o===-1/0)&&(o=n,i=u)});return o}function K(n,r,t){if(null==r||t)return M(n)||(n=On(n)),n[ar(n.length-1)];var e=M(n)?Dn(n):On(n),u=O(e);r=Math.max(Math.min(r,u),0);for(var o=u-1,i=0;i<r;i++){var a=ar(i,o),f=e[i];e[i]=e[a],e[a]=f}return e.slice(0,r)}function L(i,r){return function(e,u,n){var o=r?[[],[]]:{};return u=b(u,n),E(e,function(n,r){var t=u(n,r,e);i(o,n,t)}),o}}var V=L(function(n,r,t){x(n,t)?n[t].push(r):n[t]=[r]}),C=L(function(n,r,t){n[t]=r}),J=L(function(n,r,t){x(n,t)?n[t]++:n[t]=1}),U=/[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;var $=L(function(n,r,t){n[t?0:1].push(r)},!0);function G(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[0]:H(n,n.length-r)}function H(n,r,t){return f.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))}function Q(n,r,t){return f.call(n,null==r||t?1:r)}function X(n,r,t,e){for(var u=(e=e||[]).length,o=0,i=O(n);o<i;o++){var a=n[o];if(M(a)&&(Kn(a)||Vn(a)))if(r)for(var f=0,c=a.length;f<c;)e[u++]=a[f++];else X(a,r,t,e),u=e.length;else t||(e[u++]=a)}return e}var Y=j(function(n,r){return rn(n,r)});function Z(n,r,t,e){er(r)||(e=t,t=r,r=!1),null!=t&&(t=b(t,e));for(var u=[],o=[],i=0,a=O(n);i<a;i++){var f=n[i],c=t?t(f,i,n):f;r&&!t?(i&&o===c||u.push(f),o=c):t?D(o,c)||(o.push(c),u.push(f)):D(u,f)||u.push(f)}return u}var nn=j(function(n){return Z(X(n,!0,!0))});var rn=j(function(n,r){return r=X(r,!0,!0),R(n,function(n){return!D(r,n)})});function tn(n){for(var r=n&&P(n,O).length||0,t=Array(r),e=0;e<r;e++)t[e]=z(n,e);return t}var en=j(tn);function un(o){return function(n,r,t){r=b(r,t);for(var e=O(n),u=0<o?0:e-1;0<=u&&u<e;u+=o)if(r(n[u],u,n))return u;return-1}}var on=un(1),an=un(-1);function fn(n,r,t,e){for(var u=(t=b(t,e,1))(r),o=0,i=O(n);o<i;){var a=Math.floor((o+i)/2);t(n[a])<u?o=a+1:i=a}return o}function cn(o,i,a){return function(n,r,t){var e=0,u=O(n);if(\"number\"==typeof t)0<o?e=0<=t?t:Math.max(t+u,e):u=0<=t?Math.min(t+1,u):t+u+1;else if(a&&t&&u)return n[t=a(n,r)]===r?t:-1;if(r!=r)return 0<=(t=i(f.call(n,e,u),tr))?t+e:-1;for(t=0<o?e:u-1;0<=t&&t<u;t+=o)if(n[t]===r)return t;return-1}}var ln=cn(1,on,fn),pn=cn(-1,an);function sn(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var o=_(n.prototype),i=n.apply(o,u);return Ln(i)?i:o}var vn=j(function(r,t,e){if(!Cn(r))throw new TypeError(\"Bind must be called on a function\");var u=j(function(n){return sn(r,u,t,this,e.concat(n))});return u}),hn=j(function(u,o){var i=hn.placeholder,a=function(){for(var n=0,r=o.length,t=Array(r),e=0;e<r;e++)t[e]=o[e]===i?arguments[n++]:o[e];for(;n<arguments.length;)t.push(arguments[n++]);return sn(u,a,this,this,t)};return a});hn.placeholder=h;var gn=j(function(n,r){var t=(r=X(r,!1,!1)).length;if(t<1)throw new Error(\"bindAll must be passed function names\");for(;t--;){var e=r[t];n[e]=vn(n[e],n)}});var yn=j(function(n,r,t){return setTimeout(function(){return n.apply(null,t)},r)}),dn=hn(yn,h,1);function mn(n){return function(){return!n.apply(this,arguments)}}function bn(n,r){var t;return function(){return 0<--n&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}}var jn=hn(bn,2),_n=!{toString:null}.propertyIsEnumerable(\"toString\"),wn=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"];function xn(n,r){var t=wn.length,e=n.constructor,u=Cn(e)&&e.prototype||i,o=\"constructor\";for(x(n,o)&&!D(r,o)&&r.push(o);t--;)(o=wn[t])in n&&n[o]!==u[o]&&!D(r,o)&&r.push(o)}function Sn(n){if(!Ln(n))return[];if(a)return a(n);var r=[];for(var t in n)x(n,t)&&r.push(t);return _n&&xn(n,r),r}function An(n){if(!Ln(n))return[];var r=[];for(var t in n)r.push(t);return _n&&xn(n,r),r}function On(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e}function Mn(n){for(var r={},t=Sn(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r}function En(n){var r=[];for(var t in n)Cn(n[t])&&r.push(t);return r.sort()}function Nn(f,c){return function(n){var r=arguments.length;if(c&&(n=Object(n)),r<2||null==n)return n;for(var t=1;t<r;t++)for(var e=arguments[t],u=f(e),o=u.length,i=0;i<o;i++){var a=u[i];c&&void 0!==n[a]||(n[a]=e[a])}return n}}var kn=Nn(An),In=Nn(Sn);function Tn(n,r,t){r=b(r,t);for(var e,u=Sn(n),o=0,i=u.length;o<i;o++)if(r(n[e=u[o]],e,n))return e}function Bn(n,r,t){return r in t}var Rn=j(function(n,r){var t={},e=r[0];if(null==n)return t;Cn(e)?(1<r.length&&(e=y(e,r[1])),r=An(n)):(e=Bn,r=X(r,!1,!1),n=Object(n));for(var u=0,o=r.length;u<o;u++){var i=r[u],a=n[i];e(a,i,n)&&(t[i]=a)}return t}),Fn=j(function(n,t){var r,e=t[0];return Cn(e)?(e=mn(e),1<t.length&&(r=t[1])):(t=N(X(t,!1,!1),String),e=function(n,r){return!D(t,r)}),Rn(n,e,r)}),qn=Nn(An,!0);function Dn(n){return Ln(n)?Kn(n)?n.slice():kn({},n):n}function Wn(n,r){var t=Sn(r),e=t.length;if(null==n)return!e;for(var u=Object(n),o=0;o<e;o++){var i=t[o];if(r[i]!==u[i]||!(i in u))return!1}return!0}function zn(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return!1;if(n!=n)return r!=r;var u=typeof n;return(\"function\"===u||\"object\"===u||\"object\"==typeof r)&&function(n,r,t,e){n instanceof h&&(n=n._wrapped);r instanceof h&&(r=r._wrapped);var u=s.call(n);if(u!==s.call(r))return!1;switch(u){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+r;case\"[object Number]\":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case\"[object Date]\":case\"[object Boolean]\":return+n==+r;case\"[object Symbol]\":return p.valueOf.call(n)===p.valueOf.call(r)}var o=\"[object Array]\"===u;if(!o){if(\"object\"!=typeof n||\"object\"!=typeof r)return!1;var i=n.constructor,a=r.constructor;if(i!==a&&!(Cn(i)&&i instanceof i&&Cn(a)&&a instanceof a)&&\"constructor\"in n&&\"constructor\"in r)return!1}e=e||[];var f=(t=t||[]).length;for(;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),o){if((f=n.length)!==r.length)return!1;for(;f--;)if(!zn(n[f],r[f],t,e))return!1}else{var c,l=Sn(n);if(f=l.length,Sn(r).length!==f)return!1;for(;f--;)if(c=l[f],!x(r,c)||!zn(n[c],r[c],t,e))return!1}return t.pop(),e.pop(),!0}(n,r,t,e)}function Pn(r){return function(n){return s.call(n)===\"[object \"+r+\"]\"}}var Kn=r||Pn(\"Array\");function Ln(n){var r=typeof n;return\"function\"===r||\"object\"===r&&!!n}var Vn=Pn(\"Arguments\"),Cn=Pn(\"Function\"),Jn=Pn(\"String\"),Un=Pn(\"Number\"),$n=Pn(\"Date\"),Gn=Pn(\"RegExp\"),Hn=Pn(\"Error\"),Qn=Pn(\"Symbol\"),Xn=Pn(\"Map\"),Yn=Pn(\"WeakMap\"),Zn=Pn(\"Set\"),nr=Pn(\"WeakSet\");!function(){Vn(arguments)||(Vn=function(n){return x(n,\"callee\")})}();var rr=n.document&&n.document.childNodes;function tr(n){return Un(n)&&c(n)}function er(n){return!0===n||!1===n||\"[object Boolean]\"===s.call(n)}function ur(n){return n}function or(r){return Kn(r)?function(n){return S(n,r)}:w(r)}function ir(r){return r=In({},r),function(n){return Wn(n,r)}}function ar(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))}\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&\"function\"!=typeof rr&&(Cn=function(n){return\"function\"==typeof n||!1});var fr=Date.now||function(){return(new Date).getTime()},cr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},lr=Mn(cr);function pr(r){var t=function(n){return r[n]},n=\"(?:\"+Sn(r).join(\"|\")+\")\",e=RegExp(n),u=RegExp(n,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,t):n}}var sr=pr(cr),vr=pr(lr);var hr=0;var gr=h.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g},yr=/(.)^/,dr={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},mr=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,br=function(n){return\"\\\\\"+dr[n]};function jr(n,r){return n._chain?h(r).chain():r}function _r(t){return E(En(t),function(n){var r=h[n]=t[n];h.prototype[n]=function(){var n=[this._wrapped];return u.apply(n,arguments),jr(this,r.apply(h,n))}}),h}E([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(r){var t=e[r];h.prototype[r]=function(){var n=this._wrapped;return t.apply(n,arguments),\"shift\"!==r&&\"splice\"!==r||0!==n.length||delete n[0],jr(this,n)}}),E([\"concat\",\"join\",\"slice\"],function(n){var r=e[n];h.prototype[n]=function(){return jr(this,r.apply(this._wrapped,arguments))}}),h.prototype.valueOf=h.prototype.toJSON=h.prototype.value=function(){return this._wrapped},h.prototype.toString=function(){return String(this._wrapped)};var wr=_r({default:h,VERSION:g,iteratee:m,restArguments:j,each:E,forEach:E,map:N,collect:N,reduce:I,foldl:I,inject:I,reduceRight:T,foldr:T,find:B,detect:B,filter:R,select:R,reject:function(n,r,t){return R(n,mn(b(r)),t)},every:F,all:F,some:q,any:q,contains:D,includes:D,include:D,invoke:W,pluck:z,where:function(n,r){return R(n,ir(r))},findWhere:function(n,r){return B(n,ir(r))},max:P,min:function(n,e,r){var t,u,o=1/0,i=1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&t<o&&(o=t);else e=b(e,r),E(n,function(n,r,t){((u=e(n,r,t))<i||u===1/0&&o===1/0)&&(o=n,i=u)});return o},shuffle:function(n){return K(n,1/0)},sample:K,sortBy:function(n,e,r){var u=0;return e=b(e,r),z(N(n,function(n,r,t){return{value:n,index:u++,criteria:e(n,r,t)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(e<t||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),\"value\")},groupBy:V,indexBy:C,countBy:J,toArray:function(n){return n?Kn(n)?f.call(n):Jn(n)?n.match(U):M(n)?N(n,ur):On(n):[]},size:function(n){return null==n?0:M(n)?n.length:Sn(n).length},partition:$,first:G,head:G,take:G,initial:H,last:function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[n.length-1]:Q(n,Math.max(0,n.length-r))},rest:Q,tail:Q,drop:Q,compact:function(n){return R(n,Boolean)},flatten:function(n,r){return X(n,r,!1)},without:Y,uniq:Z,unique:Z,union:nn,intersection:function(n){for(var r=[],t=arguments.length,e=0,u=O(n);e<u;e++){var o=n[e];if(!D(r,o)){var i;for(i=1;i<t&&D(arguments[i],o);i++);i===t&&r.push(o)}}return r},difference:rn,unzip:tn,zip:en,object:function(n,r){for(var t={},e=0,u=O(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t},findIndex:on,findLastIndex:an,sortedIndex:fn,indexOf:ln,lastIndexOf:pn,range:function(n,r,t){null==r&&(r=n||0,n=0),t||(t=r<n?-1:1);for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),o=0;o<e;o++,n+=t)u[o]=n;return u},chunk:function(n,r){if(null==r||r<1)return[];for(var t=[],e=0,u=n.length;e<u;)t.push(f.call(n,e,e+=r));return t},bind:vn,partial:hn,bindAll:gn,memoize:function(e,u){var o=function(n){var r=o.cache,t=\"\"+(u?u.apply(this,arguments):n);return x(r,t)||(r[t]=e.apply(this,arguments)),r[t]};return o.cache={},o},delay:yn,defer:dn,throttle:function(t,e,u){var o,i,a,f,c=0;u||(u={});var l=function(){c=!1===u.leading?0:fr(),o=null,f=t.apply(i,a),o||(i=a=null)},n=function(){var n=fr();c||!1!==u.leading||(c=n);var r=e-(n-c);return i=this,a=arguments,r<=0||e<r?(o&&(clearTimeout(o),o=null),c=n,f=t.apply(i,a),o||(i=a=null)):o||!1===u.trailing||(o=setTimeout(l,r)),f};return n.cancel=function(){clearTimeout(o),c=0,o=i=a=null},n},debounce:function(t,e,u){var o,i,a=function(n,r){o=null,r&&(i=t.apply(n,r))},n=j(function(n){if(o&&clearTimeout(o),u){var r=!o;o=setTimeout(a,e),r&&(i=t.apply(this,n))}else o=yn(a,e,this,n);return i});return n.cancel=function(){clearTimeout(o),o=null},n},wrap:function(n,r){return hn(r,n)},negate:mn,compose:function(){var t=arguments,e=t.length-1;return function(){for(var n=e,r=t[e].apply(this,arguments);n--;)r=t[n].call(this,r);return r}},after:function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},before:bn,once:jn,keys:Sn,allKeys:An,values:On,mapObject:function(n,r,t){r=b(r,t);for(var e=Sn(n),u=e.length,o={},i=0;i<u;i++){var a=e[i];o[a]=r(n[a],a,n)}return o},pairs:function(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},invert:Mn,functions:En,methods:En,extend:kn,extendOwn:In,assign:In,findKey:Tn,pick:Rn,omit:Fn,defaults:qn,create:function(n,r){var t=_(n);return r&&In(t,r),t},clone:Dn,tap:function(n,r){return r(n),n},isMatch:Wn,isEqual:function(n,r){return zn(n,r)},isEmpty:function(n){return null==n||(M(n)&&(Kn(n)||Jn(n)||Vn(n))?0===n.length:0===Sn(n).length)},isElement:function(n){return!(!n||1!==n.nodeType)},isArray:Kn,isObject:Ln,isArguments:Vn,isFunction:Cn,isString:Jn,isNumber:Un,isDate:$n,isRegExp:Gn,isError:Hn,isSymbol:Qn,isMap:Xn,isWeakMap:Yn,isSet:Zn,isWeakSet:nr,isFinite:function(n){return!Qn(n)&&l(n)&&!c(parseFloat(n))},isNaN:tr,isBoolean:er,isNull:function(n){return null===n},isUndefined:function(n){return void 0===n},has:function(n,r){if(!Kn(r))return x(n,r);for(var t=r.length,e=0;e<t;e++){var u=r[e];if(null==n||!o.call(n,u))return!1;n=n[u]}return!!t},identity:ur,constant:function(n){return function(){return n}},noop:function(){},property:or,propertyOf:function(r){return null==r?function(){}:function(n){return Kn(n)?S(r,n):r[n]}},matcher:ir,matches:ir,times:function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},random:ar,now:fr,escape:sr,unescape:vr,result:function(n,r,t){Kn(r)||(r=[r]);var e=r.length;if(!e)return Cn(t)?t.call(n):t;for(var u=0;u<e;u++){var o=null==n?void 0:n[r[u]];void 0===o&&(o=t,u=e),n=Cn(o)?o.call(n):o}return n},uniqueId:function(n){var r=++hr+\"\";return n?n+r:r},templateSettings:gr,template:function(o,n,r){!n&&r&&(n=r),n=qn({},n,h.templateSettings);var t,e=RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";o.replace(e,function(n,r,t,e,u){return a+=o.slice(i,u).replace(mr,br),i=u+n.length,r?a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\":t?a+=\"'+\\n((__t=(\"+t+\"))==null?'':__t)+\\n'\":e&&(a+=\"';\\n\"+e+\"\\n__p+='\"),n}),a+=\"';\\n\",n.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{t=new Function(n.variable||\"obj\",\"_\",a)}catch(n){throw n.source=a,n}var u=function(n){return t.call(this,n,h)},f=n.variable||\"obj\";return u.source=\"function(\"+f+\"){\\n\"+a+\"}\",u},chain:function(n){var r=h(n);return r._chain=!0,r},mixin:_r});return wr._=wr});", "message": "RegExp() called with a `r` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "r", "end": {"col": 10172, "line": 6, "offset": 10622}, "start": {"col": 10171, "line": 6, "offset": 10621}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10235, "line": 6, "offset": 10685}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 10260, "line": 6, "offset": 10710}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "r", "location": {"end": {"col": 10172, "line": 6, "offset": 10622}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10171, "line": 6, "offset": 10621}}}, {"content": "n", "location": {"end": {"col": 10206, "line": 6, "offset": 10656}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10205, "line": 6, "offset": 10655}}}], "taint_sink": ["CliLoc", [{"end": {"col": 10260, "line": 6, "offset": 10710}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10247, "line": 6, "offset": 10697}}, "RegExp(n,\"g\")"]], "taint_source": ["CliLoc", [{"end": {"col": 10172, "line": 6, "offset": 10622}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10171, "line": 6, "offset": 10621}}, "r"]]}, "engine_kind": "OSS", "fingerprint": "b1d9cf897328051c2d525d394902bc47c467e62c8c335b578ef6464eaca0a158873bc752860feeab3f17d3f142015a52bb6e5f5be90762deaf4858bb31bbef07_1", "is_ignored": false, "lines": "var n=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||Function(\"return this\")()||{},e=Array.prototype,i=Object.prototype,p=\"undefined\"!=typeof Symbol?Symbol.prototype:null,u=e.push,f=e.slice,s=i.toString,o=i.hasOwnProperty,r=Array.isArray,a=Object.keys,t=Object.create,c=n.isNaN,l=n.isFinite,v=function(){};function h(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)}var g=h.VERSION=\"1.10.2\";function y(u,o,n){if(void 0===o)return u;switch(null==n?3:n){case 1:return function(n){return u.call(o,n)};case 3:return function(n,r,t){return u.call(o,n,r,t)};case 4:return function(n,r,t,e){return u.call(o,n,r,t,e)}}return function(){return u.apply(o,arguments)}}function d(n,r,t){return null==n?ur:Cn(n)?y(n,r,t):Ln(n)&&!Kn(n)?ir(n):or(n)}function m(n,r){return d(n,r,1/0)}function b(n,r,t){return h.iteratee!==m?h.iteratee(n,r):d(n,r,t)}function j(u,o){return o=null==o?u.length-1:+o,function(){for(var n=Math.max(arguments.length-o,0),r=Array(n),t=0;t<n;t++)r[t]=arguments[t+o];switch(o){case 0:return u.call(this,r);case 1:return u.call(this,arguments[0],r);case 2:return u.call(this,arguments[0],arguments[1],r)}var e=Array(o+1);for(t=0;t<o;t++)e[t]=arguments[t];return e[o]=r,u.apply(this,e)}}function _(n){if(!Ln(n))return{};if(t)return t(n);v.prototype=n;var r=new v;return v.prototype=null,r}function w(r){return function(n){return null==n?void 0:n[r]}}function x(n,r){return null!=n&&o.call(n,r)}function S(n,r){for(var t=r.length,e=0;e<t;e++){if(null==n)return;n=n[r[e]]}return t?n:void 0}h.iteratee=m;var A=Math.pow(2,53)-1,O=w(\"length\");function M(n){var r=O(n);return\"number\"==typeof r&&0<=r&&r<=A}function E(n,r,t){var e,u;if(r=y(r,t),M(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var o=Sn(n);for(e=0,u=o.length;e<u;e++)r(n[o[e]],o[e],n)}return n}function N(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=Array(u),i=0;i<u;i++){var a=e?e[i]:i;o[i]=r(n[a],a,n)}return o}function k(f){return function(n,r,t,e){var u=3<=arguments.length;return function(n,r,t,e){var u=!M(n)&&Sn(n),o=(u||n).length,i=0<f?0:o-1;for(e||(t=n[u?u[i]:i],i+=f);0<=i&&i<o;i+=f){var a=u?u[i]:i;t=r(t,n[a],a,n)}return t}(n,y(r,e,4),t,u)}}var I=k(1),T=k(-1);function B(n,r,t){var e=(M(n)?on:Tn)(n,r,t);if(void 0!==e&&-1!==e)return n[e]}function R(n,e,r){var u=[];return e=b(e,r),E(n,function(n,r,t){e(n,r,t)&&u.push(n)}),u}function F(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(!r(n[i],i,n))return!1}return!0}function q(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(r(n[i],i,n))return!0}return!1}function D(n,r,t,e){return M(n)||(n=On(n)),(\"number\"!=typeof t||e)&&(t=0),0<=ln(n,r,t)}var W=j(function(n,t,e){var u,o;return Cn(t)?o=t:Kn(t)&&(u=t.slice(0,-1),t=t[t.length-1]),N(n,function(n){var r=o;if(!r){if(u&&u.length&&(n=S(n,u)),null==n)return;r=n[t]}return null==r?r:r.apply(n,e)})});function z(n,r){return N(n,or(r))}function P(n,e,r){var t,u,o=-1/0,i=-1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&o<t&&(o=t);else e=b(e,r),E(n,function(n,r,t){u=e(n,r,t),(i<u||u===-1/0&&o===-1/0)&&(o=n,i=u)});return o}function K(n,r,t){if(null==r||t)return M(n)||(n=On(n)),n[ar(n.length-1)];var e=M(n)?Dn(n):On(n),u=O(e);r=Math.max(Math.min(r,u),0);for(var o=u-1,i=0;i<r;i++){var a=ar(i,o),f=e[i];e[i]=e[a],e[a]=f}return e.slice(0,r)}function L(i,r){return function(e,u,n){var o=r?[[],[]]:{};return u=b(u,n),E(e,function(n,r){var t=u(n,r,e);i(o,n,t)}),o}}var V=L(function(n,r,t){x(n,t)?n[t].push(r):n[t]=[r]}),C=L(function(n,r,t){n[t]=r}),J=L(function(n,r,t){x(n,t)?n[t]++:n[t]=1}),U=/[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;var $=L(function(n,r,t){n[t?0:1].push(r)},!0);function G(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[0]:H(n,n.length-r)}function H(n,r,t){return f.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))}function Q(n,r,t){return f.call(n,null==r||t?1:r)}function X(n,r,t,e){for(var u=(e=e||[]).length,o=0,i=O(n);o<i;o++){var a=n[o];if(M(a)&&(Kn(a)||Vn(a)))if(r)for(var f=0,c=a.length;f<c;)e[u++]=a[f++];else X(a,r,t,e),u=e.length;else t||(e[u++]=a)}return e}var Y=j(function(n,r){return rn(n,r)});function Z(n,r,t,e){er(r)||(e=t,t=r,r=!1),null!=t&&(t=b(t,e));for(var u=[],o=[],i=0,a=O(n);i<a;i++){var f=n[i],c=t?t(f,i,n):f;r&&!t?(i&&o===c||u.push(f),o=c):t?D(o,c)||(o.push(c),u.push(f)):D(u,f)||u.push(f)}return u}var nn=j(function(n){return Z(X(n,!0,!0))});var rn=j(function(n,r){return r=X(r,!0,!0),R(n,function(n){return!D(r,n)})});function tn(n){for(var r=n&&P(n,O).length||0,t=Array(r),e=0;e<r;e++)t[e]=z(n,e);return t}var en=j(tn);function un(o){return function(n,r,t){r=b(r,t);for(var e=O(n),u=0<o?0:e-1;0<=u&&u<e;u+=o)if(r(n[u],u,n))return u;return-1}}var on=un(1),an=un(-1);function fn(n,r,t,e){for(var u=(t=b(t,e,1))(r),o=0,i=O(n);o<i;){var a=Math.floor((o+i)/2);t(n[a])<u?o=a+1:i=a}return o}function cn(o,i,a){return function(n,r,t){var e=0,u=O(n);if(\"number\"==typeof t)0<o?e=0<=t?t:Math.max(t+u,e):u=0<=t?Math.min(t+1,u):t+u+1;else if(a&&t&&u)return n[t=a(n,r)]===r?t:-1;if(r!=r)return 0<=(t=i(f.call(n,e,u),tr))?t+e:-1;for(t=0<o?e:u-1;0<=t&&t<u;t+=o)if(n[t]===r)return t;return-1}}var ln=cn(1,on,fn),pn=cn(-1,an);function sn(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var o=_(n.prototype),i=n.apply(o,u);return Ln(i)?i:o}var vn=j(function(r,t,e){if(!Cn(r))throw new TypeError(\"Bind must be called on a function\");var u=j(function(n){return sn(r,u,t,this,e.concat(n))});return u}),hn=j(function(u,o){var i=hn.placeholder,a=function(){for(var n=0,r=o.length,t=Array(r),e=0;e<r;e++)t[e]=o[e]===i?arguments[n++]:o[e];for(;n<arguments.length;)t.push(arguments[n++]);return sn(u,a,this,this,t)};return a});hn.placeholder=h;var gn=j(function(n,r){var t=(r=X(r,!1,!1)).length;if(t<1)throw new Error(\"bindAll must be passed function names\");for(;t--;){var e=r[t];n[e]=vn(n[e],n)}});var yn=j(function(n,r,t){return setTimeout(function(){return n.apply(null,t)},r)}),dn=hn(yn,h,1);function mn(n){return function(){return!n.apply(this,arguments)}}function bn(n,r){var t;return function(){return 0<--n&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}}var jn=hn(bn,2),_n=!{toString:null}.propertyIsEnumerable(\"toString\"),wn=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"];function xn(n,r){var t=wn.length,e=n.constructor,u=Cn(e)&&e.prototype||i,o=\"constructor\";for(x(n,o)&&!D(r,o)&&r.push(o);t--;)(o=wn[t])in n&&n[o]!==u[o]&&!D(r,o)&&r.push(o)}function Sn(n){if(!Ln(n))return[];if(a)return a(n);var r=[];for(var t in n)x(n,t)&&r.push(t);return _n&&xn(n,r),r}function An(n){if(!Ln(n))return[];var r=[];for(var t in n)r.push(t);return _n&&xn(n,r),r}function On(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e}function Mn(n){for(var r={},t=Sn(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r}function En(n){var r=[];for(var t in n)Cn(n[t])&&r.push(t);return r.sort()}function Nn(f,c){return function(n){var r=arguments.length;if(c&&(n=Object(n)),r<2||null==n)return n;for(var t=1;t<r;t++)for(var e=arguments[t],u=f(e),o=u.length,i=0;i<o;i++){var a=u[i];c&&void 0!==n[a]||(n[a]=e[a])}return n}}var kn=Nn(An),In=Nn(Sn);function Tn(n,r,t){r=b(r,t);for(var e,u=Sn(n),o=0,i=u.length;o<i;o++)if(r(n[e=u[o]],e,n))return e}function Bn(n,r,t){return r in t}var Rn=j(function(n,r){var t={},e=r[0];if(null==n)return t;Cn(e)?(1<r.length&&(e=y(e,r[1])),r=An(n)):(e=Bn,r=X(r,!1,!1),n=Object(n));for(var u=0,o=r.length;u<o;u++){var i=r[u],a=n[i];e(a,i,n)&&(t[i]=a)}return t}),Fn=j(function(n,t){var r,e=t[0];return Cn(e)?(e=mn(e),1<t.length&&(r=t[1])):(t=N(X(t,!1,!1),String),e=function(n,r){return!D(t,r)}),Rn(n,e,r)}),qn=Nn(An,!0);function Dn(n){return Ln(n)?Kn(n)?n.slice():kn({},n):n}function Wn(n,r){var t=Sn(r),e=t.length;if(null==n)return!e;for(var u=Object(n),o=0;o<e;o++){var i=t[o];if(r[i]!==u[i]||!(i in u))return!1}return!0}function zn(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return!1;if(n!=n)return r!=r;var u=typeof n;return(\"function\"===u||\"object\"===u||\"object\"==typeof r)&&function(n,r,t,e){n instanceof h&&(n=n._wrapped);r instanceof h&&(r=r._wrapped);var u=s.call(n);if(u!==s.call(r))return!1;switch(u){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+r;case\"[object Number]\":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case\"[object Date]\":case\"[object Boolean]\":return+n==+r;case\"[object Symbol]\":return p.valueOf.call(n)===p.valueOf.call(r)}var o=\"[object Array]\"===u;if(!o){if(\"object\"!=typeof n||\"object\"!=typeof r)return!1;var i=n.constructor,a=r.constructor;if(i!==a&&!(Cn(i)&&i instanceof i&&Cn(a)&&a instanceof a)&&\"constructor\"in n&&\"constructor\"in r)return!1}e=e||[];var f=(t=t||[]).length;for(;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),o){if((f=n.length)!==r.length)return!1;for(;f--;)if(!zn(n[f],r[f],t,e))return!1}else{var c,l=Sn(n);if(f=l.length,Sn(r).length!==f)return!1;for(;f--;)if(c=l[f],!x(r,c)||!zn(n[c],r[c],t,e))return!1}return t.pop(),e.pop(),!0}(n,r,t,e)}function Pn(r){return function(n){return s.call(n)===\"[object \"+r+\"]\"}}var Kn=r||Pn(\"Array\");function Ln(n){var r=typeof n;return\"function\"===r||\"object\"===r&&!!n}var Vn=Pn(\"Arguments\"),Cn=Pn(\"Function\"),Jn=Pn(\"String\"),Un=Pn(\"Number\"),$n=Pn(\"Date\"),Gn=Pn(\"RegExp\"),Hn=Pn(\"Error\"),Qn=Pn(\"Symbol\"),Xn=Pn(\"Map\"),Yn=Pn(\"WeakMap\"),Zn=Pn(\"Set\"),nr=Pn(\"WeakSet\");!function(){Vn(arguments)||(Vn=function(n){return x(n,\"callee\")})}();var rr=n.document&&n.document.childNodes;function tr(n){return Un(n)&&c(n)}function er(n){return!0===n||!1===n||\"[object Boolean]\"===s.call(n)}function ur(n){return n}function or(r){return Kn(r)?function(n){return S(n,r)}:w(r)}function ir(r){return r=In({},r),function(n){return Wn(n,r)}}function ar(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))}\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&\"function\"!=typeof rr&&(Cn=function(n){return\"function\"==typeof n||!1});var fr=Date.now||function(){return(new Date).getTime()},cr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},lr=Mn(cr);function pr(r){var t=function(n){return r[n]},n=\"(?:\"+Sn(r).join(\"|\")+\")\",e=RegExp(n),u=RegExp(n,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,t):n}}var sr=pr(cr),vr=pr(lr);var hr=0;var gr=h.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g},yr=/(.)^/,dr={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},mr=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,br=function(n){return\"\\\\\"+dr[n]};function jr(n,r){return n._chain?h(r).chain():r}function _r(t){return E(En(t),function(n){var r=h[n]=t[n];h.prototype[n]=function(){var n=[this._wrapped];return u.apply(n,arguments),jr(this,r.apply(h,n))}}),h}E([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(r){var t=e[r];h.prototype[r]=function(){var n=this._wrapped;return t.apply(n,arguments),\"shift\"!==r&&\"splice\"!==r||0!==n.length||delete n[0],jr(this,n)}}),E([\"concat\",\"join\",\"slice\"],function(n){var r=e[n];h.prototype[n]=function(){return jr(this,r.apply(this._wrapped,arguments))}}),h.prototype.valueOf=h.prototype.toJSON=h.prototype.value=function(){return this._wrapped},h.prototype.toString=function(){return String(this._wrapped)};var wr=_r({default:h,VERSION:g,iteratee:m,restArguments:j,each:E,forEach:E,map:N,collect:N,reduce:I,foldl:I,inject:I,reduceRight:T,foldr:T,find:B,detect:B,filter:R,select:R,reject:function(n,r,t){return R(n,mn(b(r)),t)},every:F,all:F,some:q,any:q,contains:D,includes:D,include:D,invoke:W,pluck:z,where:function(n,r){return R(n,ir(r))},findWhere:function(n,r){return B(n,ir(r))},max:P,min:function(n,e,r){var t,u,o=1/0,i=1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&t<o&&(o=t);else e=b(e,r),E(n,function(n,r,t){((u=e(n,r,t))<i||u===1/0&&o===1/0)&&(o=n,i=u)});return o},shuffle:function(n){return K(n,1/0)},sample:K,sortBy:function(n,e,r){var u=0;return e=b(e,r),z(N(n,function(n,r,t){return{value:n,index:u++,criteria:e(n,r,t)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(e<t||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),\"value\")},groupBy:V,indexBy:C,countBy:J,toArray:function(n){return n?Kn(n)?f.call(n):Jn(n)?n.match(U):M(n)?N(n,ur):On(n):[]},size:function(n){return null==n?0:M(n)?n.length:Sn(n).length},partition:$,first:G,head:G,take:G,initial:H,last:function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[n.length-1]:Q(n,Math.max(0,n.length-r))},rest:Q,tail:Q,drop:Q,compact:function(n){return R(n,Boolean)},flatten:function(n,r){return X(n,r,!1)},without:Y,uniq:Z,unique:Z,union:nn,intersection:function(n){for(var r=[],t=arguments.length,e=0,u=O(n);e<u;e++){var o=n[e];if(!D(r,o)){var i;for(i=1;i<t&&D(arguments[i],o);i++);i===t&&r.push(o)}}return r},difference:rn,unzip:tn,zip:en,object:function(n,r){for(var t={},e=0,u=O(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t},findIndex:on,findLastIndex:an,sortedIndex:fn,indexOf:ln,lastIndexOf:pn,range:function(n,r,t){null==r&&(r=n||0,n=0),t||(t=r<n?-1:1);for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),o=0;o<e;o++,n+=t)u[o]=n;return u},chunk:function(n,r){if(null==r||r<1)return[];for(var t=[],e=0,u=n.length;e<u;)t.push(f.call(n,e,e+=r));return t},bind:vn,partial:hn,bindAll:gn,memoize:function(e,u){var o=function(n){var r=o.cache,t=\"\"+(u?u.apply(this,arguments):n);return x(r,t)||(r[t]=e.apply(this,arguments)),r[t]};return o.cache={},o},delay:yn,defer:dn,throttle:function(t,e,u){var o,i,a,f,c=0;u||(u={});var l=function(){c=!1===u.leading?0:fr(),o=null,f=t.apply(i,a),o||(i=a=null)},n=function(){var n=fr();c||!1!==u.leading||(c=n);var r=e-(n-c);return i=this,a=arguments,r<=0||e<r?(o&&(clearTimeout(o),o=null),c=n,f=t.apply(i,a),o||(i=a=null)):o||!1===u.trailing||(o=setTimeout(l,r)),f};return n.cancel=function(){clearTimeout(o),c=0,o=i=a=null},n},debounce:function(t,e,u){var o,i,a=function(n,r){o=null,r&&(i=t.apply(n,r))},n=j(function(n){if(o&&clearTimeout(o),u){var r=!o;o=setTimeout(a,e),r&&(i=t.apply(this,n))}else o=yn(a,e,this,n);return i});return n.cancel=function(){clearTimeout(o),o=null},n},wrap:function(n,r){return hn(r,n)},negate:mn,compose:function(){var t=arguments,e=t.length-1;return function(){for(var n=e,r=t[e].apply(this,arguments);n--;)r=t[n].call(this,r);return r}},after:function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},before:bn,once:jn,keys:Sn,allKeys:An,values:On,mapObject:function(n,r,t){r=b(r,t);for(var e=Sn(n),u=e.length,o={},i=0;i<u;i++){var a=e[i];o[a]=r(n[a],a,n)}return o},pairs:function(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},invert:Mn,functions:En,methods:En,extend:kn,extendOwn:In,assign:In,findKey:Tn,pick:Rn,omit:Fn,defaults:qn,create:function(n,r){var t=_(n);return r&&In(t,r),t},clone:Dn,tap:function(n,r){return r(n),n},isMatch:Wn,isEqual:function(n,r){return zn(n,r)},isEmpty:function(n){return null==n||(M(n)&&(Kn(n)||Jn(n)||Vn(n))?0===n.length:0===Sn(n).length)},isElement:function(n){return!(!n||1!==n.nodeType)},isArray:Kn,isObject:Ln,isArguments:Vn,isFunction:Cn,isString:Jn,isNumber:Un,isDate:$n,isRegExp:Gn,isError:Hn,isSymbol:Qn,isMap:Xn,isWeakMap:Yn,isSet:Zn,isWeakSet:nr,isFinite:function(n){return!Qn(n)&&l(n)&&!c(parseFloat(n))},isNaN:tr,isBoolean:er,isNull:function(n){return null===n},isUndefined:function(n){return void 0===n},has:function(n,r){if(!Kn(r))return x(n,r);for(var t=r.length,e=0;e<t;e++){var u=r[e];if(null==n||!o.call(n,u))return!1;n=n[u]}return!!t},identity:ur,constant:function(n){return function(){return n}},noop:function(){},property:or,propertyOf:function(r){return null==r?function(){}:function(n){return Kn(n)?S(r,n):r[n]}},matcher:ir,matches:ir,times:function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},random:ar,now:fr,escape:sr,unescape:vr,result:function(n,r,t){Kn(r)||(r=[r]);var e=r.length;if(!e)return Cn(t)?t.call(n):t;for(var u=0;u<e;u++){var o=null==n?void 0:n[r[u]];void 0===o&&(o=t,u=e),n=Cn(o)?o.call(n):o}return n},uniqueId:function(n){var r=++hr+\"\";return n?n+r:r},templateSettings:gr,template:function(o,n,r){!n&&r&&(n=r),n=qn({},n,h.templateSettings);var t,e=RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";o.replace(e,function(n,r,t,e,u){return a+=o.slice(i,u).replace(mr,br),i=u+n.length,r?a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\":t?a+=\"'+\\n((__t=(\"+t+\"))==null?'':__t)+\\n'\":e&&(a+=\"';\\n\"+e+\"\\n__p+='\"),n}),a+=\"';\\n\",n.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{t=new Function(n.variable||\"obj\",\"_\",a)}catch(n){throw n.source=a,n}var u=function(n){return t.call(this,n,h)},f=n.variable||\"obj\";return u.source=\"function(\"+f+\"){\\n\"+a+\"}\",u},chain:function(n){var r=h(n);return r._chain=!0,r},mixin:_r});return wr._=wr});", "message": "RegExp() called with a `r` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "r", "end": {"col": 10172, "line": 6, "offset": 10622}, "start": {"col": 10171, "line": 6, "offset": 10621}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 10247, "line": 6, "offset": 10697}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 15651, "line": 6, "offset": 16101}, "extra": {"engine_kind": "OSS", "fingerprint": "19abd9024f1c8d23b7d3dd86dd901e85c00547ade394d9104574d0beaa3572acb2bead45fa10cbc293b1624d4ce400404bc8e98a0e5aab94c94f98bb1d60f048_0", "is_ignored": false, "lines": "var n=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||Function(\"return this\")()||{},e=Array.prototype,i=Object.prototype,p=\"undefined\"!=typeof Symbol?Symbol.prototype:null,u=e.push,f=e.slice,s=i.toString,o=i.hasOwnProperty,r=Array.isArray,a=Object.keys,t=Object.create,c=n.isNaN,l=n.isFinite,v=function(){};function h(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)}var g=h.VERSION=\"1.10.2\";function y(u,o,n){if(void 0===o)return u;switch(null==n?3:n){case 1:return function(n){return u.call(o,n)};case 3:return function(n,r,t){return u.call(o,n,r,t)};case 4:return function(n,r,t,e){return u.call(o,n,r,t,e)}}return function(){return u.apply(o,arguments)}}function d(n,r,t){return null==n?ur:Cn(n)?y(n,r,t):Ln(n)&&!Kn(n)?ir(n):or(n)}function m(n,r){return d(n,r,1/0)}function b(n,r,t){return h.iteratee!==m?h.iteratee(n,r):d(n,r,t)}function j(u,o){return o=null==o?u.length-1:+o,function(){for(var n=Math.max(arguments.length-o,0),r=Array(n),t=0;t<n;t++)r[t]=arguments[t+o];switch(o){case 0:return u.call(this,r);case 1:return u.call(this,arguments[0],r);case 2:return u.call(this,arguments[0],arguments[1],r)}var e=Array(o+1);for(t=0;t<o;t++)e[t]=arguments[t];return e[o]=r,u.apply(this,e)}}function _(n){if(!Ln(n))return{};if(t)return t(n);v.prototype=n;var r=new v;return v.prototype=null,r}function w(r){return function(n){return null==n?void 0:n[r]}}function x(n,r){return null!=n&&o.call(n,r)}function S(n,r){for(var t=r.length,e=0;e<t;e++){if(null==n)return;n=n[r[e]]}return t?n:void 0}h.iteratee=m;var A=Math.pow(2,53)-1,O=w(\"length\");function M(n){var r=O(n);return\"number\"==typeof r&&0<=r&&r<=A}function E(n,r,t){var e,u;if(r=y(r,t),M(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var o=Sn(n);for(e=0,u=o.length;e<u;e++)r(n[o[e]],o[e],n)}return n}function N(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=Array(u),i=0;i<u;i++){var a=e?e[i]:i;o[i]=r(n[a],a,n)}return o}function k(f){return function(n,r,t,e){var u=3<=arguments.length;return function(n,r,t,e){var u=!M(n)&&Sn(n),o=(u||n).length,i=0<f?0:o-1;for(e||(t=n[u?u[i]:i],i+=f);0<=i&&i<o;i+=f){var a=u?u[i]:i;t=r(t,n[a],a,n)}return t}(n,y(r,e,4),t,u)}}var I=k(1),T=k(-1);function B(n,r,t){var e=(M(n)?on:Tn)(n,r,t);if(void 0!==e&&-1!==e)return n[e]}function R(n,e,r){var u=[];return e=b(e,r),E(n,function(n,r,t){e(n,r,t)&&u.push(n)}),u}function F(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(!r(n[i],i,n))return!1}return!0}function q(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(r(n[i],i,n))return!0}return!1}function D(n,r,t,e){return M(n)||(n=On(n)),(\"number\"!=typeof t||e)&&(t=0),0<=ln(n,r,t)}var W=j(function(n,t,e){var u,o;return Cn(t)?o=t:Kn(t)&&(u=t.slice(0,-1),t=t[t.length-1]),N(n,function(n){var r=o;if(!r){if(u&&u.length&&(n=S(n,u)),null==n)return;r=n[t]}return null==r?r:r.apply(n,e)})});function z(n,r){return N(n,or(r))}function P(n,e,r){var t,u,o=-1/0,i=-1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&o<t&&(o=t);else e=b(e,r),E(n,function(n,r,t){u=e(n,r,t),(i<u||u===-1/0&&o===-1/0)&&(o=n,i=u)});return o}function K(n,r,t){if(null==r||t)return M(n)||(n=On(n)),n[ar(n.length-1)];var e=M(n)?Dn(n):On(n),u=O(e);r=Math.max(Math.min(r,u),0);for(var o=u-1,i=0;i<r;i++){var a=ar(i,o),f=e[i];e[i]=e[a],e[a]=f}return e.slice(0,r)}function L(i,r){return function(e,u,n){var o=r?[[],[]]:{};return u=b(u,n),E(e,function(n,r){var t=u(n,r,e);i(o,n,t)}),o}}var V=L(function(n,r,t){x(n,t)?n[t].push(r):n[t]=[r]}),C=L(function(n,r,t){n[t]=r}),J=L(function(n,r,t){x(n,t)?n[t]++:n[t]=1}),U=/[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;var $=L(function(n,r,t){n[t?0:1].push(r)},!0);function G(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[0]:H(n,n.length-r)}function H(n,r,t){return f.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))}function Q(n,r,t){return f.call(n,null==r||t?1:r)}function X(n,r,t,e){for(var u=(e=e||[]).length,o=0,i=O(n);o<i;o++){var a=n[o];if(M(a)&&(Kn(a)||Vn(a)))if(r)for(var f=0,c=a.length;f<c;)e[u++]=a[f++];else X(a,r,t,e),u=e.length;else t||(e[u++]=a)}return e}var Y=j(function(n,r){return rn(n,r)});function Z(n,r,t,e){er(r)||(e=t,t=r,r=!1),null!=t&&(t=b(t,e));for(var u=[],o=[],i=0,a=O(n);i<a;i++){var f=n[i],c=t?t(f,i,n):f;r&&!t?(i&&o===c||u.push(f),o=c):t?D(o,c)||(o.push(c),u.push(f)):D(u,f)||u.push(f)}return u}var nn=j(function(n){return Z(X(n,!0,!0))});var rn=j(function(n,r){return r=X(r,!0,!0),R(n,function(n){return!D(r,n)})});function tn(n){for(var r=n&&P(n,O).length||0,t=Array(r),e=0;e<r;e++)t[e]=z(n,e);return t}var en=j(tn);function un(o){return function(n,r,t){r=b(r,t);for(var e=O(n),u=0<o?0:e-1;0<=u&&u<e;u+=o)if(r(n[u],u,n))return u;return-1}}var on=un(1),an=un(-1);function fn(n,r,t,e){for(var u=(t=b(t,e,1))(r),o=0,i=O(n);o<i;){var a=Math.floor((o+i)/2);t(n[a])<u?o=a+1:i=a}return o}function cn(o,i,a){return function(n,r,t){var e=0,u=O(n);if(\"number\"==typeof t)0<o?e=0<=t?t:Math.max(t+u,e):u=0<=t?Math.min(t+1,u):t+u+1;else if(a&&t&&u)return n[t=a(n,r)]===r?t:-1;if(r!=r)return 0<=(t=i(f.call(n,e,u),tr))?t+e:-1;for(t=0<o?e:u-1;0<=t&&t<u;t+=o)if(n[t]===r)return t;return-1}}var ln=cn(1,on,fn),pn=cn(-1,an);function sn(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var o=_(n.prototype),i=n.apply(o,u);return Ln(i)?i:o}var vn=j(function(r,t,e){if(!Cn(r))throw new TypeError(\"Bind must be called on a function\");var u=j(function(n){return sn(r,u,t,this,e.concat(n))});return u}),hn=j(function(u,o){var i=hn.placeholder,a=function(){for(var n=0,r=o.length,t=Array(r),e=0;e<r;e++)t[e]=o[e]===i?arguments[n++]:o[e];for(;n<arguments.length;)t.push(arguments[n++]);return sn(u,a,this,this,t)};return a});hn.placeholder=h;var gn=j(function(n,r){var t=(r=X(r,!1,!1)).length;if(t<1)throw new Error(\"bindAll must be passed function names\");for(;t--;){var e=r[t];n[e]=vn(n[e],n)}});var yn=j(function(n,r,t){return setTimeout(function(){return n.apply(null,t)},r)}),dn=hn(yn,h,1);function mn(n){return function(){return!n.apply(this,arguments)}}function bn(n,r){var t;return function(){return 0<--n&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}}var jn=hn(bn,2),_n=!{toString:null}.propertyIsEnumerable(\"toString\"),wn=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"];function xn(n,r){var t=wn.length,e=n.constructor,u=Cn(e)&&e.prototype||i,o=\"constructor\";for(x(n,o)&&!D(r,o)&&r.push(o);t--;)(o=wn[t])in n&&n[o]!==u[o]&&!D(r,o)&&r.push(o)}function Sn(n){if(!Ln(n))return[];if(a)return a(n);var r=[];for(var t in n)x(n,t)&&r.push(t);return _n&&xn(n,r),r}function An(n){if(!Ln(n))return[];var r=[];for(var t in n)r.push(t);return _n&&xn(n,r),r}function On(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e}function Mn(n){for(var r={},t=Sn(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r}function En(n){var r=[];for(var t in n)Cn(n[t])&&r.push(t);return r.sort()}function Nn(f,c){return function(n){var r=arguments.length;if(c&&(n=Object(n)),r<2||null==n)return n;for(var t=1;t<r;t++)for(var e=arguments[t],u=f(e),o=u.length,i=0;i<o;i++){var a=u[i];c&&void 0!==n[a]||(n[a]=e[a])}return n}}var kn=Nn(An),In=Nn(Sn);function Tn(n,r,t){r=b(r,t);for(var e,u=Sn(n),o=0,i=u.length;o<i;o++)if(r(n[e=u[o]],e,n))return e}function Bn(n,r,t){return r in t}var Rn=j(function(n,r){var t={},e=r[0];if(null==n)return t;Cn(e)?(1<r.length&&(e=y(e,r[1])),r=An(n)):(e=Bn,r=X(r,!1,!1),n=Object(n));for(var u=0,o=r.length;u<o;u++){var i=r[u],a=n[i];e(a,i,n)&&(t[i]=a)}return t}),Fn=j(function(n,t){var r,e=t[0];return Cn(e)?(e=mn(e),1<t.length&&(r=t[1])):(t=N(X(t,!1,!1),String),e=function(n,r){return!D(t,r)}),Rn(n,e,r)}),qn=Nn(An,!0);function Dn(n){return Ln(n)?Kn(n)?n.slice():kn({},n):n}function Wn(n,r){var t=Sn(r),e=t.length;if(null==n)return!e;for(var u=Object(n),o=0;o<e;o++){var i=t[o];if(r[i]!==u[i]||!(i in u))return!1}return!0}function zn(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return!1;if(n!=n)return r!=r;var u=typeof n;return(\"function\"===u||\"object\"===u||\"object\"==typeof r)&&function(n,r,t,e){n instanceof h&&(n=n._wrapped);r instanceof h&&(r=r._wrapped);var u=s.call(n);if(u!==s.call(r))return!1;switch(u){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+r;case\"[object Number]\":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case\"[object Date]\":case\"[object Boolean]\":return+n==+r;case\"[object Symbol]\":return p.valueOf.call(n)===p.valueOf.call(r)}var o=\"[object Array]\"===u;if(!o){if(\"object\"!=typeof n||\"object\"!=typeof r)return!1;var i=n.constructor,a=r.constructor;if(i!==a&&!(Cn(i)&&i instanceof i&&Cn(a)&&a instanceof a)&&\"constructor\"in n&&\"constructor\"in r)return!1}e=e||[];var f=(t=t||[]).length;for(;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),o){if((f=n.length)!==r.length)return!1;for(;f--;)if(!zn(n[f],r[f],t,e))return!1}else{var c,l=Sn(n);if(f=l.length,Sn(r).length!==f)return!1;for(;f--;)if(c=l[f],!x(r,c)||!zn(n[c],r[c],t,e))return!1}return t.pop(),e.pop(),!0}(n,r,t,e)}function Pn(r){return function(n){return s.call(n)===\"[object \"+r+\"]\"}}var Kn=r||Pn(\"Array\");function Ln(n){var r=typeof n;return\"function\"===r||\"object\"===r&&!!n}var Vn=Pn(\"Arguments\"),Cn=Pn(\"Function\"),Jn=Pn(\"String\"),Un=Pn(\"Number\"),$n=Pn(\"Date\"),Gn=Pn(\"RegExp\"),Hn=Pn(\"Error\"),Qn=Pn(\"Symbol\"),Xn=Pn(\"Map\"),Yn=Pn(\"WeakMap\"),Zn=Pn(\"Set\"),nr=Pn(\"WeakSet\");!function(){Vn(arguments)||(Vn=function(n){return x(n,\"callee\")})}();var rr=n.document&&n.document.childNodes;function tr(n){return Un(n)&&c(n)}function er(n){return!0===n||!1===n||\"[object Boolean]\"===s.call(n)}function ur(n){return n}function or(r){return Kn(r)?function(n){return S(n,r)}:w(r)}function ir(r){return r=In({},r),function(n){return Wn(n,r)}}function ar(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))}\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&\"function\"!=typeof rr&&(Cn=function(n){return\"function\"==typeof n||!1});var fr=Date.now||function(){return(new Date).getTime()},cr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},lr=Mn(cr);function pr(r){var t=function(n){return r[n]},n=\"(?:\"+Sn(r).join(\"|\")+\")\",e=RegExp(n),u=RegExp(n,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,t):n}}var sr=pr(cr),vr=pr(lr);var hr=0;var gr=h.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g},yr=/(.)^/,dr={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},mr=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,br=function(n){return\"\\\\\"+dr[n]};function jr(n,r){return n._chain?h(r).chain():r}function _r(t){return E(En(t),function(n){var r=h[n]=t[n];h.prototype[n]=function(){var n=[this._wrapped];return u.apply(n,arguments),jr(this,r.apply(h,n))}}),h}E([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(r){var t=e[r];h.prototype[r]=function(){var n=this._wrapped;return t.apply(n,arguments),\"shift\"!==r&&\"splice\"!==r||0!==n.length||delete n[0],jr(this,n)}}),E([\"concat\",\"join\",\"slice\"],function(n){var r=e[n];h.prototype[n]=function(){return jr(this,r.apply(this._wrapped,arguments))}}),h.prototype.valueOf=h.prototype.toJSON=h.prototype.value=function(){return this._wrapped},h.prototype.toString=function(){return String(this._wrapped)};var wr=_r({default:h,VERSION:g,iteratee:m,restArguments:j,each:E,forEach:E,map:N,collect:N,reduce:I,foldl:I,inject:I,reduceRight:T,foldr:T,find:B,detect:B,filter:R,select:R,reject:function(n,r,t){return R(n,mn(b(r)),t)},every:F,all:F,some:q,any:q,contains:D,includes:D,include:D,invoke:W,pluck:z,where:function(n,r){return R(n,ir(r))},findWhere:function(n,r){return B(n,ir(r))},max:P,min:function(n,e,r){var t,u,o=1/0,i=1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&t<o&&(o=t);else e=b(e,r),E(n,function(n,r,t){((u=e(n,r,t))<i||u===1/0&&o===1/0)&&(o=n,i=u)});return o},shuffle:function(n){return K(n,1/0)},sample:K,sortBy:function(n,e,r){var u=0;return e=b(e,r),z(N(n,function(n,r,t){return{value:n,index:u++,criteria:e(n,r,t)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(e<t||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),\"value\")},groupBy:V,indexBy:C,countBy:J,toArray:function(n){return n?Kn(n)?f.call(n):Jn(n)?n.match(U):M(n)?N(n,ur):On(n):[]},size:function(n){return null==n?0:M(n)?n.length:Sn(n).length},partition:$,first:G,head:G,take:G,initial:H,last:function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[n.length-1]:Q(n,Math.max(0,n.length-r))},rest:Q,tail:Q,drop:Q,compact:function(n){return R(n,Boolean)},flatten:function(n,r){return X(n,r,!1)},without:Y,uniq:Z,unique:Z,union:nn,intersection:function(n){for(var r=[],t=arguments.length,e=0,u=O(n);e<u;e++){var o=n[e];if(!D(r,o)){var i;for(i=1;i<t&&D(arguments[i],o);i++);i===t&&r.push(o)}}return r},difference:rn,unzip:tn,zip:en,object:function(n,r){for(var t={},e=0,u=O(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t},findIndex:on,findLastIndex:an,sortedIndex:fn,indexOf:ln,lastIndexOf:pn,range:function(n,r,t){null==r&&(r=n||0,n=0),t||(t=r<n?-1:1);for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),o=0;o<e;o++,n+=t)u[o]=n;return u},chunk:function(n,r){if(null==r||r<1)return[];for(var t=[],e=0,u=n.length;e<u;)t.push(f.call(n,e,e+=r));return t},bind:vn,partial:hn,bindAll:gn,memoize:function(e,u){var o=function(n){var r=o.cache,t=\"\"+(u?u.apply(this,arguments):n);return x(r,t)||(r[t]=e.apply(this,arguments)),r[t]};return o.cache={},o},delay:yn,defer:dn,throttle:function(t,e,u){var o,i,a,f,c=0;u||(u={});var l=function(){c=!1===u.leading?0:fr(),o=null,f=t.apply(i,a),o||(i=a=null)},n=function(){var n=fr();c||!1!==u.leading||(c=n);var r=e-(n-c);return i=this,a=arguments,r<=0||e<r?(o&&(clearTimeout(o),o=null),c=n,f=t.apply(i,a),o||(i=a=null)):o||!1===u.trailing||(o=setTimeout(l,r)),f};return n.cancel=function(){clearTimeout(o),c=0,o=i=a=null},n},debounce:function(t,e,u){var o,i,a=function(n,r){o=null,r&&(i=t.apply(n,r))},n=j(function(n){if(o&&clearTimeout(o),u){var r=!o;o=setTimeout(a,e),r&&(i=t.apply(this,n))}else o=yn(a,e,this,n);return i});return n.cancel=function(){clearTimeout(o),o=null},n},wrap:function(n,r){return hn(r,n)},negate:mn,compose:function(){var t=arguments,e=t.length-1;return function(){for(var n=e,r=t[e].apply(this,arguments);n--;)r=t[n].call(this,r);return r}},after:function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},before:bn,once:jn,keys:Sn,allKeys:An,values:On,mapObject:function(n,r,t){r=b(r,t);for(var e=Sn(n),u=e.length,o={},i=0;i<u;i++){var a=e[i];o[a]=r(n[a],a,n)}return o},pairs:function(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},invert:Mn,functions:En,methods:En,extend:kn,extendOwn:In,assign:In,findKey:Tn,pick:Rn,omit:Fn,defaults:qn,create:function(n,r){var t=_(n);return r&&In(t,r),t},clone:Dn,tap:function(n,r){return r(n),n},isMatch:Wn,isEqual:function(n,r){return zn(n,r)},isEmpty:function(n){return null==n||(M(n)&&(Kn(n)||Jn(n)||Vn(n))?0===n.length:0===Sn(n).length)},isElement:function(n){return!(!n||1!==n.nodeType)},isArray:Kn,isObject:Ln,isArguments:Vn,isFunction:Cn,isString:Jn,isNumber:Un,isDate:$n,isRegExp:Gn,isError:Hn,isSymbol:Qn,isMap:Xn,isWeakMap:Yn,isSet:Zn,isWeakSet:nr,isFinite:function(n){return!Qn(n)&&l(n)&&!c(parseFloat(n))},isNaN:tr,isBoolean:er,isNull:function(n){return null===n},isUndefined:function(n){return void 0===n},has:function(n,r){if(!Kn(r))return x(n,r);for(var t=r.length,e=0;e<t;e++){var u=r[e];if(null==n||!o.call(n,u))return!1;n=n[u]}return!!t},identity:ur,constant:function(n){return function(){return n}},noop:function(){},property:or,propertyOf:function(r){return null==r?function(){}:function(n){return Kn(n)?S(r,n):r[n]}},matcher:ir,matches:ir,times:function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},random:ar,now:fr,escape:sr,unescape:vr,result:function(n,r,t){Kn(r)||(r=[r]);var e=r.length;if(!e)return Cn(t)?t.call(n):t;for(var u=0;u<e;u++){var o=null==n?void 0:n[r[u]];void 0===o&&(o=t,u=e),n=Cn(o)?o.call(n):o}return n},uniqueId:function(n){var r=++hr+\"\";return n?n+r:r},templateSettings:gr,template:function(o,n,r){!n&&r&&(n=r),n=qn({},n,h.templateSettings);var t,e=RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";o.replace(e,function(n,r,t,e,u){return a+=o.slice(i,u).replace(mr,br),i=u+n.length,r?a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\":t?a+=\"'+\\n((__t=(\"+t+\"))==null?'':__t)+\\n'\":e&&(a+=\"';\\n\"+e+\"\\n__p+='\"),n}),a+=\"';\\n\",n.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{t=new Function(n.variable||\"obj\",\"_\",a)}catch(n){throw n.source=a,n}var u=function(n){return t.call(this,n,h)},f=n.variable||\"obj\";return u.source=\"function(\"+f+\"){\\n\"+a+\"}\",u},chain:function(n){var r=h(n);return r._chain=!0,r},mixin:_r});return wr._=wr});", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13373, "rule_id": "QrUpbJ", "rv_id": 109925, "url": "https://semgrep.dev/playground/r/LjTqQbA/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "LjTqQbA"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"], "vulnerability_class": ["Mass Assignment"]}, "metavars": {"$A": {"abstract_content": "u", "end": {"col": 15650, "line": 6, "offset": 16100}, "propagated_value": {"svalue_abstract_content": "r[e]", "svalue_end": {"col": 15610, "line": 6, "offset": 16060}, "svalue_start": {"col": 15606, "line": 6, "offset": 16056}}, "start": {"col": 15649, "line": 6, "offset": 16099}}, "$SMTH": {"abstract_content": "n", "end": {"col": 15646, "line": 6, "offset": 16096}, "start": {"col": 15645, "line": 6, "offset": 16095}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 15645, "line": 6, "offset": 16095}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 16440, "line": 6, "offset": 16890}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "n", "location": {"end": {"col": 16284, "line": 6, "offset": 16734}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16283, "line": 6, "offset": 16733}}}], "taint_sink": ["CliLoc", [{"end": {"col": 16440, "line": 6, "offset": 16890}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16339, "line": 6, "offset": 16789}}, "RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join(\"|\")+\"|$\",\"g\")"]], "taint_source": ["CliLoc", [{"end": {"col": 16284, "line": 6, "offset": 16734}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16283, "line": 6, "offset": 16733}}, "n"]]}, "engine_kind": "OSS", "fingerprint": "97f6eb8312ffbef6d5399973eb233153b0e4d76522d0721bf18713959927d052f50fd735fab91a2a3689088bc5da7512f090d247a5ee6259c8e52d24599707f6_0", "is_ignored": false, "lines": "var n=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||Function(\"return this\")()||{},e=Array.prototype,i=Object.prototype,p=\"undefined\"!=typeof Symbol?Symbol.prototype:null,u=e.push,f=e.slice,s=i.toString,o=i.hasOwnProperty,r=Array.isArray,a=Object.keys,t=Object.create,c=n.isNaN,l=n.isFinite,v=function(){};function h(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)}var g=h.VERSION=\"1.10.2\";function y(u,o,n){if(void 0===o)return u;switch(null==n?3:n){case 1:return function(n){return u.call(o,n)};case 3:return function(n,r,t){return u.call(o,n,r,t)};case 4:return function(n,r,t,e){return u.call(o,n,r,t,e)}}return function(){return u.apply(o,arguments)}}function d(n,r,t){return null==n?ur:Cn(n)?y(n,r,t):Ln(n)&&!Kn(n)?ir(n):or(n)}function m(n,r){return d(n,r,1/0)}function b(n,r,t){return h.iteratee!==m?h.iteratee(n,r):d(n,r,t)}function j(u,o){return o=null==o?u.length-1:+o,function(){for(var n=Math.max(arguments.length-o,0),r=Array(n),t=0;t<n;t++)r[t]=arguments[t+o];switch(o){case 0:return u.call(this,r);case 1:return u.call(this,arguments[0],r);case 2:return u.call(this,arguments[0],arguments[1],r)}var e=Array(o+1);for(t=0;t<o;t++)e[t]=arguments[t];return e[o]=r,u.apply(this,e)}}function _(n){if(!Ln(n))return{};if(t)return t(n);v.prototype=n;var r=new v;return v.prototype=null,r}function w(r){return function(n){return null==n?void 0:n[r]}}function x(n,r){return null!=n&&o.call(n,r)}function S(n,r){for(var t=r.length,e=0;e<t;e++){if(null==n)return;n=n[r[e]]}return t?n:void 0}h.iteratee=m;var A=Math.pow(2,53)-1,O=w(\"length\");function M(n){var r=O(n);return\"number\"==typeof r&&0<=r&&r<=A}function E(n,r,t){var e,u;if(r=y(r,t),M(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var o=Sn(n);for(e=0,u=o.length;e<u;e++)r(n[o[e]],o[e],n)}return n}function N(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=Array(u),i=0;i<u;i++){var a=e?e[i]:i;o[i]=r(n[a],a,n)}return o}function k(f){return function(n,r,t,e){var u=3<=arguments.length;return function(n,r,t,e){var u=!M(n)&&Sn(n),o=(u||n).length,i=0<f?0:o-1;for(e||(t=n[u?u[i]:i],i+=f);0<=i&&i<o;i+=f){var a=u?u[i]:i;t=r(t,n[a],a,n)}return t}(n,y(r,e,4),t,u)}}var I=k(1),T=k(-1);function B(n,r,t){var e=(M(n)?on:Tn)(n,r,t);if(void 0!==e&&-1!==e)return n[e]}function R(n,e,r){var u=[];return e=b(e,r),E(n,function(n,r,t){e(n,r,t)&&u.push(n)}),u}function F(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(!r(n[i],i,n))return!1}return!0}function q(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(r(n[i],i,n))return!0}return!1}function D(n,r,t,e){return M(n)||(n=On(n)),(\"number\"!=typeof t||e)&&(t=0),0<=ln(n,r,t)}var W=j(function(n,t,e){var u,o;return Cn(t)?o=t:Kn(t)&&(u=t.slice(0,-1),t=t[t.length-1]),N(n,function(n){var r=o;if(!r){if(u&&u.length&&(n=S(n,u)),null==n)return;r=n[t]}return null==r?r:r.apply(n,e)})});function z(n,r){return N(n,or(r))}function P(n,e,r){var t,u,o=-1/0,i=-1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&o<t&&(o=t);else e=b(e,r),E(n,function(n,r,t){u=e(n,r,t),(i<u||u===-1/0&&o===-1/0)&&(o=n,i=u)});return o}function K(n,r,t){if(null==r||t)return M(n)||(n=On(n)),n[ar(n.length-1)];var e=M(n)?Dn(n):On(n),u=O(e);r=Math.max(Math.min(r,u),0);for(var o=u-1,i=0;i<r;i++){var a=ar(i,o),f=e[i];e[i]=e[a],e[a]=f}return e.slice(0,r)}function L(i,r){return function(e,u,n){var o=r?[[],[]]:{};return u=b(u,n),E(e,function(n,r){var t=u(n,r,e);i(o,n,t)}),o}}var V=L(function(n,r,t){x(n,t)?n[t].push(r):n[t]=[r]}),C=L(function(n,r,t){n[t]=r}),J=L(function(n,r,t){x(n,t)?n[t]++:n[t]=1}),U=/[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;var $=L(function(n,r,t){n[t?0:1].push(r)},!0);function G(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[0]:H(n,n.length-r)}function H(n,r,t){return f.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))}function Q(n,r,t){return f.call(n,null==r||t?1:r)}function X(n,r,t,e){for(var u=(e=e||[]).length,o=0,i=O(n);o<i;o++){var a=n[o];if(M(a)&&(Kn(a)||Vn(a)))if(r)for(var f=0,c=a.length;f<c;)e[u++]=a[f++];else X(a,r,t,e),u=e.length;else t||(e[u++]=a)}return e}var Y=j(function(n,r){return rn(n,r)});function Z(n,r,t,e){er(r)||(e=t,t=r,r=!1),null!=t&&(t=b(t,e));for(var u=[],o=[],i=0,a=O(n);i<a;i++){var f=n[i],c=t?t(f,i,n):f;r&&!t?(i&&o===c||u.push(f),o=c):t?D(o,c)||(o.push(c),u.push(f)):D(u,f)||u.push(f)}return u}var nn=j(function(n){return Z(X(n,!0,!0))});var rn=j(function(n,r){return r=X(r,!0,!0),R(n,function(n){return!D(r,n)})});function tn(n){for(var r=n&&P(n,O).length||0,t=Array(r),e=0;e<r;e++)t[e]=z(n,e);return t}var en=j(tn);function un(o){return function(n,r,t){r=b(r,t);for(var e=O(n),u=0<o?0:e-1;0<=u&&u<e;u+=o)if(r(n[u],u,n))return u;return-1}}var on=un(1),an=un(-1);function fn(n,r,t,e){for(var u=(t=b(t,e,1))(r),o=0,i=O(n);o<i;){var a=Math.floor((o+i)/2);t(n[a])<u?o=a+1:i=a}return o}function cn(o,i,a){return function(n,r,t){var e=0,u=O(n);if(\"number\"==typeof t)0<o?e=0<=t?t:Math.max(t+u,e):u=0<=t?Math.min(t+1,u):t+u+1;else if(a&&t&&u)return n[t=a(n,r)]===r?t:-1;if(r!=r)return 0<=(t=i(f.call(n,e,u),tr))?t+e:-1;for(t=0<o?e:u-1;0<=t&&t<u;t+=o)if(n[t]===r)return t;return-1}}var ln=cn(1,on,fn),pn=cn(-1,an);function sn(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var o=_(n.prototype),i=n.apply(o,u);return Ln(i)?i:o}var vn=j(function(r,t,e){if(!Cn(r))throw new TypeError(\"Bind must be called on a function\");var u=j(function(n){return sn(r,u,t,this,e.concat(n))});return u}),hn=j(function(u,o){var i=hn.placeholder,a=function(){for(var n=0,r=o.length,t=Array(r),e=0;e<r;e++)t[e]=o[e]===i?arguments[n++]:o[e];for(;n<arguments.length;)t.push(arguments[n++]);return sn(u,a,this,this,t)};return a});hn.placeholder=h;var gn=j(function(n,r){var t=(r=X(r,!1,!1)).length;if(t<1)throw new Error(\"bindAll must be passed function names\");for(;t--;){var e=r[t];n[e]=vn(n[e],n)}});var yn=j(function(n,r,t){return setTimeout(function(){return n.apply(null,t)},r)}),dn=hn(yn,h,1);function mn(n){return function(){return!n.apply(this,arguments)}}function bn(n,r){var t;return function(){return 0<--n&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}}var jn=hn(bn,2),_n=!{toString:null}.propertyIsEnumerable(\"toString\"),wn=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"];function xn(n,r){var t=wn.length,e=n.constructor,u=Cn(e)&&e.prototype||i,o=\"constructor\";for(x(n,o)&&!D(r,o)&&r.push(o);t--;)(o=wn[t])in n&&n[o]!==u[o]&&!D(r,o)&&r.push(o)}function Sn(n){if(!Ln(n))return[];if(a)return a(n);var r=[];for(var t in n)x(n,t)&&r.push(t);return _n&&xn(n,r),r}function An(n){if(!Ln(n))return[];var r=[];for(var t in n)r.push(t);return _n&&xn(n,r),r}function On(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e}function Mn(n){for(var r={},t=Sn(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r}function En(n){var r=[];for(var t in n)Cn(n[t])&&r.push(t);return r.sort()}function Nn(f,c){return function(n){var r=arguments.length;if(c&&(n=Object(n)),r<2||null==n)return n;for(var t=1;t<r;t++)for(var e=arguments[t],u=f(e),o=u.length,i=0;i<o;i++){var a=u[i];c&&void 0!==n[a]||(n[a]=e[a])}return n}}var kn=Nn(An),In=Nn(Sn);function Tn(n,r,t){r=b(r,t);for(var e,u=Sn(n),o=0,i=u.length;o<i;o++)if(r(n[e=u[o]],e,n))return e}function Bn(n,r,t){return r in t}var Rn=j(function(n,r){var t={},e=r[0];if(null==n)return t;Cn(e)?(1<r.length&&(e=y(e,r[1])),r=An(n)):(e=Bn,r=X(r,!1,!1),n=Object(n));for(var u=0,o=r.length;u<o;u++){var i=r[u],a=n[i];e(a,i,n)&&(t[i]=a)}return t}),Fn=j(function(n,t){var r,e=t[0];return Cn(e)?(e=mn(e),1<t.length&&(r=t[1])):(t=N(X(t,!1,!1),String),e=function(n,r){return!D(t,r)}),Rn(n,e,r)}),qn=Nn(An,!0);function Dn(n){return Ln(n)?Kn(n)?n.slice():kn({},n):n}function Wn(n,r){var t=Sn(r),e=t.length;if(null==n)return!e;for(var u=Object(n),o=0;o<e;o++){var i=t[o];if(r[i]!==u[i]||!(i in u))return!1}return!0}function zn(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return!1;if(n!=n)return r!=r;var u=typeof n;return(\"function\"===u||\"object\"===u||\"object\"==typeof r)&&function(n,r,t,e){n instanceof h&&(n=n._wrapped);r instanceof h&&(r=r._wrapped);var u=s.call(n);if(u!==s.call(r))return!1;switch(u){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+r;case\"[object Number]\":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case\"[object Date]\":case\"[object Boolean]\":return+n==+r;case\"[object Symbol]\":return p.valueOf.call(n)===p.valueOf.call(r)}var o=\"[object Array]\"===u;if(!o){if(\"object\"!=typeof n||\"object\"!=typeof r)return!1;var i=n.constructor,a=r.constructor;if(i!==a&&!(Cn(i)&&i instanceof i&&Cn(a)&&a instanceof a)&&\"constructor\"in n&&\"constructor\"in r)return!1}e=e||[];var f=(t=t||[]).length;for(;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),o){if((f=n.length)!==r.length)return!1;for(;f--;)if(!zn(n[f],r[f],t,e))return!1}else{var c,l=Sn(n);if(f=l.length,Sn(r).length!==f)return!1;for(;f--;)if(c=l[f],!x(r,c)||!zn(n[c],r[c],t,e))return!1}return t.pop(),e.pop(),!0}(n,r,t,e)}function Pn(r){return function(n){return s.call(n)===\"[object \"+r+\"]\"}}var Kn=r||Pn(\"Array\");function Ln(n){var r=typeof n;return\"function\"===r||\"object\"===r&&!!n}var Vn=Pn(\"Arguments\"),Cn=Pn(\"Function\"),Jn=Pn(\"String\"),Un=Pn(\"Number\"),$n=Pn(\"Date\"),Gn=Pn(\"RegExp\"),Hn=Pn(\"Error\"),Qn=Pn(\"Symbol\"),Xn=Pn(\"Map\"),Yn=Pn(\"WeakMap\"),Zn=Pn(\"Set\"),nr=Pn(\"WeakSet\");!function(){Vn(arguments)||(Vn=function(n){return x(n,\"callee\")})}();var rr=n.document&&n.document.childNodes;function tr(n){return Un(n)&&c(n)}function er(n){return!0===n||!1===n||\"[object Boolean]\"===s.call(n)}function ur(n){return n}function or(r){return Kn(r)?function(n){return S(n,r)}:w(r)}function ir(r){return r=In({},r),function(n){return Wn(n,r)}}function ar(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))}\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&\"function\"!=typeof rr&&(Cn=function(n){return\"function\"==typeof n||!1});var fr=Date.now||function(){return(new Date).getTime()},cr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},lr=Mn(cr);function pr(r){var t=function(n){return r[n]},n=\"(?:\"+Sn(r).join(\"|\")+\")\",e=RegExp(n),u=RegExp(n,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,t):n}}var sr=pr(cr),vr=pr(lr);var hr=0;var gr=h.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g},yr=/(.)^/,dr={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},mr=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,br=function(n){return\"\\\\\"+dr[n]};function jr(n,r){return n._chain?h(r).chain():r}function _r(t){return E(En(t),function(n){var r=h[n]=t[n];h.prototype[n]=function(){var n=[this._wrapped];return u.apply(n,arguments),jr(this,r.apply(h,n))}}),h}E([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(r){var t=e[r];h.prototype[r]=function(){var n=this._wrapped;return t.apply(n,arguments),\"shift\"!==r&&\"splice\"!==r||0!==n.length||delete n[0],jr(this,n)}}),E([\"concat\",\"join\",\"slice\"],function(n){var r=e[n];h.prototype[n]=function(){return jr(this,r.apply(this._wrapped,arguments))}}),h.prototype.valueOf=h.prototype.toJSON=h.prototype.value=function(){return this._wrapped},h.prototype.toString=function(){return String(this._wrapped)};var wr=_r({default:h,VERSION:g,iteratee:m,restArguments:j,each:E,forEach:E,map:N,collect:N,reduce:I,foldl:I,inject:I,reduceRight:T,foldr:T,find:B,detect:B,filter:R,select:R,reject:function(n,r,t){return R(n,mn(b(r)),t)},every:F,all:F,some:q,any:q,contains:D,includes:D,include:D,invoke:W,pluck:z,where:function(n,r){return R(n,ir(r))},findWhere:function(n,r){return B(n,ir(r))},max:P,min:function(n,e,r){var t,u,o=1/0,i=1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&t<o&&(o=t);else e=b(e,r),E(n,function(n,r,t){((u=e(n,r,t))<i||u===1/0&&o===1/0)&&(o=n,i=u)});return o},shuffle:function(n){return K(n,1/0)},sample:K,sortBy:function(n,e,r){var u=0;return e=b(e,r),z(N(n,function(n,r,t){return{value:n,index:u++,criteria:e(n,r,t)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(e<t||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),\"value\")},groupBy:V,indexBy:C,countBy:J,toArray:function(n){return n?Kn(n)?f.call(n):Jn(n)?n.match(U):M(n)?N(n,ur):On(n):[]},size:function(n){return null==n?0:M(n)?n.length:Sn(n).length},partition:$,first:G,head:G,take:G,initial:H,last:function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[n.length-1]:Q(n,Math.max(0,n.length-r))},rest:Q,tail:Q,drop:Q,compact:function(n){return R(n,Boolean)},flatten:function(n,r){return X(n,r,!1)},without:Y,uniq:Z,unique:Z,union:nn,intersection:function(n){for(var r=[],t=arguments.length,e=0,u=O(n);e<u;e++){var o=n[e];if(!D(r,o)){var i;for(i=1;i<t&&D(arguments[i],o);i++);i===t&&r.push(o)}}return r},difference:rn,unzip:tn,zip:en,object:function(n,r){for(var t={},e=0,u=O(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t},findIndex:on,findLastIndex:an,sortedIndex:fn,indexOf:ln,lastIndexOf:pn,range:function(n,r,t){null==r&&(r=n||0,n=0),t||(t=r<n?-1:1);for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),o=0;o<e;o++,n+=t)u[o]=n;return u},chunk:function(n,r){if(null==r||r<1)return[];for(var t=[],e=0,u=n.length;e<u;)t.push(f.call(n,e,e+=r));return t},bind:vn,partial:hn,bindAll:gn,memoize:function(e,u){var o=function(n){var r=o.cache,t=\"\"+(u?u.apply(this,arguments):n);return x(r,t)||(r[t]=e.apply(this,arguments)),r[t]};return o.cache={},o},delay:yn,defer:dn,throttle:function(t,e,u){var o,i,a,f,c=0;u||(u={});var l=function(){c=!1===u.leading?0:fr(),o=null,f=t.apply(i,a),o||(i=a=null)},n=function(){var n=fr();c||!1!==u.leading||(c=n);var r=e-(n-c);return i=this,a=arguments,r<=0||e<r?(o&&(clearTimeout(o),o=null),c=n,f=t.apply(i,a),o||(i=a=null)):o||!1===u.trailing||(o=setTimeout(l,r)),f};return n.cancel=function(){clearTimeout(o),c=0,o=i=a=null},n},debounce:function(t,e,u){var o,i,a=function(n,r){o=null,r&&(i=t.apply(n,r))},n=j(function(n){if(o&&clearTimeout(o),u){var r=!o;o=setTimeout(a,e),r&&(i=t.apply(this,n))}else o=yn(a,e,this,n);return i});return n.cancel=function(){clearTimeout(o),o=null},n},wrap:function(n,r){return hn(r,n)},negate:mn,compose:function(){var t=arguments,e=t.length-1;return function(){for(var n=e,r=t[e].apply(this,arguments);n--;)r=t[n].call(this,r);return r}},after:function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},before:bn,once:jn,keys:Sn,allKeys:An,values:On,mapObject:function(n,r,t){r=b(r,t);for(var e=Sn(n),u=e.length,o={},i=0;i<u;i++){var a=e[i];o[a]=r(n[a],a,n)}return o},pairs:function(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},invert:Mn,functions:En,methods:En,extend:kn,extendOwn:In,assign:In,findKey:Tn,pick:Rn,omit:Fn,defaults:qn,create:function(n,r){var t=_(n);return r&&In(t,r),t},clone:Dn,tap:function(n,r){return r(n),n},isMatch:Wn,isEqual:function(n,r){return zn(n,r)},isEmpty:function(n){return null==n||(M(n)&&(Kn(n)||Jn(n)||Vn(n))?0===n.length:0===Sn(n).length)},isElement:function(n){return!(!n||1!==n.nodeType)},isArray:Kn,isObject:Ln,isArguments:Vn,isFunction:Cn,isString:Jn,isNumber:Un,isDate:$n,isRegExp:Gn,isError:Hn,isSymbol:Qn,isMap:Xn,isWeakMap:Yn,isSet:Zn,isWeakSet:nr,isFinite:function(n){return!Qn(n)&&l(n)&&!c(parseFloat(n))},isNaN:tr,isBoolean:er,isNull:function(n){return null===n},isUndefined:function(n){return void 0===n},has:function(n,r){if(!Kn(r))return x(n,r);for(var t=r.length,e=0;e<t;e++){var u=r[e];if(null==n||!o.call(n,u))return!1;n=n[u]}return!!t},identity:ur,constant:function(n){return function(){return n}},noop:function(){},property:or,propertyOf:function(r){return null==r?function(){}:function(n){return Kn(n)?S(r,n):r[n]}},matcher:ir,matches:ir,times:function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},random:ar,now:fr,escape:sr,unescape:vr,result:function(n,r,t){Kn(r)||(r=[r]);var e=r.length;if(!e)return Cn(t)?t.call(n):t;for(var u=0;u<e;u++){var o=null==n?void 0:n[r[u]];void 0===o&&(o=t,u=e),n=Cn(o)?o.call(n):o}return n},uniqueId:function(n){var r=++hr+\"\";return n?n+r:r},templateSettings:gr,template:function(o,n,r){!n&&r&&(n=r),n=qn({},n,h.templateSettings);var t,e=RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";o.replace(e,function(n,r,t,e,u){return a+=o.slice(i,u).replace(mr,br),i=u+n.length,r?a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\":t?a+=\"'+\\n((__t=(\"+t+\"))==null?'':__t)+\\n'\":e&&(a+=\"';\\n\"+e+\"\\n__p+='\"),n}),a+=\"';\\n\",n.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{t=new Function(n.variable||\"obj\",\"_\",a)}catch(n){throw n.source=a,n}var u=function(n){return t.call(this,n,h)},f=n.variable||\"obj\";return u.source=\"function(\"+f+\"){\\n\"+a+\"}\",u},chain:function(n){var r=h(n);return r._chain=!0,r},mixin:_r});return wr._=wr});", "message": "RegExp() called with a `n` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "n", "end": {"col": 16284, "line": 6, "offset": 16734}, "start": {"col": 16283, "line": 6, "offset": 16733}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16339, "line": 6, "offset": 16789}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 16440, "line": 6, "offset": 16890}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "r", "location": {"end": {"col": 16286, "line": 6, "offset": 16736}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16285, "line": 6, "offset": 16735}}}, {"content": "n", "location": {"end": {"col": 16297, "line": 6, "offset": 16747}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16296, "line": 6, "offset": 16746}}}], "taint_sink": ["CliLoc", [{"end": {"col": 16440, "line": 6, "offset": 16890}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16339, "line": 6, "offset": 16789}}, "RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join(\"|\")+\"|$\",\"g\")"]], "taint_source": ["CliLoc", [{"end": {"col": 16286, "line": 6, "offset": 16736}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16285, "line": 6, "offset": 16735}}, "r"]]}, "engine_kind": "OSS", "fingerprint": "b1d9cf897328051c2d525d394902bc47c467e62c8c335b578ef6464eaca0a158873bc752860feeab3f17d3f142015a52bb6e5f5be90762deaf4858bb31bbef07_2", "is_ignored": false, "lines": "var n=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||Function(\"return this\")()||{},e=Array.prototype,i=Object.prototype,p=\"undefined\"!=typeof Symbol?Symbol.prototype:null,u=e.push,f=e.slice,s=i.toString,o=i.hasOwnProperty,r=Array.isArray,a=Object.keys,t=Object.create,c=n.isNaN,l=n.isFinite,v=function(){};function h(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)}var g=h.VERSION=\"1.10.2\";function y(u,o,n){if(void 0===o)return u;switch(null==n?3:n){case 1:return function(n){return u.call(o,n)};case 3:return function(n,r,t){return u.call(o,n,r,t)};case 4:return function(n,r,t,e){return u.call(o,n,r,t,e)}}return function(){return u.apply(o,arguments)}}function d(n,r,t){return null==n?ur:Cn(n)?y(n,r,t):Ln(n)&&!Kn(n)?ir(n):or(n)}function m(n,r){return d(n,r,1/0)}function b(n,r,t){return h.iteratee!==m?h.iteratee(n,r):d(n,r,t)}function j(u,o){return o=null==o?u.length-1:+o,function(){for(var n=Math.max(arguments.length-o,0),r=Array(n),t=0;t<n;t++)r[t]=arguments[t+o];switch(o){case 0:return u.call(this,r);case 1:return u.call(this,arguments[0],r);case 2:return u.call(this,arguments[0],arguments[1],r)}var e=Array(o+1);for(t=0;t<o;t++)e[t]=arguments[t];return e[o]=r,u.apply(this,e)}}function _(n){if(!Ln(n))return{};if(t)return t(n);v.prototype=n;var r=new v;return v.prototype=null,r}function w(r){return function(n){return null==n?void 0:n[r]}}function x(n,r){return null!=n&&o.call(n,r)}function S(n,r){for(var t=r.length,e=0;e<t;e++){if(null==n)return;n=n[r[e]]}return t?n:void 0}h.iteratee=m;var A=Math.pow(2,53)-1,O=w(\"length\");function M(n){var r=O(n);return\"number\"==typeof r&&0<=r&&r<=A}function E(n,r,t){var e,u;if(r=y(r,t),M(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var o=Sn(n);for(e=0,u=o.length;e<u;e++)r(n[o[e]],o[e],n)}return n}function N(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=Array(u),i=0;i<u;i++){var a=e?e[i]:i;o[i]=r(n[a],a,n)}return o}function k(f){return function(n,r,t,e){var u=3<=arguments.length;return function(n,r,t,e){var u=!M(n)&&Sn(n),o=(u||n).length,i=0<f?0:o-1;for(e||(t=n[u?u[i]:i],i+=f);0<=i&&i<o;i+=f){var a=u?u[i]:i;t=r(t,n[a],a,n)}return t}(n,y(r,e,4),t,u)}}var I=k(1),T=k(-1);function B(n,r,t){var e=(M(n)?on:Tn)(n,r,t);if(void 0!==e&&-1!==e)return n[e]}function R(n,e,r){var u=[];return e=b(e,r),E(n,function(n,r,t){e(n,r,t)&&u.push(n)}),u}function F(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(!r(n[i],i,n))return!1}return!0}function q(n,r,t){r=b(r,t);for(var e=!M(n)&&Sn(n),u=(e||n).length,o=0;o<u;o++){var i=e?e[o]:o;if(r(n[i],i,n))return!0}return!1}function D(n,r,t,e){return M(n)||(n=On(n)),(\"number\"!=typeof t||e)&&(t=0),0<=ln(n,r,t)}var W=j(function(n,t,e){var u,o;return Cn(t)?o=t:Kn(t)&&(u=t.slice(0,-1),t=t[t.length-1]),N(n,function(n){var r=o;if(!r){if(u&&u.length&&(n=S(n,u)),null==n)return;r=n[t]}return null==r?r:r.apply(n,e)})});function z(n,r){return N(n,or(r))}function P(n,e,r){var t,u,o=-1/0,i=-1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&o<t&&(o=t);else e=b(e,r),E(n,function(n,r,t){u=e(n,r,t),(i<u||u===-1/0&&o===-1/0)&&(o=n,i=u)});return o}function K(n,r,t){if(null==r||t)return M(n)||(n=On(n)),n[ar(n.length-1)];var e=M(n)?Dn(n):On(n),u=O(e);r=Math.max(Math.min(r,u),0);for(var o=u-1,i=0;i<r;i++){var a=ar(i,o),f=e[i];e[i]=e[a],e[a]=f}return e.slice(0,r)}function L(i,r){return function(e,u,n){var o=r?[[],[]]:{};return u=b(u,n),E(e,function(n,r){var t=u(n,r,e);i(o,n,t)}),o}}var V=L(function(n,r,t){x(n,t)?n[t].push(r):n[t]=[r]}),C=L(function(n,r,t){n[t]=r}),J=L(function(n,r,t){x(n,t)?n[t]++:n[t]=1}),U=/[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;var $=L(function(n,r,t){n[t?0:1].push(r)},!0);function G(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[0]:H(n,n.length-r)}function H(n,r,t){return f.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))}function Q(n,r,t){return f.call(n,null==r||t?1:r)}function X(n,r,t,e){for(var u=(e=e||[]).length,o=0,i=O(n);o<i;o++){var a=n[o];if(M(a)&&(Kn(a)||Vn(a)))if(r)for(var f=0,c=a.length;f<c;)e[u++]=a[f++];else X(a,r,t,e),u=e.length;else t||(e[u++]=a)}return e}var Y=j(function(n,r){return rn(n,r)});function Z(n,r,t,e){er(r)||(e=t,t=r,r=!1),null!=t&&(t=b(t,e));for(var u=[],o=[],i=0,a=O(n);i<a;i++){var f=n[i],c=t?t(f,i,n):f;r&&!t?(i&&o===c||u.push(f),o=c):t?D(o,c)||(o.push(c),u.push(f)):D(u,f)||u.push(f)}return u}var nn=j(function(n){return Z(X(n,!0,!0))});var rn=j(function(n,r){return r=X(r,!0,!0),R(n,function(n){return!D(r,n)})});function tn(n){for(var r=n&&P(n,O).length||0,t=Array(r),e=0;e<r;e++)t[e]=z(n,e);return t}var en=j(tn);function un(o){return function(n,r,t){r=b(r,t);for(var e=O(n),u=0<o?0:e-1;0<=u&&u<e;u+=o)if(r(n[u],u,n))return u;return-1}}var on=un(1),an=un(-1);function fn(n,r,t,e){for(var u=(t=b(t,e,1))(r),o=0,i=O(n);o<i;){var a=Math.floor((o+i)/2);t(n[a])<u?o=a+1:i=a}return o}function cn(o,i,a){return function(n,r,t){var e=0,u=O(n);if(\"number\"==typeof t)0<o?e=0<=t?t:Math.max(t+u,e):u=0<=t?Math.min(t+1,u):t+u+1;else if(a&&t&&u)return n[t=a(n,r)]===r?t:-1;if(r!=r)return 0<=(t=i(f.call(n,e,u),tr))?t+e:-1;for(t=0<o?e:u-1;0<=t&&t<u;t+=o)if(n[t]===r)return t;return-1}}var ln=cn(1,on,fn),pn=cn(-1,an);function sn(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var o=_(n.prototype),i=n.apply(o,u);return Ln(i)?i:o}var vn=j(function(r,t,e){if(!Cn(r))throw new TypeError(\"Bind must be called on a function\");var u=j(function(n){return sn(r,u,t,this,e.concat(n))});return u}),hn=j(function(u,o){var i=hn.placeholder,a=function(){for(var n=0,r=o.length,t=Array(r),e=0;e<r;e++)t[e]=o[e]===i?arguments[n++]:o[e];for(;n<arguments.length;)t.push(arguments[n++]);return sn(u,a,this,this,t)};return a});hn.placeholder=h;var gn=j(function(n,r){var t=(r=X(r,!1,!1)).length;if(t<1)throw new Error(\"bindAll must be passed function names\");for(;t--;){var e=r[t];n[e]=vn(n[e],n)}});var yn=j(function(n,r,t){return setTimeout(function(){return n.apply(null,t)},r)}),dn=hn(yn,h,1);function mn(n){return function(){return!n.apply(this,arguments)}}function bn(n,r){var t;return function(){return 0<--n&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}}var jn=hn(bn,2),_n=!{toString:null}.propertyIsEnumerable(\"toString\"),wn=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"];function xn(n,r){var t=wn.length,e=n.constructor,u=Cn(e)&&e.prototype||i,o=\"constructor\";for(x(n,o)&&!D(r,o)&&r.push(o);t--;)(o=wn[t])in n&&n[o]!==u[o]&&!D(r,o)&&r.push(o)}function Sn(n){if(!Ln(n))return[];if(a)return a(n);var r=[];for(var t in n)x(n,t)&&r.push(t);return _n&&xn(n,r),r}function An(n){if(!Ln(n))return[];var r=[];for(var t in n)r.push(t);return _n&&xn(n,r),r}function On(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e}function Mn(n){for(var r={},t=Sn(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r}function En(n){var r=[];for(var t in n)Cn(n[t])&&r.push(t);return r.sort()}function Nn(f,c){return function(n){var r=arguments.length;if(c&&(n=Object(n)),r<2||null==n)return n;for(var t=1;t<r;t++)for(var e=arguments[t],u=f(e),o=u.length,i=0;i<o;i++){var a=u[i];c&&void 0!==n[a]||(n[a]=e[a])}return n}}var kn=Nn(An),In=Nn(Sn);function Tn(n,r,t){r=b(r,t);for(var e,u=Sn(n),o=0,i=u.length;o<i;o++)if(r(n[e=u[o]],e,n))return e}function Bn(n,r,t){return r in t}var Rn=j(function(n,r){var t={},e=r[0];if(null==n)return t;Cn(e)?(1<r.length&&(e=y(e,r[1])),r=An(n)):(e=Bn,r=X(r,!1,!1),n=Object(n));for(var u=0,o=r.length;u<o;u++){var i=r[u],a=n[i];e(a,i,n)&&(t[i]=a)}return t}),Fn=j(function(n,t){var r,e=t[0];return Cn(e)?(e=mn(e),1<t.length&&(r=t[1])):(t=N(X(t,!1,!1),String),e=function(n,r){return!D(t,r)}),Rn(n,e,r)}),qn=Nn(An,!0);function Dn(n){return Ln(n)?Kn(n)?n.slice():kn({},n):n}function Wn(n,r){var t=Sn(r),e=t.length;if(null==n)return!e;for(var u=Object(n),o=0;o<e;o++){var i=t[o];if(r[i]!==u[i]||!(i in u))return!1}return!0}function zn(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return!1;if(n!=n)return r!=r;var u=typeof n;return(\"function\"===u||\"object\"===u||\"object\"==typeof r)&&function(n,r,t,e){n instanceof h&&(n=n._wrapped);r instanceof h&&(r=r._wrapped);var u=s.call(n);if(u!==s.call(r))return!1;switch(u){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+r;case\"[object Number]\":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case\"[object Date]\":case\"[object Boolean]\":return+n==+r;case\"[object Symbol]\":return p.valueOf.call(n)===p.valueOf.call(r)}var o=\"[object Array]\"===u;if(!o){if(\"object\"!=typeof n||\"object\"!=typeof r)return!1;var i=n.constructor,a=r.constructor;if(i!==a&&!(Cn(i)&&i instanceof i&&Cn(a)&&a instanceof a)&&\"constructor\"in n&&\"constructor\"in r)return!1}e=e||[];var f=(t=t||[]).length;for(;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),o){if((f=n.length)!==r.length)return!1;for(;f--;)if(!zn(n[f],r[f],t,e))return!1}else{var c,l=Sn(n);if(f=l.length,Sn(r).length!==f)return!1;for(;f--;)if(c=l[f],!x(r,c)||!zn(n[c],r[c],t,e))return!1}return t.pop(),e.pop(),!0}(n,r,t,e)}function Pn(r){return function(n){return s.call(n)===\"[object \"+r+\"]\"}}var Kn=r||Pn(\"Array\");function Ln(n){var r=typeof n;return\"function\"===r||\"object\"===r&&!!n}var Vn=Pn(\"Arguments\"),Cn=Pn(\"Function\"),Jn=Pn(\"String\"),Un=Pn(\"Number\"),$n=Pn(\"Date\"),Gn=Pn(\"RegExp\"),Hn=Pn(\"Error\"),Qn=Pn(\"Symbol\"),Xn=Pn(\"Map\"),Yn=Pn(\"WeakMap\"),Zn=Pn(\"Set\"),nr=Pn(\"WeakSet\");!function(){Vn(arguments)||(Vn=function(n){return x(n,\"callee\")})}();var rr=n.document&&n.document.childNodes;function tr(n){return Un(n)&&c(n)}function er(n){return!0===n||!1===n||\"[object Boolean]\"===s.call(n)}function ur(n){return n}function or(r){return Kn(r)?function(n){return S(n,r)}:w(r)}function ir(r){return r=In({},r),function(n){return Wn(n,r)}}function ar(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))}\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&\"function\"!=typeof rr&&(Cn=function(n){return\"function\"==typeof n||!1});var fr=Date.now||function(){return(new Date).getTime()},cr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},lr=Mn(cr);function pr(r){var t=function(n){return r[n]},n=\"(?:\"+Sn(r).join(\"|\")+\")\",e=RegExp(n),u=RegExp(n,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,t):n}}var sr=pr(cr),vr=pr(lr);var hr=0;var gr=h.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g},yr=/(.)^/,dr={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},mr=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,br=function(n){return\"\\\\\"+dr[n]};function jr(n,r){return n._chain?h(r).chain():r}function _r(t){return E(En(t),function(n){var r=h[n]=t[n];h.prototype[n]=function(){var n=[this._wrapped];return u.apply(n,arguments),jr(this,r.apply(h,n))}}),h}E([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(r){var t=e[r];h.prototype[r]=function(){var n=this._wrapped;return t.apply(n,arguments),\"shift\"!==r&&\"splice\"!==r||0!==n.length||delete n[0],jr(this,n)}}),E([\"concat\",\"join\",\"slice\"],function(n){var r=e[n];h.prototype[n]=function(){return jr(this,r.apply(this._wrapped,arguments))}}),h.prototype.valueOf=h.prototype.toJSON=h.prototype.value=function(){return this._wrapped},h.prototype.toString=function(){return String(this._wrapped)};var wr=_r({default:h,VERSION:g,iteratee:m,restArguments:j,each:E,forEach:E,map:N,collect:N,reduce:I,foldl:I,inject:I,reduceRight:T,foldr:T,find:B,detect:B,filter:R,select:R,reject:function(n,r,t){return R(n,mn(b(r)),t)},every:F,all:F,some:q,any:q,contains:D,includes:D,include:D,invoke:W,pluck:z,where:function(n,r){return R(n,ir(r))},findWhere:function(n,r){return B(n,ir(r))},max:P,min:function(n,e,r){var t,u,o=1/0,i=1/0;if(null==e||\"number\"==typeof e&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,f=(n=M(n)?n:On(n)).length;a<f;a++)null!=(t=n[a])&&t<o&&(o=t);else e=b(e,r),E(n,function(n,r,t){((u=e(n,r,t))<i||u===1/0&&o===1/0)&&(o=n,i=u)});return o},shuffle:function(n){return K(n,1/0)},sample:K,sortBy:function(n,e,r){var u=0;return e=b(e,r),z(N(n,function(n,r,t){return{value:n,index:u++,criteria:e(n,r,t)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(e<t||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),\"value\")},groupBy:V,indexBy:C,countBy:J,toArray:function(n){return n?Kn(n)?f.call(n):Jn(n)?n.match(U):M(n)?N(n,ur):On(n):[]},size:function(n){return null==n?0:M(n)?n.length:Sn(n).length},partition:$,first:G,head:G,take:G,initial:H,last:function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[n.length-1]:Q(n,Math.max(0,n.length-r))},rest:Q,tail:Q,drop:Q,compact:function(n){return R(n,Boolean)},flatten:function(n,r){return X(n,r,!1)},without:Y,uniq:Z,unique:Z,union:nn,intersection:function(n){for(var r=[],t=arguments.length,e=0,u=O(n);e<u;e++){var o=n[e];if(!D(r,o)){var i;for(i=1;i<t&&D(arguments[i],o);i++);i===t&&r.push(o)}}return r},difference:rn,unzip:tn,zip:en,object:function(n,r){for(var t={},e=0,u=O(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t},findIndex:on,findLastIndex:an,sortedIndex:fn,indexOf:ln,lastIndexOf:pn,range:function(n,r,t){null==r&&(r=n||0,n=0),t||(t=r<n?-1:1);for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),o=0;o<e;o++,n+=t)u[o]=n;return u},chunk:function(n,r){if(null==r||r<1)return[];for(var t=[],e=0,u=n.length;e<u;)t.push(f.call(n,e,e+=r));return t},bind:vn,partial:hn,bindAll:gn,memoize:function(e,u){var o=function(n){var r=o.cache,t=\"\"+(u?u.apply(this,arguments):n);return x(r,t)||(r[t]=e.apply(this,arguments)),r[t]};return o.cache={},o},delay:yn,defer:dn,throttle:function(t,e,u){var o,i,a,f,c=0;u||(u={});var l=function(){c=!1===u.leading?0:fr(),o=null,f=t.apply(i,a),o||(i=a=null)},n=function(){var n=fr();c||!1!==u.leading||(c=n);var r=e-(n-c);return i=this,a=arguments,r<=0||e<r?(o&&(clearTimeout(o),o=null),c=n,f=t.apply(i,a),o||(i=a=null)):o||!1===u.trailing||(o=setTimeout(l,r)),f};return n.cancel=function(){clearTimeout(o),c=0,o=i=a=null},n},debounce:function(t,e,u){var o,i,a=function(n,r){o=null,r&&(i=t.apply(n,r))},n=j(function(n){if(o&&clearTimeout(o),u){var r=!o;o=setTimeout(a,e),r&&(i=t.apply(this,n))}else o=yn(a,e,this,n);return i});return n.cancel=function(){clearTimeout(o),o=null},n},wrap:function(n,r){return hn(r,n)},negate:mn,compose:function(){var t=arguments,e=t.length-1;return function(){for(var n=e,r=t[e].apply(this,arguments);n--;)r=t[n].call(this,r);return r}},after:function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},before:bn,once:jn,keys:Sn,allKeys:An,values:On,mapObject:function(n,r,t){r=b(r,t);for(var e=Sn(n),u=e.length,o={},i=0;i<u;i++){var a=e[i];o[a]=r(n[a],a,n)}return o},pairs:function(n){for(var r=Sn(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},invert:Mn,functions:En,methods:En,extend:kn,extendOwn:In,assign:In,findKey:Tn,pick:Rn,omit:Fn,defaults:qn,create:function(n,r){var t=_(n);return r&&In(t,r),t},clone:Dn,tap:function(n,r){return r(n),n},isMatch:Wn,isEqual:function(n,r){return zn(n,r)},isEmpty:function(n){return null==n||(M(n)&&(Kn(n)||Jn(n)||Vn(n))?0===n.length:0===Sn(n).length)},isElement:function(n){return!(!n||1!==n.nodeType)},isArray:Kn,isObject:Ln,isArguments:Vn,isFunction:Cn,isString:Jn,isNumber:Un,isDate:$n,isRegExp:Gn,isError:Hn,isSymbol:Qn,isMap:Xn,isWeakMap:Yn,isSet:Zn,isWeakSet:nr,isFinite:function(n){return!Qn(n)&&l(n)&&!c(parseFloat(n))},isNaN:tr,isBoolean:er,isNull:function(n){return null===n},isUndefined:function(n){return void 0===n},has:function(n,r){if(!Kn(r))return x(n,r);for(var t=r.length,e=0;e<t;e++){var u=r[e];if(null==n||!o.call(n,u))return!1;n=n[u]}return!!t},identity:ur,constant:function(n){return function(){return n}},noop:function(){},property:or,propertyOf:function(r){return null==r?function(){}:function(n){return Kn(n)?S(r,n):r[n]}},matcher:ir,matches:ir,times:function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},random:ar,now:fr,escape:sr,unescape:vr,result:function(n,r,t){Kn(r)||(r=[r]);var e=r.length;if(!e)return Cn(t)?t.call(n):t;for(var u=0;u<e;u++){var o=null==n?void 0:n[r[u]];void 0===o&&(o=t,u=e),n=Cn(o)?o.call(n):o}return n},uniqueId:function(n){var r=++hr+\"\";return n?n+r:r},templateSettings:gr,template:function(o,n,r){!n&&r&&(n=r),n=qn({},n,h.templateSettings);var t,e=RegExp([(n.escape||yr).source,(n.interpolate||yr).source,(n.evaluate||yr).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";o.replace(e,function(n,r,t,e,u){return a+=o.slice(i,u).replace(mr,br),i=u+n.length,r?a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\":t?a+=\"'+\\n((__t=(\"+t+\"))==null?'':__t)+\\n'\":e&&(a+=\"';\\n\"+e+\"\\n__p+='\"),n}),a+=\"';\\n\",n.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{t=new Function(n.variable||\"obj\",\"_\",a)}catch(n){throw n.source=a,n}var u=function(n){return t.call(this,n,h)},f=n.variable||\"obj\";return u.source=\"function(\"+f+\"){\\n\"+a+\"}\",u},chain:function(n){var r=h(n);return r._chain=!0,r},mixin:_r});return wr._=wr});", "message": "RegExp() called with a `r` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "r", "end": {"col": 16286, "line": 6, "offset": 16736}, "start": {"col": 16285, "line": 6, "offset": 16735}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/libs/underscore-min.js", "start": {"col": 16339, "line": 6, "offset": 16789}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 69, "line": 34, "offset": 2357}, "extra": {"engine_kind": "OSS", "fingerprint": "71e8a01646795d5fb1782169e5f8173eaa4a82dd73c36d222bc1cf564e96e87d9018ffc6525ef49c5e8a4865a234cfcbe08d23c0b8a21a18703de65704a84a7e_0", "is_ignored": false, "lines": "            document.getElementById(\"q_container\").innerHTML = html;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "document.getElementById(\"q_container\")", "end": {"col": 51, "line": 34, "offset": 2339}, "start": {"col": 13, "line": 34, "offset": 2301}}, "$HTML": {"abstract_content": "html", "end": {"col": 68, "line": 34, "offset": 2356}, "start": {"col": 64, "line": 34, "offset": 2352}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/js/quiz.js", "start": {"col": 13, "line": 34, "offset": 2301}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 66, "line": 843, "offset": 27348}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "nodeTypes", "location": {"end": {"col": 46, "line": 838, "offset": 27068}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 37, "line": 838, "offset": 27059}}}], "taint_sink": ["CliLoc", [{"end": {"col": 66, "line": 843, "offset": 27348}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 21, "line": 843, "offset": 27303}}, "new RegExp(\"^(\" + nodeTypes.join(\"|\") + \")$\")"]], "taint_source": ["CliLoc", [{"end": {"col": 46, "line": 838, "offset": 27068}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 37, "line": 838, "offset": 27059}}, "nodeTypes"]]}, "engine_kind": "OSS", "fingerprint": "459585f7766f7bca0f588f0a17842cb36fab92e96b4bd497bdcff9e8cc11b23e81d5c1e0a7c73e920870b34eefe7dd1dfd996bd234abd9c6bbec0e947a5293f1_0", "is_ignored": false, "lines": "            regex = new RegExp(\"^(\" + nodeTypes.join(\"|\") + \")$\");", "message": "RegExp() called with a `nodeTypes` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "nodeTypes", "end": {"col": 46, "line": 838, "offset": 27068}, "start": {"col": 37, "line": 838, "offset": 27059}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 21, "line": 843, "offset": 27303}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 40, "line": 1189, "offset": 39949}, "extra": {"engine_kind": "OSS", "fingerprint": "572155e61ecb6f1ad1f788a399d5ce6fddade91dba538abf2aec08d2a0d56ab8f292b1a2687372207fbf6eee2cc03279080668e7f43e7850d0422467f38acf2c_0", "is_ignored": false, "lines": "            el.innerHTML = fragmentStr;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "el", "end": {"col": 15, "line": 1189, "offset": 39924}, "start": {"col": 13, "line": 1189, "offset": 39922}}, "$HTML": {"abstract_content": "fragmentStr", "end": {"col": 39, "line": 1189, "offset": 39948}, "start": {"col": 28, "line": 1189, "offset": 39937}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 13, "line": 1189, "offset": 39922}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 40, "line": 1206, "offset": 40723}, "extra": {"engine_kind": "OSS", "fingerprint": "572155e61ecb6f1ad1f788a399d5ce6fddade91dba538abf2aec08d2a0d56ab8f292b1a2687372207fbf6eee2cc03279080668e7f43e7850d0422467f38acf2c_1", "is_ignored": false, "lines": "            el.innerHTML = fragmentStr;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "el", "end": {"col": 15, "line": 1206, "offset": 40698}, "propagated_value": {"svalue_abstract_content": "doc.createElement(\"body\")", "svalue_end": {"col": 47, "line": 1205, "offset": 40682}, "svalue_start": {"col": 22, "line": 1205, "offset": 40657}}, "start": {"col": 13, "line": 1206, "offset": 40696}}, "$HTML": {"abstract_content": "fragmentStr", "end": {"col": 39, "line": 1206, "offset": 40722}, "start": {"col": 28, "line": 1206, "offset": 40711}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 13, "line": 1206, "offset": 40696}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 82, "line": 4011, "offset": 148582}, "extra": {"engine_kind": "OSS", "fingerprint": "0a6575d7760b28092938f0ba676e7d6e8a7f8a510cf8657346672abfb01726dc8911a33ffa8a7db74ddc667dbbcbccc0f7a726728fd04c7fcdbe663fa1ddb581_0", "is_ignored": false, "lines": "    tempElement.innerHTML = \"<span></span>\" + _convertUrlsToLinks(textNode.data);", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "tempElement", "end": {"col": 16, "line": 4011, "offset": 148516}, "propagated_value": {"svalue_abstract_content": "_getTempElement(parentNode.ownerDocument)", "svalue_end": {"col": 64, "line": 4007, "offset": 148368}, "svalue_start": {"col": 23, "line": 4007, "offset": 148327}}, "start": {"col": 5, "line": 4011, "offset": 148505}}, "$HTML": {"abstract_content": "\"<span></span>\"+_convertUrlsToLinks(textNode.data)", "end": {"col": 81, "line": 4011, "offset": 148581}, "start": {"col": 29, "line": 4011, "offset": 148529}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 5, "line": 4011, "offset": 148505}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 98, "line": 4079, "offset": 150427}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "className", "location": {"end": {"col": 48, "line": 4074, "offset": 150240}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 39, "line": 4074, "offset": 150231}}}], "taint_sink": ["CliLoc", [{"end": {"col": 98, "line": 4079, "offset": 150427}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 51, "line": 4079, "offset": 150380}}, "new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 48, "line": 4074, "offset": 150240}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 39, "line": 4074, "offset": 150231}}, "className"]]}, "engine_kind": "OSS", "fingerprint": "a9b6880ba802c173da2a53c2a778decbe1a600f4e54eb7e5718e1a1a67b189dfe3040500f26f53f1cc40391a2e9f87838a4daf92fd1301de1c5f7bf755e0b6d1_0", "is_ignored": false, "lines": "    element.className = element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \");", "message": "RegExp() called with a `className` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "className", "end": {"col": 48, "line": 4074, "offset": 150240}, "start": {"col": 39, "line": 4074, "offset": 150231}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 51, "line": 4079, "offset": 150380}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 123, "line": 4088, "offset": 150745}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "className", "location": {"end": {"col": 45, "line": 4082, "offset": 150485}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 36, "line": 4082, "offset": 150476}}}], "taint_sink": ["CliLoc", [{"end": {"col": 123, "line": 4088, "offset": 150745}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 78, "line": 4088, "offset": 150700}}, "new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 45, "line": 4082, "offset": 150485}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 36, "line": 4082, "offset": 150476}}, "className"]]}, "engine_kind": "OSS", "fingerprint": "a9b6880ba802c173da2a53c2a778decbe1a600f4e54eb7e5718e1a1a67b189dfe3040500f26f53f1cc40391a2e9f87838a4daf92fd1301de1c5f7bf755e0b6d1_1", "is_ignored": false, "lines": "    return (elementClassName.length > 0 && (elementClassName == className || new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName)));", "message": "RegExp() called with a `className` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 109915, "url": "https://semgrep.dev/playground/r/w8T9nxz/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "w8T9nxz"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "className", "end": {"col": 45, "line": 4082, "offset": 150485}, "start": {"col": 36, "line": 4082, "offset": 150476}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 78, "line": 4088, "offset": 150700}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 40, "line": 4354, "offset": 159943}, "extra": {"engine_kind": "OSS", "fingerprint": "7a6ed4783e224243978d2a228187d9ee60e670ee8c5ef85bfbd397ab58dce3ab31d2b7e04e3a9cde225bb485206871e9a20bc34670ed2363f5d41aa6c9e8ddb7_0", "is_ignored": false, "lines": "    try { tempElement.innerHTML = html; } catch(e) {}", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "tempElement", "end": {"col": 22, "line": 4354, "offset": 159925}, "start": {"col": 11, "line": 4354, "offset": 159914}}, "$HTML": {"abstract_content": "html", "end": {"col": 39, "line": 4354, "offset": 159942}, "start": {"col": 35, "line": 4354, "offset": 159938}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 11, "line": 4354, "offset": 159914}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 36, "line": 4391, "offset": 161251}, "extra": {"engine_kind": "OSS", "fingerprint": "7a6ed4783e224243978d2a228187d9ee60e670ee8c5ef85bfbd397ab58dce3ab31d2b7e04e3a9cde225bb485206871e9a20bc34670ed2363f5d41aa6c9e8ddb7_1", "is_ignored": false, "lines": "      tempElement.innerHTML = html;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "tempElement", "end": {"col": 18, "line": 4391, "offset": 161233}, "propagated_value": {"svalue_abstract_content": "context.createElement(\"div\")", "svalue_end": {"col": 49, "line": 4390, "offset": 161214}, "svalue_start": {"col": 21, "line": 4390, "offset": 161186}}, "start": {"col": 7, "line": 4391, "offset": 161222}}, "$HTML": {"abstract_content": "html", "end": {"col": 35, "line": 4391, "offset": 161250}, "start": {"col": 31, "line": 4391, "offset": 161246}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 7, "line": 4391, "offset": 161222}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 58, "line": 5999, "offset": 214165}, "extra": {"engine_kind": "OSS", "fingerprint": "9dd00db8441bc9a3663ce966fef9cdfd243bc8f3d5f6e39bd044a9aeeeb6a6242afda87710bf066f15a9e32b1f8895cadb2ac8b872e35a725dfd232c6c4f6ad8_0", "is_ignored": false, "lines": "        try { node.innerHTML = wysihtml5.INVISIBLE_SPACE; } catch(e) {}", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "node", "end": {"col": 19, "line": 5999, "offset": 214126}, "start": {"col": 15, "line": 5999, "offset": 214122}}, "$HTML": {"abstract_content": "wysihtml5.INVISIBLE_SPACE", "end": {"col": 57, "line": 5999, "offset": 214164}, "start": {"col": 32, "line": 5999, "offset": 214139}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 15, "line": 5999, "offset": 214122}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 59, "line": 6202, "offset": 220825}, "extra": {"engine_kind": "OSS", "fingerprint": "613f2158e76abbf98b13690a049f11b10ca0cc4670e18a3e18b8d7eb4cb85a049b5361ec3fb9e19fbae29b37c0ce9f4cc1ba223fd003672b51679a6e3ee8f9b6_0", "is_ignored": false, "lines": "            element.innerHTML = wysihtml5.INVISIBLE_SPACE;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "element", "end": {"col": 20, "line": 6202, "offset": 220786}, "propagated_value": {"svalue_abstract_content": "doc.createElement(\"span\")", "svalue_end": {"col": 52, "line": 6200, "offset": 220668}, "svalue_start": {"col": 27, "line": 6200, "offset": 220643}}, "start": {"col": 13, "line": 6202, "offset": 220779}}, "$HTML": {"abstract_content": "wysihtml5.INVISIBLE_SPACE", "end": {"col": 58, "line": 6202, "offset": 220824}, "start": {"col": 33, "line": 6202, "offset": 220799}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 13, "line": 6202, "offset": 220779}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 58, "line": 6695, "offset": 236719}, "extra": {"engine_kind": "OSS", "fingerprint": "9dd00db8441bc9a3663ce966fef9cdfd243bc8f3d5f6e39bd044a9aeeeb6a6242afda87710bf066f15a9e32b1f8895cadb2ac8b872e35a725dfd232c6c4f6ad8_1", "is_ignored": false, "lines": "        try { node.innerHTML = wysihtml5.INVISIBLE_SPACE; } catch(e) {}", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "node", "end": {"col": 19, "line": 6695, "offset": 236680}, "start": {"col": 15, "line": 6695, "offset": 236676}}, "$HTML": {"abstract_content": "wysihtml5.INVISIBLE_SPACE", "end": {"col": 57, "line": 6695, "offset": 236718}, "start": {"col": 32, "line": 6695, "offset": 236693}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 15, "line": 6695, "offset": 236676}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 110, "line": 7940, "offset": 275233}, "extra": {"engine_kind": "OSS", "fingerprint": "16dd81917e64a6c84adbb9439ded1f7da3b67f29f6035aad9264f9770594a7c490f2b015f036dfa69b4d5d70a4d80d78d761f7fb1520e2b533a0a4eb1314f88b_0", "is_ignored": false, "lines": "      this.element.innerHTML = browser.displaysCaretInEmptyContentEditableCorrectly() ? \"\" : this.CARET_HACK;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "this.element", "end": {"col": 19, "line": 7940, "offset": 275142}, "start": {"col": 7, "line": 7940, "offset": 275130}}, "$HTML": {"abstract_content": "browser.displaysCaretInEmptyContentEditableCorrectly()\"\"this.CARET_HACK", "end": {"col": 109, "line": 7940, "offset": 275232}, "start": {"col": 32, "line": 7940, "offset": 275155}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 7, "line": 7940, "offset": 275130}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 37, "line": 7962, "offset": 275874}, "extra": {"engine_kind": "OSS", "fingerprint": "e5ff48283117d580cb86fe14ab54a35f835c8a67d1916a805c1a925aa1a1f2f4d2efa20b648fbf4a1f3d39e3bb02653a954658dd46b8f63f6ecb2ce5198964cf_0", "is_ignored": false, "lines": "      this.element.innerHTML = html;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "this.element", "end": {"col": 19, "line": 7962, "offset": 275856}, "start": {"col": 7, "line": 7962, "offset": 275844}}, "$HTML": {"abstract_content": "html", "end": {"col": 36, "line": 7962, "offset": 275873}, "start": {"col": 32, "line": 7962, "offset": 275869}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 7, "line": 7962, "offset": 275844}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 62, "line": 8056, "offset": 278886}, "extra": {"engine_kind": "OSS", "fingerprint": "4bf8f57dcf798b477ec89434478dc284c941e720455da47e96e319d721b4a79270c9b3f42919fb9a7ded826134ff93f3c20ab0172116a4f34698ace76526689b_0", "is_ignored": false, "lines": "      this.element.innerHTML  = this.textarea.getValue(true);", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 109816, "url": "https://semgrep.dev/playground/r/O9TNO1x/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "O9TNO1x"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "this.element", "end": {"col": 19, "line": 8056, "offset": 278843}, "start": {"col": 7, "line": 8056, "offset": 278831}}, "$HTML": {"abstract_content": "this.textarea.getValue(true)", "end": {"col": 61, "line": 8056, "offset": 278885}, "start": {"col": 33, "line": 8056, "offset": 278857}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "start": {"col": 7, "line": 8056, "offset": 278831}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 44, "offset": 2220}, "extra": {"engine_kind": "OSS", "fingerprint": "b5d71dab8223150c71ad067e82ef80355bb22854b05f21129f123d6baffa6f4e26f6cd858bb39337da161705826c6c0cda5fb9cef76ad5f20d172f583c560428_0", "is_ignored": false, "lines": "            <form th:action=\"@{/login}\" method='POST' style=\"width: 200px;\">\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\" th:text=\"#{username}\">Username</label>\n                    <input autofocus=\"dummy_for_thymeleaf_parser\" type=\"text\" class=\"form-control\"\n                           id=\"exampleInputEmail1\" th:placeholder=\"#{username}\" name='username' />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputPassword1\" th:text=\"#{password}\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" th:placeholder=\"#{password}\"\n                           name='password' />\n                </div>\n                <button class=\"btn btn-primary btn-block\" type=\"submit\" th:text=\"#{sign.in}\">Sign in</button>\n                <div class=\"text-center\"><a th:href=\"@{/registration}\" th:text=\"#{register.new}\"></a></div>\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 53, "line": 31, "offset": 1281}, "start": {"col": 49, "line": 31, "offset": 1277}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webgoat/templates/login.html", "start": {"col": 13, "line": 31, "offset": 1241}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 20, "line": 41, "offset": 1534}, "extra": {"engine_kind": "OSS", "fingerprint": "c403ceae3520eb8b76733843012b70872329eb2f9c502c6575d4424f66a7a3137b935ffb1ac662ddcba6f3ad2f7b4c46d7c0fdfae327d61ae7a891422865e7d3_0", "is_ignored": false, "lines": "            <form th:action=\"@{/fileupload}\" method=\"post\" enctype=\"multipart/form-data\">\n                <fieldset>\n                    <div class=\"mb-3\">\n                        <input type=\"file\" class=\"form-control\" name=\"file\"/>\n                    </div>\n                    <div class=\"mb-3\">\n                        <button type=\"submit\" class=\"btn btn-md btn-primary\">Upload files</button>\n                    </div>\n                </fieldset>\n            </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 252099, "url": "https://semgrep.dev/playground/r/RGTevKN/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "RGTevKN"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["guardrail"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 58, "line": 32, "offset": 1118}, "start": {"col": 54, "line": 32, "offset": 1114}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "src/main/resources/webwolf/templates/files.html", "start": {"col": 13, "line": 32, "offset": 1073}}], "skipped_rules": [], "version": "1.68.0"}
